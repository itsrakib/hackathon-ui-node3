{"version":3,"sources":["assets/images/login-graphic.svg","assets/images/user-picture.svg","assets/images/username-icon.svg","assets/images/open-your-account-graphic.svg","assets/images/process-orment-account-graphic.svg","assets/images/validate-your-credit-card-graphic.svg","assets/images/request-chequebook-graphic.svg","assets/images/country-icon.svg","assets/images/bank-icon.svg","assets/images/account-type-icon.svg","assets/images/rule-selection.svg","assets/images/rule-analysis.svg","assets/images/rule-dashboard.svg","assets/images/manage-rules.svg","reducers/authentication-reducer.js","actions/authentication/type.js","reducers/open-your-account-reducer.js","actions/open-your-account/type.js","reducers/create-your-account-configuration-reducer.js","actions/create-your-account-configuration/type.js","reducers/select-master-configuration-reducer.js","actions/configure-select-master/type.js","reducers/dashboard-reducer.js","actions/dashboard/type.js","reducers/dormat-account-configuration-reducer.js","actions/configure-dormat-account/type.js","reducers/dormat-account-reducer.js","actions/dormat-account/type.js","reducers/chequebook-configuration-reducer.js","actions/configure-chequebook-request/type.js","reducers/chequebook-reducer.js","actions/chequebook/type.js","reducers/configure-credit-card-reducer.js","actions/configure-credit-card/type.js","reducers/credit-card-reducer.js","actions/credit-card/type.js","reducers/transaction-analyser-reducer.js","actions/transaction-analyser/type.js","store.js","services/api-call-config.js","services/index.js","app-modules/authentication-module/pages/login/login.js","actions/authentication/index.js","actions/authentication/authentication.js","app-modules/authentication-module/pages/registration/registration.js","app-modules/authentication-module/index.js","reusable-components/charts/re-bar-chart.js","app-modules/dashboard-module/pages/dashboard/dashboard.js","app-modules/dashboard-module/index.js","actions/dashboard/index.js","actions/dashboard/dasboard.js","reusable-components/CustomForm/index.js","app-modules/open-your-account-module/pages/open-your-account/open-your-account.js","app-modules/open-your-account-module/index.js","actions/open-your-account/index.js","actions/open-your-account/open-your-account.js","app-modules/superadmin-dashboard-module/index.js","app-modules/superadmin-dashboard-module/pages/superadmin-dashboard/superadmin-dashboard.js","app-modules/configure-create-your-account-module/pages/configure-create-your-account/configure-create-your-account.js","app-modules/configure-create-your-account-module/index.js","actions/create-your-account-configuration/index.js","actions/create-your-account-configuration/create-your-account-configuration.js","app-modules/configure-select-master-module/pages/configure-select-master/configure-select-master.js","app-modules/configure-select-master-module/index.js","actions/configure-select-master/index.js","actions/configure-select-master/configure-select-master.js","app-modules/configure-dormat-account-module/pages/configure-dormat-account/configure-dormat-account.js","app-modules/configure-dormat-account-module/index.js","actions/configure-dormat-account/index.js","actions/configure-dormat-account/configure-dormat-account.js","app-modules/dormat-account-module/pages/dormat-account/dormat-account.js","app-modules/dormat-account-module/index.js","actions/dormat-account/index.js","actions/dormat-account/dormat-account.js","app-modules/configure-cheque-book-module/pages/configure-cheque-book/configure-cheque-book.js","app-modules/configure-cheque-book-module/index.js","actions/configure-chequebook-request/index.js","actions/configure-chequebook-request/configure-chequebook-request.js","app-modules/cheque-book-module/pages/cheque-book/cheque-book.js","app-modules/cheque-book-module/index.js","actions/chequebook/index.js","actions/chequebook/chequebook.js","app-modules/configure-credit-card-module/pages/configure-credit-card/configure-credit-card.js","app-modules/configure-credit-card-module/index.js","actions/configure-credit-card/index.js","actions/configure-credit-card/configure-credit-card.js","app-modules/credit-card-module/pages/credit-card/credit-card.js","app-modules/credit-card-module/index.js","actions/credit-card/index.js","actions/credit-card/credit-card.js","app-modules/transaction-analyzer-module/pages/card-transaction-rules.js","app-modules/transaction-analyzer-module/pages/transaction-report.js","app-modules/transaction-analyzer-module/pages/risk-dashboard.js","app-modules/index.js","app-modules/transaction-analyzer-module/index.js","actions/transaction-analyser/index.js","actions/transaction-analyser/transaction-analyser.js","core-components/header/header.js","core-components/sidebar/sidebar.js","core-components/superadmin-sidebar/superadmin-sidebar.js","App.js","serviceWorker.js","index.js","reducers/reducers.js","app-constant/api-constant.js"],"names":["module","exports","defaultState","userInfo","isLoading","isError","error","AUTHENTICATIONsReducer","state","JSON","parse","stringify","action","type","payload","openYourAccountData","OpenAccountReducer","openYourAccountSchemaData","createYourAccountConfigData","CreateYourAccountConfigationReducer","createYourAccountConfigResponseData","CreateSelectMasterReducer","loadSelectMasterData","saveSelectMasterResponse","createAccountData","dormantAccountData","chequebookData","creditCardData","DashboardReducer","dormatAccountConfigData","DormatAccountConfigurationReducer","dormatAccountConfigResponseData","dormatAccountData","DormatAccountReducer","dormatAccountSchemaData","chequebookConfigData","ChequebookConfigurationReducer","chequebookConfigResponseData","ChequebookReducer","chequebookSchemaData","creditCardConfigSchemaData","ConfigureCreditCardReducer","creditCardConfigResponseData","CreditCardReducer","creditCardSchemaData","FraudTransactionList","TransactionAnalyserReducer","middlewares","thunk","logger","APICallConfig","callAPIService","APIName","parameter","APIInfo","endPoint","then","response","get","http","generateAPIParameterWithURL","url","headerOptions","headerType","data","catch","Promise","reject","post","headers","Authorization","window","sessionStorage","getItem","delete","pathParameters","parameterBody","resPathParamURL","join","parameters","Object","keys","forEach","key","index","console","log","Login","props","changeDataField","e","setState","target","name","value","onSignInSubmit","event","preventDefault","username","password","isFormValid","errorMsg","requestPayload","doSignin","token","role","setItem","bank_id","country_id","history","push","onEmailVerificationSubmit","email","submittedObj","doEmailVerification","invalidEmail","doToggleEmailModal","doToggleOtpModal","onOtpVerificationSubmit","otpData","otp","doOtpVerification","invalidOtp","toggleEmailModal","toggleOtpModal","id","className","src","LOGIN_GRAPHIC","alt","onSubmit","this","placeholder","onChange","htmlFor","href","onClick","Modal","size","show","onHide","Header","closeButton","Title","Body","required","Footer","successMsg","Component","defaultProps","withRouter","connect","authenticationReducer","loginData","dispatch","Services","doSigninError","emailData","doEmailVerificationError","doOtpVerificationError","Registration","pages","routeProps","path","component","ReBarChart","barData","barChartInfo","titleClass","title","width","height","strokeDasharray","dataKey","barFillColors","map","fill","values","PureComponent","Dashboard","Synced","NonSynced","dormantBarChartInfo","chekbookBarChartInfo","creditCardBarChartInfo","loadBarData","loadDormantBarData","loadChequebookBarData","loadCreditCardBarData","dashboardAll","barchartInfo","dormantBarData","chequeBarData","creditBarData","OPEN_YOUR_ACCONT","to","PROCESS_ORMENT_ACCOUNT","VALIDATE_CREDIT_CARD","REQUEST_CHECKBOOK","loadBarDetailsError","loadDormantBarDetailsError","loadChequebookBarDetailsError","loadCreditCardBarDetailsError","CustomForm","showFileuploadPOI","showImagePopup","initialState","validateInput","fieldRef","fieldName","fieldVal","test","setCustomValidity","onFileChange","formKey","URL","createObjectURL","files","formData","FormData","append","showHideImagePopup","captureImage","capturedImage","webcamRef","current","getScreenshot","file","DataURIToBlob","dataURI","splitDataURI","split","byteString","indexOf","atob","decodeURI","mimeString","ia","Uint8Array","length","i","charCodeAt","Blob","sigPad","clearSignaturePad","clear","captureSignature","trimmedDataURL","getTrimmedCanvas","toDataURL","doTogglePOIModal","renderColumns","row","column","validations","label","input","onInvalid","ref","penColor","backgroundColor","maxWidth","style","aria-labelledby","audio","screenshotFormat","imageSmoothing","float","options","option","checked","class","allLables","val","gridColumns","gridColumn","Fragment","data-toggle","aria-haspopup","aria-expanded","renderForm","undefined","model","data-target","aria-controls","groupName","data-parent","columns","found","find","d","filter","existing","createRef","nextProps","prevState","defaultValues","OpenYourAccount","getCustomDate","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","onSubmitData","submittedData","account_info","processed_indicator","current_date","openYourAccount","openYourAccountResponseData","schemaInfo","loadOpenYourAccountSchema","data-dismiss","aria-label","aria-hidden","openYourAccountReducer","loadData","doLoadOpenYourAccountError","accountData","doOpenYourAccountError","DORMANT_ACCOUNT_ICON","MANAGE_RULES_ICON","TRANSACTION_DASH_ICON","ConfigureCreateYourAccount","banks","selectedCountry","selectedBank","allData","dropDownData","groupingData","selectedDropDowns","displayGrid","element","groupData","displayGridBody","innerElement","innerElementIndex","changeGridField","addGridElement","deleteGridElement","currentElement","rand","innerElementFromLoop","tagName","columnData","splice","deleteIndex","populateDropdowns","item","changeDropdownData","dropdownSchema","tempOptions","actualOptions","displayFields","elementIndex","changeField","showHideMultipleText","onBlur","createOptions","showHideGrid","defaultChecked","changeValidationField","addCustomElement","deleteCustomElement","toLowerCase","replace","typeOfMultipleText","changeMultiValuedField","actualOptionsArr","generateAccordion","groupElement","group","onChangeGroup","addGroupingContent","deleteGroupingContent","groupIndex","submittedObject","country","bank","createYourAccountConfiguration","loadCreateYourAccountConfigurationData","onChangeCountry","bankNames","Array","distinctBanks","Set","dropdowns","onChangeBank","selectedGroupingData","loadCreateYourAccountConfiguration","receivedObject","countries","distinctCounties","COUNTRY_ICON","BANK_ICON","selecetdBank","margin","createYourAccountConfigationReducer","doLoadCreateYourAccountConfigurationError","configurationData","doSaveCreateYourAccountConfigurationError","ConfigureSelectMaster","readOnly","saveSelectMasterConfiguration","loadSelectMasterConfiguration","selectMasterReducerData","selectMasterReducer","doLoadSelectMasterError","doSaveSelectMasterError","ConfigureDormatAccount","createDormatAccountConfiguration","loadDormatAccountConfiguration","loadDormatAccountConfigurationData","doLoadDormatAccountConfigurationError","doSaveDormatAccountConfigurationError","DormatAccount","doSaveDormatAccount","loadDormatAccountSchema","dormatAccountResponseData","doLoadDormatAccountError","doSaveDormatAccountError","ConfigureChequeBook","createChequebookConfiguration","loadChequebookConfiguration","loadChequebookConfigurationData","doLoadChequebookConfigurationError","doSaveChequebookConfigurationError","Chequebook","doSaveChequebook","loadChequebookSchema","chequebookResponseData","doLoadChequebookError","doSaveChequebookError","ConfigureCreditCard","createCreditCardConfiguration","loadCreditCardConfiguration","loadCreditCardConfigurationData","CreditCardConfigurationReducer","doLoadCreditCardConfigurationError","doSaveCreditCardConfigurationError","CreditCard","doSaveCreditCard","loadCreditCardSchema","creditCardResponseData","doLoadCreditCardError","doSaveCreditCardError","CardTransactionRules","count_rule_active","count_rule_limit","amount_rule_active","amount_rule_limit","pincode_rule_active","pincode_rule_code","time_rule_status","time_rule_start_time","time_rule_end_time","loading","setShow","getUser","Username","a","Axios","process","REACT_CLIENT_ID","REACT_CLIENT_SECRET","res","user","clearUsers","users","RULE_MANAGEMENT_ICON","paddingTop","border","alignContent","paddingRight","textAlign","Toast","onClose","delay","autohide","TransactionReport","useState","pageNumber","setPageNumber","pageSize","pageCount","setPageCount","pageWorkList","setPageWorkList","setPageChunks","useEffect","chunks","n","fraudlist","slice","splitArrayIntoChunksOfLen","Math","ceil","centered","color","Table","striped","hover","textTransform","_id","$oid","amount","card_type","merchant_category","zip_code","padding","newPage","Button","RiskDashboard","COLORS","pieData","CustomTooltip","active","toggleTransactionReportModal","transactionModalShow","fraudTransactions","getFradulentTransactions","Container","Row","paddingBottom","Col","Card","minWidth","backgroundImage","Text","fontSize","xs","top","right","left","bottom","stroke","bordered","borderRadius","overflowY","display","nameKey","cx","cy","outerRadius","entry","content","Authentication","SuperAdminDashboard","ConfigureDormatAccountModule","DormatAccountModule","loadFradulentTransactionsError","signOut","removeItem","$","document","ready","on","toggleClass","USER_ICON","USER_IMAGE","Sidebar","SuperAdminSidebar","SecretRoute","rest","render","App","location","currentLoc","pathname","getSideBar","exact","getDashboradMenu","modules","page","currentLocation","Boolean","hostname","match","store","rootReducer","combineReducers","createStore","applyMiddleware","getStore","ReactDOM","getElementById","navigator","serviceWorker","registration","unregister","message","baseURL","apiConstant","OptionContentTypeJSON","OptionAccept","Accept","OptionContentTypeFormData","SIGN_IN","LOAD_OPEN_YOUR_ACCOUNT","OPEN_YOUR_ACCOUNT","LOAD_CREATE_YOUR_ACCOUNT_CONFIG","SAVE_CREATE_YOUR_ACCOUNT_CONFIG","LOAD_SELECT_MASTER_CONFIG","SAVE_SELECT_MASTER_CONFIG","EMAIL_VERFICATION","OTP_VERFICATION","LOAD_BAR_DATA","LOAD_DORMAT_ACCOUNT_CONFIG","SAVE_DORMAT_ACCOUNT_CONFIG","LOAD_DORMAT_ACCOUNT","SAVE_DORMAT_ACCOUNT","LOAD_DORMANT_BAR_DATA","LOAD_CHEQUEBOOK_CONFIG","SAVE_CHEQUEBOOK_CONFIG","LOAD_CHEQUE_BOOK","SAVE_CHEQUE_BOOK","LOAD_CHEQUEBOOK_BAR_DATA","LOAD_CREDIT_CARD_CONFIG","SAVE_CREDIT_CARD_CONFIG","LOAD_CREDIT_CARD","SAVE_CREDIT_CARD","LOAD_CREDIT_CARD_BAR_DATA","LOAD_FRADULENT_TRANS"],"mappings":"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","file":"static/js/main.5e08ddd7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/login-graphic.1bf4cd42.svg\";","module.exports = __webpack_public_path__ + \"static/media/user-picture.a09e6389.svg\";","module.exports = __webpack_public_path__ + \"static/media/username-icon.1d9e0fef.svg\";","module.exports = __webpack_public_path__ + \"static/media/open-your-account-graphic.3ad10247.svg\";","module.exports = __webpack_public_path__ + \"static/media/process-orment-account-graphic.a613cbf2.svg\";","module.exports = __webpack_public_path__ + \"static/media/validate-your-credit-card-graphic.71dde7ce.svg\";","module.exports = __webpack_public_path__ + \"static/media/request-chequebook-graphic.692a584a.svg\";","module.exports = __webpack_public_path__ + \"static/media/country-icon.3a6d5d15.svg\";","module.exports = __webpack_public_path__ + \"static/media/bank-icon.36e0ad0e.svg\";","module.exports = __webpack_public_path__ + \"static/media/account-type-icon.a8b899c9.svg\";","module.exports = __webpack_public_path__ + \"static/media/rule-selection.e7000066.svg\";","module.exports = __webpack_public_path__ + \"static/media/rule-analysis.94cbe665.svg\";","module.exports = __webpack_public_path__ + \"static/media/rule-dashboard.e02f8756.svg\";","module.exports = __webpack_public_path__ + \"static/media/manage-rules.62c0dea8.svg\";","import {\r\n  SIGNIN_SUCCESS,\r\n  SIGNIN_STARTED,\r\n  SIGNIN_ERROR,\r\n  EMAIL_VERIFICATION_STARTED,\r\n  EMAIL_VERIFICATION_SUCCESS,\r\n  EMAIL_VERIFICATION_ERROR,\r\n  OTP_VERIFICATION_STARTED,\r\n  OTP_VERIFICATION_SUCCESS,\r\n  OTP_VERIFICATION_ERROR,\r\n} from \"../actions/authentication/type\";\r\n\r\nconst defaultState = {\r\n  userInfo: {},\r\n  isLoading: false,\r\n  isError: false,\r\n  error: \"\",\r\n};\r\n\r\nconst AUTHENTICATIONsReducer = (\r\n  state = JSON.parse(JSON.stringify(defaultState)),\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case SIGNIN_STARTED:\r\n    case EMAIL_VERIFICATION_STARTED:\r\n    case OTP_VERIFICATION_STARTED:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case SIGNIN_SUCCESS:\r\n    case EMAIL_VERIFICATION_SUCCESS:\r\n    case OTP_VERIFICATION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        userInfo: action.payload,\r\n      };\r\n    case SIGNIN_ERROR:\r\n    case EMAIL_VERIFICATION_ERROR:\r\n    case OTP_VERIFICATION_ERROR:\r\n      return {\r\n        ...state,\r\n        isError: true,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default AUTHENTICATIONsReducer;\r\n","export const SIGNIN_STARTED = \"SIGNIN_STARTED\";\r\nexport const SIGNIN_SUCCESS = \"SIGNIN_SUCCESS\";\r\nexport const SIGNIN_ERROR = \"SIGNIN_ERROR\";\r\n\r\nexport const EMAIL_VERIFICATION_STARTED = \"EMAIL_VERIFICATION_STARTED\";\r\nexport const EMAIL_VERIFICATION_SUCCESS = \"EMAIL_VERIFICATION_SUCCESS\";\r\nexport const EMAIL_VERIFICATION_ERROR = \"EMAIL_VERIFICATION_ERROR\";\r\n\r\nexport const OTP_VERIFICATION_STARTED = \"OTP_VERIFICATION_STARTED\";\r\nexport const OTP_VERIFICATION_SUCCESS = \"OTP_VERIFICATION_SUCCESS\";\r\nexport const OTP_VERIFICATION_ERROR = \"OTP_VERIFICATION_ERROR\";\r\n","import {\r\n  LOAD_OPEN_YOUR_ACCOUNT_STARTED,\r\n  LOAD_OPEN_YOUR_ACCOUNT_SUCCESS,\r\n  LOAD_OPEN_YOUR_ACCOUNT_ERROR,\r\n  OPEN_YOUR_ACCOUNT_STARTED,\r\n  OPEN_YOUR_ACCOUNT_SUCCESS,\r\n  OPEN_YOUR_ACCOUNT_ERROR,\r\n} from \"../actions/open-your-account/type\";\r\n\r\nconst defaultState = {\r\n  openYourAccountData: [],\r\n  isLoading: false,\r\n  isError: false,\r\n  error: \"\",\r\n};\r\n\r\nconst OpenAccountReducer = (\r\n  state = JSON.parse(JSON.stringify(defaultState)),\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case LOAD_OPEN_YOUR_ACCOUNT_STARTED:\r\n    case OPEN_YOUR_ACCOUNT_STARTED:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case LOAD_OPEN_YOUR_ACCOUNT_ERROR:\r\n    case OPEN_YOUR_ACCOUNT_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n    case LOAD_OPEN_YOUR_ACCOUNT_SUCCESS:\r\n      return {\r\n        isLoading: false,\r\n        isError: false,\r\n        openYourAccountSchemaData: action.payload,\r\n      };\r\n    case OPEN_YOUR_ACCOUNT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        openYourAccountData: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default OpenAccountReducer;\r\n","export const LOAD_OPEN_YOUR_ACCOUNT_STARTED = \"LOAD_OPEN_YOUR_ACCOUNT_STARTED\";\r\nexport const LOAD_OPEN_YOUR_ACCOUNT_SUCCESS = \"LOAD_OPEN_YOUR_ACCOUNT_SUCCESS\";\r\nexport const LOAD_OPEN_YOUR_ACCOUNT_ERROR = \"LOAD_OPEN_YOUR_ACCOUNT_ERROR\";\r\n\r\nexport const OPEN_YOUR_ACCOUNT_STARTED = \"OPEN_YOUR_ACCOUNT_STARTED\";\r\nexport const OPEN_YOUR_ACCOUNT_SUCCESS = \"OPEN_YOUR_ACCOUNT_SUCCESS\";\r\nexport const OPEN_YOUR_ACCOUNT_ERROR = \"OPEN_YOUR_ACCOUNT_ERROR\";\r\n","import {\r\n  LOAD_CREATE_YOUR_ACCOUNT_CONFIGURATION_STARTED,\r\n  LOAD_CREATE_YOUR_ACCOUNT_CONFIGURATION_SUCCESS,\r\n  LOAD_CREATE_YOUR_ACCOUNT_CONFIGURATION_ERROR,\r\n  SAVE_CREATE_YOUR_ACCOUNT_CONFIGURATION_STARTED,\r\n  SAVE_CREATE_YOUR_ACCOUNT_CONFIGURATION_SUCCESS,\r\n  SAVE_CREATE_YOUR_ACCOUNT_CONFIGURATION_ERROR,\r\n} from \"../actions/create-your-account-configuration/type\";\r\n\r\nconst defaultState = {\r\n  createYourAccountConfigData: [],\r\n  isLoading: false,\r\n  isError: false,\r\n  error: \"\",\r\n};\r\n\r\nconst CreateYourAccountConfigationReducer = (\r\n  state = JSON.parse(JSON.stringify(defaultState)),\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case LOAD_CREATE_YOUR_ACCOUNT_CONFIGURATION_STARTED:\r\n    case SAVE_CREATE_YOUR_ACCOUNT_CONFIGURATION_STARTED:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case LOAD_CREATE_YOUR_ACCOUNT_CONFIGURATION_ERROR:\r\n    case SAVE_CREATE_YOUR_ACCOUNT_CONFIGURATION_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n    case LOAD_CREATE_YOUR_ACCOUNT_CONFIGURATION_SUCCESS:\r\n      return {\r\n        isLoading: false,\r\n        isError: false,\r\n        createYourAccountConfigData: action.payload,\r\n      };\r\n    case SAVE_CREATE_YOUR_ACCOUNT_CONFIGURATION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        createYourAccountConfigResponseData: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default CreateYourAccountConfigationReducer;\r\n","export const LOAD_CREATE_YOUR_ACCOUNT_CONFIGURATION_STARTED =\r\n  \"LOAD_CREATE_YOUR_ACCOUNT_CONFIGURATION_STARTED\";\r\nexport const LOAD_CREATE_YOUR_ACCOUNT_CONFIGURATION_SUCCESS =\r\n  \"LOAD_CREATE_YOUR_ACCOUNT_CONFIGURATION_SUCCESS\";\r\nexport const LOAD_CREATE_YOUR_ACCOUNT_CONFIGURATION_ERROR =\r\n  \"LOAD_CREATE_YOUR_ACCOUNT_CONFIGURATION_ERROR\";\r\n\r\nexport const SAVE_CREATE_YOUR_ACCOUNT_CONFIGURATION_STARTED =\r\n  \"SAVE_CREATE_YOUR_ACCOUNT_CONFIGURATION_STARTED\";\r\nexport const SAVE_CREATE_YOUR_ACCOUNT_CONFIGURATION_SUCCESS =\r\n  \"SAVE_CREATE_YOUR_ACCOUNT_CONFIGURATION_SUCCESS\";\r\nexport const SAVE_CREATE_YOUR_ACCOUNT_CONFIGURATION_ERROR =\r\n  \"SAVE_CREATE_YOUR_ACCOUNT_CONFIGURATION_ERROR\";\r\n","import {\r\n  LOAD_SELECT_MASTER_STARTED,\r\n  LOAD_SELECT_MASTER_SUCCESS,\r\n  LOAD_SELECT_MASTER_ERROR,\r\n  SAVE_SELECT_MASTER_STARTED,\r\n  SAVE_SELECT_MASTER_SUCCESS,\r\n  SAVE_SELECT_MASTER_ERROR,\r\n} from \"../actions/configure-select-master/type\";\r\n\r\nconst defaultState = {\r\n  isLoading: false,\r\n  isError: false,\r\n  error: \"\",\r\n};\r\n\r\nconst CreateSelectMasterReducer = (\r\n  state = JSON.parse(JSON.stringify(defaultState)),\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case LOAD_SELECT_MASTER_STARTED:\r\n    case SAVE_SELECT_MASTER_STARTED:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case LOAD_SELECT_MASTER_ERROR:\r\n    case SAVE_SELECT_MASTER_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n    case LOAD_SELECT_MASTER_SUCCESS:\r\n      return {\r\n        isLoading: false,\r\n        isError: false,\r\n        loadSelectMasterData: action.payload,\r\n      };\r\n    case SAVE_SELECT_MASTER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        saveSelectMasterResponse: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default CreateSelectMasterReducer;\r\n","export const LOAD_SELECT_MASTER_STARTED = \"LOAD_SELECT_MASTER_STARTED\";\r\nexport const LOAD_SELECT_MASTER_SUCCESS = \"LOAD_SELECT_MASTER_SUCCESS\";\r\nexport const LOAD_SELECT_MASTER_ERROR = \"LOAD_SELECT_MASTER_ERROR\";\r\n\r\nexport const SAVE_SELECT_MASTER_STARTED = \"SAVE_SELECT_MASTER_STARTED\";\r\nexport const SAVE_SELECT_MASTER_SUCCESS = \"SAVE_SELECT_MASTER_SUCCESS\";\r\nexport const SAVE_SELECT_MASTER_ERROR = \"SAVE_SELECT_MASTER_ERROR\";\r\n","import {\r\n  LOAD_BAR_DETAILS_STARTED,\r\n  LOAD_BAR_DETAILS_SUCCESS,\r\n  LOAD_BAR_DETAILS_ERROR,\r\n  LOAD_DORMANT_BAR_DETAILS_STARTED,\r\n  LOAD_DORMANT_BAR_DETAILS_SUCCESS,\r\n  LOAD_DORMANT_BAR_DETAILS_ERROR,\r\n  LOAD_CHEQUEBOOK_BAR_DETAILS_STARTED,\r\n  LOAD_CHEQUEBOOK_BAR_DETAILS_SUCCESS,\r\n  LOAD_CHEQUEBOOK_BAR_DETAILS_ERROR,\r\n  LOAD_CREDIT_CARD_BAR_DETAILS_STARTED,\r\n  LOAD_CREDIT_CARD_BAR_DETAILS_SUCCESS,\r\n  LOAD_CREDIT_CARD_BAR_DETAILS_ERROR,\r\n} from \"../actions/dashboard/type\";\r\n\r\nconst defaultState = {\r\n  createAccountData: [],\r\n  dormantAccountData: [],\r\n  chequebookData: [],\r\n  creditCardData: [],\r\n  isLoading: false,\r\n  isError: false,\r\n  error: \"\",\r\n};\r\n\r\nconst DashboardReducer = (\r\n  state = JSON.parse(JSON.stringify(defaultState)),\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case LOAD_BAR_DETAILS_STARTED:\r\n    case LOAD_DORMANT_BAR_DETAILS_STARTED:\r\n    case LOAD_CHEQUEBOOK_BAR_DETAILS_STARTED:\r\n    case LOAD_CREDIT_CARD_BAR_DETAILS_STARTED:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case LOAD_BAR_DETAILS_ERROR:\r\n    case LOAD_DORMANT_BAR_DETAILS_ERROR:\r\n    case LOAD_CHEQUEBOOK_BAR_DETAILS_ERROR:\r\n    case LOAD_CREDIT_CARD_BAR_DETAILS_ERROR:\r\n      return {\r\n        ...state,\r\n        isError: true,\r\n        isLoading: false,\r\n        error: action.payload,\r\n      };\r\n    case LOAD_BAR_DETAILS_SUCCESS:\r\n      //case LOAD_DORMANT_BAR_DETAILS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        createAccountData: action.payload,\r\n      };\r\n    case LOAD_DORMANT_BAR_DETAILS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        dormantAccountData: action.payload,\r\n      };\r\n    case LOAD_CHEQUEBOOK_BAR_DETAILS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        chequebookData: action.payload,\r\n      };\r\n    case LOAD_CREDIT_CARD_BAR_DETAILS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        creditCardData: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default DashboardReducer;\r\n","export const LOAD_BAR_DETAILS_STARTED = \"LOAD_BAR_DETAILS_STARTED\";\r\nexport const LOAD_BAR_DETAILS_SUCCESS = \"LOAD_BAR_DETAILS_SUCCESS\";\r\nexport const LOAD_BAR_DETAILS_ERROR = \"LOAD_BAR_DETAILS_ERROR\";\r\n\r\nexport const LOAD_DORMANT_BAR_DETAILS_STARTED =\r\n  \"LOAD_DORMANT_BAR_DETAILS_STARTED\";\r\nexport const LOAD_DORMANT_BAR_DETAILS_SUCCESS =\r\n  \"LOAD_DORMANT_BAR_DETAILS_SUCCESS\";\r\nexport const LOAD_DORMANT_BAR_DETAILS_ERROR = \"LOAD_DORMANT_BAR_DETAILS_ERROR\";\r\n\r\nexport const LOAD_CHEQUEBOOK_BAR_DETAILS_STARTED =\r\n  \"LOAD_CHEQUEBOOK_BAR_DETAILS_STARTED\";\r\nexport const LOAD_CHEQUEBOOK_BAR_DETAILS_SUCCESS =\r\n  \"LOAD_CHEQUEBOOK_BAR_DETAILS_SUCCESS\";\r\nexport const LOAD_CHEQUEBOOK_BAR_DETAILS_ERROR =\r\n  \"LOAD_CHEQUEBOOK_BAR_DETAILS_ERROR\";\r\n\r\nexport const LOAD_CREDIT_CARD_BAR_DETAILS_STARTED =\r\n  \"LOAD_CREDIT_CARD_BAR_DETAILS_STARTED\";\r\nexport const LOAD_CREDIT_CARD_BAR_DETAILS_SUCCESS =\r\n  \"LOAD_CREDIT_CARD_BAR_DETAILS_SUCCESS\";\r\nexport const LOAD_CREDIT_CARD_BAR_DETAILS_ERROR =\r\n  \"LOAD_CREDIT_CARD_BAR_DETAILS_ERROR\";\r\n","import {\r\n  LOAD_DORMAT_ACCOUNT_CONFIGURATION_STARTED,\r\n  LOAD_DORMAT_ACCOUNT_CONFIGURATION_SUCCESS,\r\n  LOAD_DORMAT_ACCOUNT_CONFIGURATION_ERROR,\r\n  SAVE_DORMAT_ACCOUNT_CONFIGURATION_STARTED,\r\n  SAVE_DORMAT_ACCOUNT_CONFIGURATION_SUCCESS,\r\n  SAVE_DORMAT_ACCOUNT_CONFIGURATION_ERROR,\r\n} from \"../actions/configure-dormat-account/type\";\r\n\r\nconst defaultState = {\r\n  dormatAccountConfigData: [],\r\n  isLoading: false,\r\n  isError: false,\r\n  error: \"\",\r\n};\r\n\r\nconst DormatAccountConfigurationReducer = (\r\n  state = JSON.parse(JSON.stringify(defaultState)),\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case LOAD_DORMAT_ACCOUNT_CONFIGURATION_STARTED:\r\n    case SAVE_DORMAT_ACCOUNT_CONFIGURATION_STARTED:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case LOAD_DORMAT_ACCOUNT_CONFIGURATION_ERROR:\r\n    case SAVE_DORMAT_ACCOUNT_CONFIGURATION_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n    case LOAD_DORMAT_ACCOUNT_CONFIGURATION_SUCCESS:\r\n      return {\r\n        isLoading: false,\r\n        isError: false,\r\n        dormatAccountConfigData: action.payload,\r\n      };\r\n    case SAVE_DORMAT_ACCOUNT_CONFIGURATION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        dormatAccountConfigResponseData: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default DormatAccountConfigurationReducer;\r\n","export const LOAD_DORMAT_ACCOUNT_CONFIGURATION_STARTED =\r\n  \"LOAD_DORMAT_ACCOUNT_CONFIGURATION_STARTED\";\r\nexport const LOAD_DORMAT_ACCOUNT_CONFIGURATION_SUCCESS =\r\n  \"LOAD_DORMAT_ACCOUNT_CONFIGURATION_SUCCESS\";\r\nexport const LOAD_DORMAT_ACCOUNT_CONFIGURATION_ERROR =\r\n  \"LOAD_DORMAT_ACCOUNT_CONFIGURATION_ERROR\";\r\n\r\nexport const SAVE_DORMAT_ACCOUNT_CONFIGURATION_STARTED =\r\n  \"SAVE_DORMAT_ACCOUNT_CONFIGURATION_STARTED\";\r\nexport const SAVE_DORMAT_ACCOUNT_CONFIGURATION_SUCCESS =\r\n  \"SAVE_DORMAT_ACCOUNT_CONFIGURATION_SUCCESS\";\r\nexport const SAVE_DORMAT_ACCOUNT_CONFIGURATION_ERROR =\r\n  \"SAVE_DORMAT_ACCOUNT_CONFIGURATION_ERROR\";\r\n","import {\r\n  LOAD_DORMAT_ACCOUNT_STARTED,\r\n  LOAD_DORMAT_ACCOUNT_SUCCESS,\r\n  LOAD_DORMAT_ACCOUNT_ERROR,\r\n  SAVE_DORMAT_ACCOUNT_STARTED,\r\n  SAVE_DORMAT_ACCOUNT_SUCCESS,\r\n  SAVE_DORMAT_ACCOUNT_ERROR,\r\n} from \"../actions/dormat-account/type\";\r\n\r\nconst defaultState = {\r\n  dormatAccountData: [],\r\n  isLoading: false,\r\n  isError: false,\r\n  error: \"\",\r\n};\r\n\r\nconst DormatAccountReducer = (\r\n  state = JSON.parse(JSON.stringify(defaultState)),\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case LOAD_DORMAT_ACCOUNT_STARTED:\r\n    case SAVE_DORMAT_ACCOUNT_STARTED:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case LOAD_DORMAT_ACCOUNT_ERROR:\r\n    case SAVE_DORMAT_ACCOUNT_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n    case LOAD_DORMAT_ACCOUNT_SUCCESS:\r\n      return {\r\n        isLoading: false,\r\n        isError: false,\r\n        dormatAccountSchemaData: action.payload,\r\n      };\r\n    case SAVE_DORMAT_ACCOUNT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        dormatAccountData: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default DormatAccountReducer;\r\n","export const LOAD_DORMAT_ACCOUNT_STARTED = \"LOAD_DORMAT_ACCOUNT_STARTED\";\r\nexport const LOAD_DORMAT_ACCOUNT_SUCCESS = \"LOAD_DORMAT_ACCOUNT_SUCCESS\";\r\nexport const LOAD_DORMAT_ACCOUNT_ERROR = \"LOAD_DORMAT_ACCOUNT_ERROR\";\r\n\r\nexport const SAVE_DORMAT_ACCOUNT_STARTED = \"SAVE_DORMAT_ACCOUNT_STARTED\";\r\nexport const SAVE_DORMAT_ACCOUNT_SUCCESS = \"SAVE_DORMAT_ACCOUNT_SUCCESS\";\r\nexport const SAVE_DORMAT_ACCOUNT_ERROR = \"SAVE_DORMAT_ACCOUNT_ERROR\";\r\n","import {\r\n  LOAD_CHEQUE_BOOK_CONFIGURATION_STARTED,\r\n  LOAD_CHEQUE_BOOK_CONFIGURATION_SUCCESS,\r\n  LOAD_CHEQUE_BOOK_CONFIGURATION_ERROR,\r\n  SAVE_CHEQUE_BOOK_CONFIGURATION_STARTED,\r\n  SAVE_CHEQUE_BOOK_CONFIGURATION_SUCCESS,\r\n  SAVE_CHEQUE_BOOK_CONFIGURATION_ERROR,\r\n} from \"../actions/configure-chequebook-request/type\";\r\n\r\nconst defaultState = {\r\n  chequebookConfigData: [],\r\n  isLoading: false,\r\n  isError: false,\r\n  error: \"\",\r\n};\r\n\r\nconst ChequebookConfigurationReducer = (\r\n  state = JSON.parse(JSON.stringify(defaultState)),\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case LOAD_CHEQUE_BOOK_CONFIGURATION_STARTED:\r\n    case SAVE_CHEQUE_BOOK_CONFIGURATION_STARTED:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case LOAD_CHEQUE_BOOK_CONFIGURATION_ERROR:\r\n    case SAVE_CHEQUE_BOOK_CONFIGURATION_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n    case LOAD_CHEQUE_BOOK_CONFIGURATION_SUCCESS:\r\n      return {\r\n        isLoading: false,\r\n        isError: false,\r\n        chequebookConfigData: action.payload,\r\n      };\r\n    case SAVE_CHEQUE_BOOK_CONFIGURATION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        chequebookConfigResponseData: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default ChequebookConfigurationReducer;\r\n","export const LOAD_CHEQUE_BOOK_CONFIGURATION_STARTED =\r\n  \"LOAD_CHEQUE_BOOK_CONFIGURATION_STARTED\";\r\nexport const LOAD_CHEQUE_BOOK_CONFIGURATION_SUCCESS =\r\n  \"LOAD_CHEQUE_BOOK_CONFIGURATION_SUCCESS\";\r\nexport const LOAD_CHEQUE_BOOK_CONFIGURATION_ERROR =\r\n  \"LOAD_CHEQUE_BOOK_CONFIGURATION_ERROR\";\r\n\r\nexport const SAVE_CHEQUE_BOOK_CONFIGURATION_STARTED =\r\n  \"SAVE_CHEQUE_BOOK_CONFIGURATION_STARTED\";\r\nexport const SAVE_CHEQUE_BOOK_CONFIGURATION_SUCCESS =\r\n  \"SAVE_CHEQUE_BOOK_CONFIGURATION_SUCCESS\";\r\nexport const SAVE_CHEQUE_BOOK_CONFIGURATION_ERROR =\r\n  \"SAVE_CHEQUE_BOOK_CONFIGURATION_ERROR\";\r\n","import {\r\n  LOAD_CHEQUE_BOOK_STARTED,\r\n  LOAD_CHEQUE_BOOK_SUCCESS,\r\n  LOAD_CHEQUE_BOOK_ERROR,\r\n  SAVE_CHEQUE_BOOK_STARTED,\r\n  SAVE_CHEQUE_BOOK_SUCCESS,\r\n  SAVE_CHEQUE_BOOK_ERROR,\r\n} from \"../actions/chequebook/type\";\r\n\r\nconst defaultState = {\r\n  chequebookData: [],\r\n  isLoading: false,\r\n  isError: false,\r\n  error: \"\",\r\n};\r\n\r\nconst ChequebookReducer = (\r\n  state = JSON.parse(JSON.stringify(defaultState)),\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case LOAD_CHEQUE_BOOK_STARTED:\r\n    case SAVE_CHEQUE_BOOK_STARTED:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case LOAD_CHEQUE_BOOK_ERROR:\r\n    case SAVE_CHEQUE_BOOK_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n    case LOAD_CHEQUE_BOOK_SUCCESS:\r\n      return {\r\n        isLoading: false,\r\n        isError: false,\r\n        chequebookSchemaData: action.payload,\r\n      };\r\n    case SAVE_CHEQUE_BOOK_SUCCESS:\r\n      return {\r\n        ...state,\r\n        chequebookData: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default ChequebookReducer;\r\n","export const LOAD_CHEQUE_BOOK_STARTED = \"LOAD_CHEQUE_BOOK_STARTED\";\r\nexport const LOAD_CHEQUE_BOOK_SUCCESS = \"LOAD_CHEQUE_BOOK_SUCCESS\";\r\nexport const LOAD_CHEQUE_BOOK_ERROR = \"LOAD_CHEQUE_BOOK_ERROR\";\r\n\r\nexport const SAVE_CHEQUE_BOOK_STARTED = \"SAVE_CHEQUE_BOOK_STARTED\";\r\nexport const SAVE_CHEQUE_BOOK_SUCCESS = \"SAVE_CHEQUE_BOOK_SUCCESS\";\r\nexport const SAVE_CHEQUE_BOOK_ERROR = \"SAVE_CHEQUE_BOOK_ERROR\";\r\n","import {\r\n  LOAD_CREDIT_CARD_CONFIGURATION_STARTED,\r\n  LOAD_CREDIT_CARD_CONFIGURATION_SUCCESS,\r\n  LOAD_CREDIT_CARD_CONFIGURATION_ERROR,\r\n  SAVE_CREDIT_CARD_CONFIGURATION_STARTED,\r\n  SAVE_CREDIT_CARD_CONFIGURATION_SUCCESS,\r\n  SAVE_CREDIT_CARD_CONFIGURATION_ERROR,\r\n} from \"../actions/configure-credit-card/type\";\r\n\r\nconst defaultState = {\r\n  creditCardConfigSchemaData: [],\r\n  isLoading: false,\r\n  isError: false,\r\n  error: \"\",\r\n};\r\n\r\nconst ConfigureCreditCardReducer = (\r\n  state = JSON.parse(JSON.stringify(defaultState)),\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case LOAD_CREDIT_CARD_CONFIGURATION_STARTED:\r\n    case SAVE_CREDIT_CARD_CONFIGURATION_STARTED:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case LOAD_CREDIT_CARD_CONFIGURATION_ERROR:\r\n    case SAVE_CREDIT_CARD_CONFIGURATION_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n    case LOAD_CREDIT_CARD_CONFIGURATION_SUCCESS:\r\n      return {\r\n        isLoading: false,\r\n        isError: false,\r\n        creditCardConfigSchemaData: action.payload,\r\n      };\r\n    case SAVE_CREDIT_CARD_CONFIGURATION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        creditCardConfigResponseData: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default ConfigureCreditCardReducer;\r\n","export const LOAD_CREDIT_CARD_CONFIGURATION_STARTED =\r\n  \"LOAD_CREDIT_CARD_CONFIGURATION_STARTED\";\r\nexport const LOAD_CREDIT_CARD_CONFIGURATION_SUCCESS =\r\n  \"LOAD_CREDIT_CARD_CONFIGURATION_SUCCESS\";\r\nexport const LOAD_CREDIT_CARD_CONFIGURATION_ERROR =\r\n  \"LOAD_CREDIT_CARD_CONFIGURATION_ERROR\";\r\n\r\nexport const SAVE_CREDIT_CARD_CONFIGURATION_STARTED =\r\n  \"SAVE_CREDIT_CARD_CONFIGURATION_STARTED\";\r\nexport const SAVE_CREDIT_CARD_CONFIGURATION_SUCCESS =\r\n  \"SAVE_CREDIT_CARD_CONFIGURATION_SUCCESS\";\r\nexport const SAVE_CREDIT_CARD_CONFIGURATION_ERROR =\r\n  \"SAVE_CREDIT_CARD_CONFIGURATION_ERROR\";\r\n","import {\r\n  LOAD_CREDIT_CARD_STARTED,\r\n  LOAD_CREDIT_CARD_SUCCESS,\r\n  LOAD_CREDIT_CARD_ERROR,\r\n  SAVE_CREDIT_CARD_STARTED,\r\n  SAVE_CREDIT_CARD_SUCCESS,\r\n  SAVE_CREDIT_CARD_ERROR,\r\n} from \"../actions/credit-card/type\";\r\n\r\nconst defaultState = {\r\n  creditCardData: [],\r\n  isLoading: false,\r\n  isError: false,\r\n  error: \"\",\r\n};\r\n\r\nconst CreditCardReducer = (\r\n  state = JSON.parse(JSON.stringify(defaultState)),\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case LOAD_CREDIT_CARD_STARTED:\r\n    case SAVE_CREDIT_CARD_STARTED:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case LOAD_CREDIT_CARD_ERROR:\r\n    case SAVE_CREDIT_CARD_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n    case LOAD_CREDIT_CARD_SUCCESS:\r\n      return {\r\n        isLoading: false,\r\n        isError: false,\r\n        creditCardSchemaData: action.payload,\r\n      };\r\n    case SAVE_CREDIT_CARD_SUCCESS:\r\n      return {\r\n        ...state,\r\n        creditCardData: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default CreditCardReducer;\r\n","export const LOAD_CREDIT_CARD_STARTED = \"LOAD_CREDIT_CARD_STARTED\";\r\nexport const LOAD_CREDIT_CARD_SUCCESS = \"LOAD_CREDIT_CARD_SUCCESS\";\r\nexport const LOAD_CREDIT_CARD_ERROR = \"LOAD_CREDIT_CARD_ERROR\";\r\n\r\nexport const SAVE_CREDIT_CARD_STARTED = \"SAVE_CREDIT_CARD_STARTED\";\r\nexport const SAVE_CREDIT_CARD_SUCCESS = \"SAVE_CREDIT_CARD_SUCCESS\";\r\nexport const SAVE_CREDIT_CARD_ERROR = \"SAVE_CREDIT_CARD_ERROR\";\r\n","import {\r\n    LOAD_FRADULENT_TRANS_STARTED,\r\n    LOAD_FRADULENT_TRANS_SUCCESS,\r\n    LOAD_FRADULENT_TRANS_ERROR\r\n} from \"../actions/transaction-analyser/type\";\r\n\r\nconst defaultState = {\r\n    FraudTransactionList: [],\r\n    isLoading: false,\r\n    isError: false,\r\n    error: \"\",\r\n  };\r\n\r\n\r\nconst TransactionAnalyserReducer = (\r\n    state = JSON.parse(JSON.stringify(defaultState)),\r\n    action \r\n) => {\r\n\r\n    switch (action.type) {\r\n       case LOAD_FRADULENT_TRANS_STARTED:\r\n           return {\r\n            ...state,\r\n            isLoading: true,  \r\n           }\r\n        case LOAD_FRADULENT_TRANS_SUCCESS:\r\n            return {\r\n                 ...state,\r\n                 isLoading: false, \r\n                 FraudTransactionList : action.payload,\r\n                }\r\n        case LOAD_FRADULENT_TRANS_SUCCESS:\r\n            return {\r\n                 ...state,\r\n                 isLoading: false, \r\n                 isError: true,\r\n                 error: action.payload,\r\n                 FraudTransactionList : [],\r\n                }\r\n       default:\r\n           return state;\r\n    }\r\n\r\n}\r\n\r\nexport default TransactionAnalyserReducer;","export const LOAD_FRADULENT_TRANS_STARTED = \"LOAD_FRADULENT_TRANS_STARTED\";\r\nexport const LOAD_FRADULENT_TRANS_SUCCESS = \"LOAD_FRADULENT_TRANS_SUCCESS\";\r\nexport const LOAD_FRADULENT_TRANS_ERROR = \"LOAD_FRADULENT_TRANS_ERROR\";","import { createStore, applyMiddleware } from \"redux\";\r\nimport getRootReducer from \"./reducers/reducers\";\r\nimport thunk from \"redux-thunk\";\r\nimport logger from \"redux-logger\";\r\n\r\nconst middlewares = [thunk, logger]\r\n\r\nexport const getStore = () => {\r\n    const rootReducer = getRootReducer();\r\n    const store = createStore(rootReducer, {}, applyMiddleware(...middlewares));\r\n    return store;\r\n}","import http from \"axios\";\r\nimport { endPoint, headerOptions } from \"../app-constant/api-constant\";\r\n\r\nclass APICallConfig {\r\n  static callAPIService = (APIName, parameter) => {\r\n    const APIInfo = endPoint[APIName];\r\n    return APICallConfig[APIInfo.type](APIInfo, parameter).then((response) => {\r\n      return response;\r\n    });\r\n  };\r\n\r\n  static get = (APIInfo, parameter) => {\r\n    return http\r\n      .get(\r\n        parameter\r\n          ? this.generateAPIParameterWithURL(APIInfo, parameter)\r\n          : APIInfo.url,\r\n        headerOptions[APIInfo.headerType]\r\n      )\r\n      .then((response) => {\r\n        return response.data;\r\n      })\r\n      .catch((error) => {\r\n        return Promise.reject(error);\r\n      });\r\n  };\r\n\r\n  static post = (APIInfo, parameter) => {\r\n    return http\r\n      .post(APIInfo.url, parameter, {\r\n        headers: {\r\n          Authorization: \"Bearer \" + window.sessionStorage.getItem(\"token\"),\r\n        },\r\n      })\r\n      .then((response) => {\r\n        return response.data;\r\n      })\r\n      .catch((error) => {\r\n        return Promise.reject(error);\r\n      });\r\n  };\r\n\r\n  static delete = (APIInfo, pathParameters, parameterBody) => {\r\n    let resPathParamURL = pathParameters.join(\"/\");\r\n    return http\r\n      .delete(\r\n        APIInfo.url + \"/\" + resPathParamURL,\r\n        parameterBody,\r\n        headerOptions[APIInfo.headerType]\r\n      )\r\n      .then((response) => {\r\n        return response.data;\r\n      })\r\n      .catch((error) => {\r\n        return Promise.reject(error);\r\n      });\r\n  };\r\n\r\n  static generateAPIParameterWithURL = (APIInfo, parameter) => {\r\n    let parameters = \"\";\r\n    let url = APIInfo.url;\r\n    Object.keys(parameter).forEach((key, index) => {\r\n      if (index === 0) {\r\n        parameters += `${key}=${parameter[key]}`;\r\n      } else {\r\n        parameters += `&${key}=${parameter[key]}`;\r\n      }\r\n    });\r\n    if (parameters !== \"\") {\r\n      url = APIInfo.url + \"?\" + parameters;\r\n    }\r\n    console.log(\"Generated URL \", url);\r\n    return url;\r\n  };\r\n}\r\nexport default APICallConfig;\r\n","// import AuthService from \"./auth-service\";\r\nimport APICallConfig from \"./api-call-config\";\r\n// import Utils from \"./utils\";\r\n\r\nexport default {\r\n    APICallConfig\r\n};","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Modal } from \"react-bootstrap\";\r\n// import _ from 'lodash';\r\nimport { LOGIN_GRAPHIC } from \"../../../../app-constant/images\";\r\nimport {\r\n  doSignin,\r\n  doEmailVerification,\r\n  doOtpVerification,\r\n} from \"../../../../actions/authentication\";\r\n\r\nimport \"./login.css\";\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isFormValid: true,\r\n      errorMsg: \"\",\r\n      username: \"\",\r\n      password: \"\",\r\n      toggleEmailModal: false,\r\n      toggleOtpModal: false,\r\n      email: \"\",\r\n      otpData: \"\",\r\n      invalidEmail: false,\r\n      invalidOtp: false,\r\n    };\r\n  }\r\n\r\n  changeDataField = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  onSignInSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (this.state.username === \"\" || this.state.password === \"\") {\r\n      this.setState({\r\n        isFormValid: false,\r\n        errorMsg: \"Username and password are required!\",\r\n      });\r\n    } else {\r\n      let requestPayload = {\r\n        username: this.state.username,\r\n        password: this.state.password,\r\n      };\r\n\r\n      this.props.doSignin(requestPayload).then(() => {\r\n        //console.log(this.props.userInfo);\r\n        if (\r\n          this.props.userInfo.error === \"false\" &&\r\n          this.props.userInfo.token !== \"\" &&\r\n          this.props.userInfo.role === \"employee\"\r\n        ) {\r\n          //console.log(\"Non admin\");\r\n          sessionStorage.setItem(\"token\", this.props.userInfo.token);\r\n          sessionStorage.setItem(\"bank_id\", this.props.userInfo.bank_id);\r\n          sessionStorage.setItem(\"country_id\", this.props.userInfo.country_id);\r\n          sessionStorage.setItem(\"role\", this.props.userInfo.role);\r\n          this.setState({ isFormValid: true, errorMsg: \"\" });\r\n          this.props.history.push(\"/dashboard\");\r\n        } else if (\r\n          this.props.userInfo.error === \"false\" &&\r\n          this.props.userInfo.token !== \"\" &&\r\n          this.props.userInfo.role === \"super_admin\"\r\n        ) {\r\n          sessionStorage.setItem(\"token\", this.props.userInfo.token);\r\n          sessionStorage.setItem(\"role\", this.props.userInfo.role);\r\n          // sessionStorage.setItem(\"bank_id\", this.props.userInfo.bank_id);\r\n          // sessionStorage.setItem(\"country_id\", this.props.userInfo.country_id);\r\n          this.setState({ isFormValid: true, errorMsg: \"\" });\r\n          this.props.history.push(\"/superadmindashboard\");\r\n        } else {\r\n          this.setState({\r\n            isFormValid: false,\r\n            errorMsg: \"Username and/or password are not exist!\",\r\n          });\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  onEmailVerificationSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (this.state.email !== \"\") {\r\n      let submittedObj = {\r\n        email: this.state.email,\r\n      };\r\n      this.props.doEmailVerification(submittedObj).then(() => {\r\n        if (this.props.userInfo.error === \"false\") {\r\n          this.setState({ invalidEmail: false });\r\n          this.doToggleEmailModal();\r\n          this.doToggleOtpModal();\r\n        } else {\r\n          this.setState({ invalidEmail: true });\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  onOtpVerificationSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (this.state.otpData !== \"\") {\r\n      let submittedObj = {\r\n        otp: this.state.otpData,\r\n        email: this.state.email,\r\n      };\r\n      this.props.doOtpVerification(submittedObj).then(() => {\r\n        if (this.props.userInfo.error === \"false\") {\r\n          this.doToggleOtpModal();\r\n          console.log(this.props.userInfo);\r\n          sessionStorage.setItem(\"token\", this.props.userInfo.token);\r\n          sessionStorage.setItem(\"role\", this.props.userInfo.role);\r\n          sessionStorage.setItem(\"bank_id\", this.props.userInfo.bank_id);\r\n          sessionStorage.setItem(\"country_id\", this.props.userInfo.country_id);\r\n          this.props.history.push(\"/create-your-account\");\r\n        } else {\r\n          this.setState({ invalidOtp: true });\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  doToggleEmailModal = () => {\r\n    this.setState({ toggleEmailModal: !this.state.toggleEmailModal });\r\n  };\r\n\r\n  doToggleOtpModal = () => {\r\n    this.setState({ toggleOtpModal: !this.state.toggleOtpModal });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <section id=\"wrapper\">\r\n        <div className=\"login-container\">\r\n          <div className=\"login-graphic\">\r\n            <figure className=\"graphic-figure\">\r\n              <img src={LOGIN_GRAPHIC} alt=\"logo\" />\r\n            </figure>\r\n          </div>\r\n          <div className=\"login-section\">\r\n            <span className=\"login-logo\">Finance</span>\r\n            <div className=\"page-header\">\r\n              <h3>Sign in</h3>\r\n            </div>\r\n            <form name=\"loginForm\" onSubmit={this.onSignInSubmit}>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control username\"\r\n                  name=\"username\"\r\n                  placeholder=\"Username\"\r\n                  onChange={this.changeDataField}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"form-control password\"\r\n                  name=\"password\"\r\n                  placeholder=\"Password\"\r\n                  onChange={this.changeDataField}\r\n                />\r\n              </div>\r\n              <button type=\"submit\" className=\"btn btn-primary w-100\">\r\n                Sign in\r\n              </button>\r\n            </form>\r\n            {!this.state.isFormValid && (\r\n              <div className=\"alert alert-danger mar-top10\" role=\"alert\">\r\n                {this.state.errorMsg}\r\n              </div>\r\n            )}\r\n            <div className=\"row margin-top-30\">\r\n              <div className=\"col-lg-6\">\r\n                <div className=\"form-group form-check\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    className=\"form-check-input\"\r\n                    id=\"rememberMe\"\r\n                  />\r\n                  &nbsp;&nbsp;\r\n                  <label className=\"form-check-label\" htmlFor=\"rememberMe\">\r\n                    Remember me\r\n                  </label>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-lg-6\">\r\n                <a\r\n                  href=\"change-password.html\"\r\n                  className=\"change-password float-right\"\r\n                >\r\n                  Forgot Password?\r\n                </a>\r\n              </div>\r\n            </div>\r\n            <hr />\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-6\">\r\n                <p className=\"margin-top-15\">Don't have your account ?</p>\r\n              </div>\r\n              <div className=\"col-lg-6\">\r\n                <a\r\n                  href=\"register.html\"\r\n                  className=\"btn btn-secondary float-right\"\r\n                >\r\n                  Register\r\n                </a>\r\n              </div>\r\n            </div>\r\n            <hr />\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-12\">\r\n                {/* <Button variant=\"primary\" onClick={this.doToggleEmailModal}>\r\n                  Create your Account\r\n                </Button> */}\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"btn btn-success w-100\"\r\n                  onClick={this.doToggleEmailModal}\r\n                >\r\n                  Create your Account\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <Modal\r\n          size=\"lg\"\r\n          show={this.state.toggleEmailModal}\r\n          onHide={this.doToggleEmailModal}\r\n        >\r\n          <form\r\n            name=\"emailVerification\"\r\n            onSubmit={this.onEmailVerificationSubmit}\r\n          >\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>Email Verification Form</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"email\"\r\n                  className=\"form-control\"\r\n                  name=\"email\"\r\n                  placeholder=\"Email\"\r\n                  onChange={this.changeDataField}\r\n                  required\r\n                />\r\n              </div>\r\n              {this.state.invalidEmail && (\r\n                <div className=\"alert alert-danger mar-top10\" role=\"alert\">\r\n                  {this.props.userInfo.errorMsg}\r\n                </div>\r\n              )}\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <button type=\"submit\" className=\"btn btn-primary\">\r\n                Submit\r\n              </button>\r\n            </Modal.Footer>\r\n          </form>\r\n        </Modal>\r\n\r\n        <Modal\r\n          size=\"lg\"\r\n          show={this.state.toggleOtpModal}\r\n          onHide={this.doToggleOtpModal}\r\n        >\r\n          <form name=\"otpVerification\" onSubmit={this.onOtpVerificationSubmit}>\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>Otp Verification Form</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"otpData\"\r\n                  placeholder=\"Enter Otp\"\r\n                  onChange={this.changeDataField}\r\n                  required\r\n                />\r\n              </div>\r\n              {this.state.invalidOtp && (\r\n                <div className=\"alert alert-danger mar-top10\" role=\"alert\">\r\n                  {this.props.userInfo.errorMsg}\r\n                </div>\r\n              )}\r\n              {this.props.userInfo.error === \"false\" && (\r\n                <div className=\"alert alert-success mar-top10\" role=\"alert\">\r\n                  {this.props.userInfo.successMsg}\r\n                </div>\r\n              )}\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <button type=\"submit\" className=\"btn btn-primary\">\r\n                Submit\r\n              </button>\r\n            </Modal.Footer>\r\n          </form>\r\n        </Modal>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  doSignin: PropTypes.func.isRequired,\r\n  //userInfo: PropTypes.objectOf(PropTypes.shape({}).isRequired).isRequired\r\n};\r\n\r\nLogin.defaultProps = {\r\n  userInfo: {},\r\n};\r\n\r\nconst mapStateToProps = ({ authenticationReducer }) => {\r\n  return {\r\n    userInfo: authenticationReducer.userInfo,\r\n  };\r\n};\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, {\r\n    doSignin,\r\n    doEmailVerification,\r\n    doOtpVerification,\r\n  })(Login)\r\n);\r\n","import {\r\n  doSigninSuccess,\r\n  doSigninStarted,\r\n  doSigninError,\r\n  doEmailVerificationStarted,\r\n  doEmailVerificationSuccess,\r\n  doEmailVerificationError,\r\n  doOtpVerificationStarted,\r\n  doOtpVerificationSuccess,\r\n  doOtpVerificationError,\r\n} from \"./authentication\";\r\nimport Services from \"../../services\";\r\n//import { history } from '../../history';\r\n\r\nexport const doSignin = (loginData) => {\r\n  return function doSigninAction(dispatch) {\r\n    dispatch(doSigninStarted());\r\n    return Services.APICallConfig.callAPIService(\"SIGN_IN\", loginData)\r\n      .then((response) => {\r\n        dispatch(doSigninSuccess(response));\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"error response\", error);\r\n        dispatch(doSigninError(error));\r\n      });\r\n  };\r\n};\r\n\r\nexport const doEmailVerification = (emailData) => {\r\n  return function doEmailVerficationAction(dispatch) {\r\n    dispatch(doEmailVerificationStarted());\r\n    return Services.APICallConfig.callAPIService(\"EMAIL_VERFICATION\", emailData)\r\n      .then((response) => {\r\n        dispatch(doEmailVerificationSuccess(response));\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"error response\", error);\r\n        dispatch(doEmailVerificationError(error));\r\n      });\r\n  };\r\n};\r\n\r\nexport const doOtpVerification = (otpData) => {\r\n  return function doOtpVerficationAction(dispatch) {\r\n    dispatch(doOtpVerificationStarted());\r\n    return Services.APICallConfig.callAPIService(\"OTP_VERFICATION\", otpData)\r\n      .then((response) => {\r\n        dispatch(doOtpVerificationSuccess(response));\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"error response\", error);\r\n        dispatch(doOtpVerificationError(error));\r\n      });\r\n  };\r\n};\r\n","import {\r\n  SIGNIN_STARTED,\r\n  SIGNIN_SUCCESS,\r\n  SIGNIN_ERROR,\r\n  EMAIL_VERIFICATION_STARTED,\r\n  EMAIL_VERIFICATION_SUCCESS,\r\n  EMAIL_VERIFICATION_ERROR,\r\n  OTP_VERIFICATION_STARTED,\r\n  OTP_VERIFICATION_SUCCESS,\r\n  OTP_VERIFICATION_ERROR,\r\n} from \"./type\";\r\n\r\nexport const doSigninStarted = () => {\r\n  return {\r\n    type: SIGNIN_STARTED,\r\n  };\r\n};\r\n\r\nexport const doSigninSuccess = (userInfo) => {\r\n  return {\r\n    type: SIGNIN_SUCCESS,\r\n    payload: userInfo,\r\n  };\r\n};\r\n\r\nexport const doSigninError = (error) => {\r\n  return {\r\n    type: SIGNIN_ERROR,\r\n    payload: error,\r\n  };\r\n};\r\n\r\nexport const doEmailVerificationStarted = () => {\r\n  return {\r\n    type: EMAIL_VERIFICATION_STARTED,\r\n  };\r\n};\r\n\r\nexport const doEmailVerificationSuccess = (userInfo) => {\r\n  return {\r\n    type: EMAIL_VERIFICATION_SUCCESS,\r\n    payload: userInfo,\r\n  };\r\n};\r\n\r\nexport const doEmailVerificationError = (error) => {\r\n  return {\r\n    type: EMAIL_VERIFICATION_ERROR,\r\n    payload: error,\r\n  };\r\n};\r\n\r\nexport const doOtpVerificationStarted = () => {\r\n  return {\r\n    type: OTP_VERIFICATION_STARTED,\r\n  };\r\n};\r\n\r\nexport const doOtpVerificationSuccess = (userInfo) => {\r\n  return {\r\n    type: OTP_VERIFICATION_SUCCESS,\r\n    payload: userInfo,\r\n  };\r\n};\r\n\r\nexport const doOtpVerificationError = (error) => {\r\n  return {\r\n    type: OTP_VERIFICATION_ERROR,\r\n    payload: error,\r\n  };\r\n};\r\n","import React, { Component } from 'react';\r\nimport \"./registration.css\";\r\n\r\nclass Registration extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n    }\r\n    render() { \r\n        return (\r\n            <div>\r\n                Registration\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Registration;","// import React from 'react';\r\nimport Login from './pages/login/login';\r\nimport Registration from './pages/registration/registration';\r\n\r\n// const Authentication = () => (\r\n//     <div>Authentication Module</div>\r\n// );\r\n\r\nexport default {\r\n    pages: [\r\n        {\r\n            routeProps: {\r\n                path: '/',\r\n                component: Login,\r\n            },\r\n            name: 'Login',\r\n        },\r\n        {\r\n            routeProps: {\r\n                path: '/registration',\r\n                component: Registration,\r\n            },\r\n            name: 'Registration',\r\n        },\r\n    ]\r\n};\r\n","import React, { PureComponent } from \"react\";\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\nimport \"./re-bar-chart.css\";\r\n\r\nexport default class ReBarChart extends PureComponent {\r\n  render() {\r\n    if (!this.props.barData) {\r\n      return null;\r\n    }\r\n    const { barChartInfo, barData } = this.props;\r\n    return (\r\n      <div className=\"bar-chart\">\r\n        <p className={barChartInfo.titleClass}>{barChartInfo.title}</p>\r\n        <ResponsiveContainer width=\"90%\" height={barChartInfo.height}>\r\n          <BarChart data={barData}>\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"month\" />\r\n            <YAxis />\r\n            <Tooltip />\r\n            <Legend />\r\n            {barChartInfo.barFillColors.map((value) => {\r\n              return (\r\n                <Bar\r\n                  dataKey={Object.keys(value)[0]}\r\n                  fill={Object.values(value)[0]}\r\n                  key={Object.keys(value)[0]}\r\n                />\r\n              );\r\n            })}\r\n          </BarChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {\r\n  loadBarData,\r\n  loadDormantBarData,\r\n  loadChequebookBarData,\r\n  loadCreditCardBarData,\r\n} from \"../../../../actions/dashboard\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./dashboard.css\";\r\nimport {\r\n  OPEN_YOUR_ACCONT,\r\n  PROCESS_ORMENT_ACCOUNT,\r\n  VALIDATE_CREDIT_CARD,\r\n  REQUEST_CHECKBOOK,\r\n} from \"../../../../app-constant/images\";\r\n\r\nimport ReBarChart from \"../../../../reusable-components/charts/re-bar-chart\";\r\n\r\nclass Dashboard extends Component {\r\n  state = {\r\n    barChartInfo: {\r\n      title: \"Sync New Bank Account Details\",\r\n      titleClass: \"bar-title\",\r\n      height: 300,\r\n      barFillColors: [{ Synced: \"#84DC00\" }, { NonSynced: \"#FF4031\" }],\r\n    },\r\n    dormantBarChartInfo: {\r\n      title: \"Sync Dormant Bank Account Details\",\r\n      titleClass: \"bar-title\",\r\n      height: 300,\r\n      barFillColors: [{ Synced: \"#84DC00\" }, { NonSynced: \"#FF4031\" }],\r\n    },\r\n    chekbookBarChartInfo: {\r\n      title: \"Sync Checkbook Details\",\r\n      titleClass: \"bar-title\",\r\n      height: 300,\r\n      barFillColors: [{ Synced: \"#84DC00\" }, { NonSynced: \"#FF4031\" }],\r\n    },\r\n    creditCardBarChartInfo: {\r\n      title: \"Sync Credit Card Details\",\r\n      titleClass: \"bar-title\",\r\n      height: 300,\r\n      barFillColors: [{ Synced: \"#84DC00\" }, { NonSynced: \"#FF4031\" }],\r\n    },\r\n  };\r\n  componentDidMount() {\r\n    this.props.loadBarData();\r\n    this.props.loadDormantBarData();\r\n    this.props.loadChequebookBarData();\r\n    this.props.loadCreditCardBarData();\r\n  }\r\n  render() {\r\n    //console.log(this.props.dashboardAll.creditCardData);\r\n    // console.log(\r\n    //   this.props.dashboardAll.creditCardData.barchartInfo.chequeBarData\r\n    // );\r\n    return (\r\n      <div id=\"content\">\r\n        <div className=\"inner-container\">\r\n          <div className=\"page-header\">\r\n            <h2 className=\"welcome-text\">\r\n              <span>Welcome to </span>Edge Banking Dashboard\r\n            </h2>\r\n          </div>\r\n          {/* <p>\r\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. In\r\n            hendrerit urna quis ultricies commodo. Pellentesque habitant morbi\r\n            tristique senectus et netus et malesuada fames ac turpis egestas.\r\n            Aliquam convallis vel arcu et scelerisque. Quisque vitae est a lacus\r\n            placerat fermentum vitae id dolor. Morbi non orci quam. Donec in\r\n            semper odio.\r\n          </p>\r\n\r\n          <p>\r\n            Maecenas efficitur commodo lacus eu molestie. Praesent congue\r\n            iaculis auctor. Nulla facilisis eros non neque hendrerit facilisis.\r\n            Vestibulum nulla dui, imperdiet at diam ut, accumsan tincidunt diam.\r\n            Fusce finibus massa eget congue pellentesque. Donec in semper odio.\r\n            Suspendisse potenti. Sed tempus lacus nibh, ut auctor ipsum varius\r\n            sed. Duis iaculis lectus sed magna efficitur faucibus. Sed molestie\r\n            rhoncus orci, eu fermentum maurisaccumsan non.\r\n          </p> */}\r\n          <div className=\"row card-group\">\r\n            <div className=\"col-lg-6\">\r\n              <div className=\"graph-holder \">\r\n                <ReBarChart\r\n                  barChartInfo={this.state.barChartInfo}\r\n                  barData={\r\n                    this.props.dashboardAll.createAccountData.barchartInfo\r\n                      ? this.props.dashboardAll.createAccountData.barchartInfo\r\n                          .barData\r\n                      : null\r\n                  }\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-6\">\r\n              <div className=\"graph-holder \">\r\n                <ReBarChart\r\n                  barChartInfo={this.state.dormantBarChartInfo}\r\n                  barData={\r\n                    this.props.dashboardAll.dormantAccountData.barchartInfo\r\n                      ? this.props.dashboardAll.dormantAccountData.barchartInfo\r\n                          .dormantBarData\r\n                      : null\r\n                  }\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row card-group\">\r\n            <div className=\"col-lg-6\">\r\n              <div className=\"graph-holder \">\r\n                <ReBarChart\r\n                  barChartInfo={this.state.chekbookBarChartInfo}\r\n                  barData={\r\n                    this.props.dashboardAll.chequebookData.barchartInfo\r\n                      ? this.props.dashboardAll.chequebookData.barchartInfo\r\n                          .chequeBarData\r\n                      : null\r\n                  }\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-6\">\r\n              <div className=\"graph-holder \">\r\n                <ReBarChart\r\n                  barChartInfo={this.state.creditCardBarChartInfo}\r\n                  barData={\r\n                    this.props.dashboardAll.creditCardData.barchartInfo\r\n                      ? this.props.dashboardAll.creditCardData.barchartInfo\r\n                          .creditBarData\r\n                      : null\r\n                  }\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row card-group\">\r\n            <div className=\"col-lg-3\">\r\n              <div className=\"card\">\r\n                <div className=\"card-header\">\r\n                  <figure>\r\n                    <img\r\n                      src={OPEN_YOUR_ACCONT}\r\n                      width=\"218px\"\r\n                      alt=\"Create Your Account\"\r\n                    />\r\n                  </figure>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <h3>Do you want to create an account with us?</h3>\r\n                  {/* <p>\r\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit...\r\n                  </p> */}\r\n                </div>\r\n                <div className=\"card-footer\">\r\n                  <Link to=\"/create-your-account\" className=\"btn btn-primary\">\r\n                    Create Your Account\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-3\">\r\n              <div className=\"card\">\r\n                <div className=\"card-header\">\r\n                  <figure>\r\n                    <img\r\n                      src={PROCESS_ORMENT_ACCOUNT}\r\n                      alt=\"Process Ornament Account\"\r\n                    />\r\n                  </figure>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <h3>Do you want to activate your Dormant account?</h3>\r\n                  {/* <p>\r\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit...\r\n                  </p> */}\r\n                </div>\r\n                <div className=\"card-footer\">\r\n                  <Link to=\"/dormat-account\" className=\"btn btn-primary\">\r\n                    Process Dormant Account\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-3\">\r\n              <div className=\"card\">\r\n                <div className=\"card-header\">\r\n                  <figure>\r\n                    <img\r\n                      src={VALIDATE_CREDIT_CARD}\r\n                      alt=\"Validate Credit Card\"\r\n                    />\r\n                  </figure>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <h3>Do you want to validate your credit card?</h3>\r\n                  {/* <p>\r\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit...\r\n                  </p> */}\r\n                </div>\r\n                <div className=\"card-footer\">\r\n                  <Link to=\"/credit-card\" className=\"btn btn-primary\">\r\n                    Validate your Credit Card\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-3\">\r\n              <div className=\"card\">\r\n                <div className=\"card-header\">\r\n                  <figure>\r\n                    <img src={REQUEST_CHECKBOOK} alt=\"Request Checkbook\" />\r\n                  </figure>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <h3>Do you want to request for a cheque book?</h3>\r\n                  {/* <p>\r\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit...\r\n                  </p> */}\r\n                </div>\r\n                <div className=\"card-footer\">\r\n                  <Link to=\"/cheque-book-request\" className=\"btn btn-primary\">\r\n                    Process Cheque Book\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ DashboardReducer }) => {\r\n  return {\r\n    dashboardAll: DashboardReducer,\r\n  };\r\n};\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, {\r\n    loadBarData,\r\n    loadDormantBarData,\r\n    loadChequebookBarData,\r\n    loadCreditCardBarData,\r\n  })(Dashboard)\r\n);\r\n","import Dashboard from './pages/dashboard/dashboard';\r\n\r\nexport default {\r\n    pages: [\r\n        {\r\n            routeProps: {\r\n                path: '/dashboard',\r\n                component: Dashboard,\r\n            },\r\n            name: 'Dashboard',\r\n        }\r\n    ]\r\n};\r\n","import {\r\n  loadBarDetailsStarted,\r\n  loadBarDetailsSuccess,\r\n  loadBarDetailsError,\r\n  loadDormantBarDetailsStarted,\r\n  loadDormantBarDetailsSuccess,\r\n  loadDormantBarDetailsError,\r\n  loadChequebookBarDetailsStarted,\r\n  loadChequebookBarDetailsSuccess,\r\n  loadChequebookBarDetailsError,\r\n  loadCreditCardBarDetailsStarted,\r\n  loadCreditCardBarDetailsSuccess,\r\n  loadCreditCardBarDetailsError,\r\n} from \"./dasboard\";\r\nimport Services from \"../../services\";\r\n\r\nexport const loadBarData = () => {\r\n  return function loadBarDataAction(dispatch) {\r\n    dispatch(loadBarDetailsStarted());\r\n    return Services.APICallConfig.callAPIService(\"LOAD_BAR_DATA\")\r\n      .then((response) => {\r\n        dispatch(loadBarDetailsSuccess(response));\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"error response\", error);\r\n        dispatch(loadBarDetailsError(error));\r\n      });\r\n  };\r\n};\r\n\r\nexport const loadDormantBarData = () => {\r\n  return function loadDormantBarDataAction(dispatch) {\r\n    dispatch(loadDormantBarDetailsStarted());\r\n    return Services.APICallConfig.callAPIService(\"LOAD_DORMANT_BAR_DATA\")\r\n      .then((response) => {\r\n        dispatch(loadDormantBarDetailsSuccess(response));\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"error response\", error);\r\n        dispatch(loadDormantBarDetailsError(error));\r\n      });\r\n  };\r\n};\r\n\r\nexport const loadChequebookBarData = () => {\r\n  return function loadChequebookBarDataAction(dispatch) {\r\n    dispatch(loadChequebookBarDetailsStarted());\r\n    return Services.APICallConfig.callAPIService(\"LOAD_CHEQUEBOOK_BAR_DATA\")\r\n      .then((response) => {\r\n        dispatch(loadChequebookBarDetailsSuccess(response));\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"error response\", error);\r\n        dispatch(loadChequebookBarDetailsError(error));\r\n      });\r\n  };\r\n};\r\n\r\nexport const loadCreditCardBarData = () => {\r\n  return function loadCreditCardBarDataAction(dispatch) {\r\n    dispatch(loadCreditCardBarDetailsStarted());\r\n    return Services.APICallConfig.callAPIService(\"LOAD_CREDIT_CARD_BAR_DATA\")\r\n      .then((response) => {\r\n        dispatch(loadCreditCardBarDetailsSuccess(response));\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"error response\", error);\r\n        dispatch(loadCreditCardBarDetailsError(error));\r\n      });\r\n  };\r\n};\r\n","import {\r\n  LOAD_BAR_DETAILS_STARTED,\r\n  LOAD_BAR_DETAILS_SUCCESS,\r\n  LOAD_BAR_DETAILS_ERROR,\r\n  LOAD_DORMANT_BAR_DETAILS_STARTED,\r\n  LOAD_DORMANT_BAR_DETAILS_SUCCESS,\r\n  LOAD_DORMANT_BAR_DETAILS_ERROR,\r\n  LOAD_CHEQUEBOOK_BAR_DETAILS_STARTED,\r\n  LOAD_CHEQUEBOOK_BAR_DETAILS_SUCCESS,\r\n  LOAD_CHEQUEBOOK_BAR_DETAILS_ERROR,\r\n  LOAD_CREDIT_CARD_BAR_DETAILS_STARTED,\r\n  LOAD_CREDIT_CARD_BAR_DETAILS_SUCCESS,\r\n  LOAD_CREDIT_CARD_BAR_DETAILS_ERROR,\r\n} from \"./type\";\r\n\r\nexport const loadBarDetailsStarted = () => {\r\n  return {\r\n    type: LOAD_BAR_DETAILS_STARTED,\r\n  };\r\n};\r\n\r\nexport const loadBarDetailsSuccess = (barData) => {\r\n  return {\r\n    type: LOAD_BAR_DETAILS_SUCCESS,\r\n    payload: barData,\r\n  };\r\n};\r\n\r\nexport const loadBarDetailsError = (error) => {\r\n  return {\r\n    type: LOAD_BAR_DETAILS_ERROR,\r\n    payload: error,\r\n  };\r\n};\r\n\r\nexport const loadDormantBarDetailsStarted = () => {\r\n  return {\r\n    type: LOAD_DORMANT_BAR_DETAILS_STARTED,\r\n  };\r\n};\r\n\r\nexport const loadDormantBarDetailsSuccess = (barData) => {\r\n  return {\r\n    type: LOAD_DORMANT_BAR_DETAILS_SUCCESS,\r\n    payload: barData,\r\n  };\r\n};\r\n\r\nexport const loadDormantBarDetailsError = (error) => {\r\n  return {\r\n    type: LOAD_DORMANT_BAR_DETAILS_ERROR,\r\n    payload: error,\r\n  };\r\n};\r\n\r\nexport const loadChequebookBarDetailsStarted = () => {\r\n  return {\r\n    type: LOAD_CHEQUEBOOK_BAR_DETAILS_STARTED,\r\n  };\r\n};\r\n\r\nexport const loadChequebookBarDetailsSuccess = (barData) => {\r\n  return {\r\n    type: LOAD_CHEQUEBOOK_BAR_DETAILS_SUCCESS,\r\n    payload: barData,\r\n  };\r\n};\r\n\r\nexport const loadChequebookBarDetailsError = (error) => {\r\n  return {\r\n    type: LOAD_CHEQUEBOOK_BAR_DETAILS_ERROR,\r\n    payload: error,\r\n  };\r\n};\r\n\r\nexport const loadCreditCardBarDetailsStarted = () => {\r\n  return {\r\n    type: LOAD_CREDIT_CARD_BAR_DETAILS_STARTED,\r\n  };\r\n};\r\n\r\nexport const loadCreditCardBarDetailsSuccess = (barData) => {\r\n  return {\r\n    type: LOAD_CREDIT_CARD_BAR_DETAILS_SUCCESS,\r\n    payload: barData,\r\n  };\r\n};\r\n\r\nexport const loadCreditCardBarDetailsError = (error) => {\r\n  return {\r\n    type: LOAD_CREDIT_CARD_BAR_DETAILS_ERROR,\r\n    payload: error,\r\n  };\r\n};\r\n","import React, { Component, createRef } from \"react\";\r\nimport Webcam from \"react-webcam\";\r\nimport SignaturePad from \"react-signature-canvas\";\r\nimport { Modal } from \"react-bootstrap\";\r\n\r\nclass CustomForm extends Component {\r\n  state = {\r\n    showFileuploadPOI: false,\r\n    showImagePopup: false,\r\n  };\r\n  initialState = {};\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.webcamRef = createRef();\r\n  }\r\n\r\n  //validateInput = (e, error1, error2) => {\r\n  validateInput = (e) => {\r\n    let fieldRef = e.target;\r\n    let fieldName = fieldRef.name;\r\n    let fieldVal = fieldRef.value;\r\n    //console.log(fieldName);\r\n\r\n    // if (fieldName === \"name\") {\r\n    //   if (fieldVal === \"\") {\r\n    //     fieldRef.setCustomValidity(error1);\r\n    //   } else {\r\n    //     fieldRef.setCustomValidity(\"\");\r\n    //   }\r\n    // }\r\n    // if (fieldName === \"accountNumber\") {\r\n    //   if (fieldVal === \"\") {\r\n    //     fieldRef.setCustomValidity(error1);\r\n    //   } else {\r\n    //     fieldRef.setCustomValidity(\"\");\r\n    //   }\r\n    // }\r\n    // Pan number with required\r\n    // if (fieldName === \"panNo\") {\r\n    //   if (fieldVal === \"\") {\r\n    //     fieldRef.setCustomValidity(error1);\r\n    //   } else {\r\n    //     var regex = /[A-Z]{5}[0-9]{4}[A-Z]{1}$/;\r\n    //     if (!regex.test(fieldVal)) {\r\n    //       fieldRef.setCustomValidity(error2);\r\n    //     } else {\r\n    //       fieldRef.setCustomValidity(\"\");\r\n    //     }\r\n    //   }\r\n    // }\r\n    //Pan number without required\r\n    if (fieldName === \"pannumber1600260014000\") {\r\n      var regex = /[A-Z]{5}[0-9]{4}[A-Z]{1}$/;\r\n      if (fieldVal !== \"\" && !regex.test(fieldVal)) {\r\n        fieldRef.setCustomValidity(\"Please enter valid pan number\");\r\n      } else {\r\n        fieldRef.setCustomValidity(\"\");\r\n      }\r\n    }\r\n  };\r\n\r\n  onFileChange = (e, key) => {\r\n    let formKey = \"file-\" + key;\r\n    //Creating initial state\r\n    this.initialState[key] = \"\";\r\n    this.initialState[formKey] = \"\";\r\n\r\n    this.setState({\r\n      [key]: URL.createObjectURL(e.target.files[0]),\r\n    });\r\n    const formData = new FormData();\r\n    formData.append(key, e.target.files[0], e.target.files[0].name);\r\n    this.setState({ [formKey]: formData });\r\n    //console.log(formData);\r\n    if (this.state.showImagePopup) {\r\n      this.showHideImagePopup();\r\n    }\r\n  };\r\n\r\n  captureImage = (e, key) => {\r\n    e.preventDefault();\r\n    let formKey = \"file-\" + key;\r\n    //Creating initial state\r\n    this.initialState[key] = \"\";\r\n    this.initialState[formKey] = \"\";\r\n    let capturedImage = this.webcamRef.current.getScreenshot();\r\n    console.log(key);\r\n    console.log(this.webcamRef.current);\r\n\r\n    this.setState({\r\n      [key]: capturedImage,\r\n    });\r\n    //console.log(capturedImage);\r\n    const file = this.DataURIToBlob(capturedImage);\r\n    const formData = new FormData();\r\n    formData.append(key, file, \"userImage.jpeg\");\r\n    this.setState({ [formKey]: formData });\r\n    this.showHideImagePopup();\r\n  };\r\n\r\n  DataURIToBlob = (dataURI) => {\r\n    const splitDataURI = dataURI.split(\",\");\r\n    const byteString =\r\n      splitDataURI[0].indexOf(\"base64\") >= 0\r\n        ? atob(splitDataURI[1])\r\n        : decodeURI(splitDataURI[1]);\r\n    const mimeString = splitDataURI[0].split(\":\")[1].split(\";\")[0];\r\n\r\n    const ia = new Uint8Array(byteString.length);\r\n    for (let i = 0; i < byteString.length; i++)\r\n      ia[i] = byteString.charCodeAt(i);\r\n\r\n    return new Blob([ia], { type: mimeString });\r\n  };\r\n  //Digital Signature\r\n  sigPad = {};\r\n  clearSignaturePad = (e) => {\r\n    e.preventDefault();\r\n    this.sigPad.clear();\r\n  };\r\n  captureSignature = (e, key) => {\r\n    e.preventDefault();\r\n    let formKey = \"file-\" + key;\r\n    //Creating initial state\r\n    //this.initialState[key] = \"\";\r\n    this.initialState[formKey] = \"\";\r\n\r\n    this.setState(\r\n      {\r\n        trimmedDataURL: this.sigPad.getTrimmedCanvas().toDataURL(\"image/png\"),\r\n        //[key]: capturedImage,\r\n      },\r\n      () => {\r\n        const file = this.DataURIToBlob(this.state.trimmedDataURL);\r\n        const formData = new FormData();\r\n        formData.append(key, file, \"userSignature.png\");\r\n        this.setState({ [formKey]: formData });\r\n      }\r\n    );\r\n    //console.log(capturedImage);\r\n  };\r\n\r\n  showHideImagePopup = () => {\r\n    this.setState({ showImagePopup: !this.state.showImagePopup });\r\n  };\r\n  doTogglePOIModal = () => {\r\n    this.setState({ showFileuploadPOI: !this.state.showFileuploadPOI });\r\n  };\r\n  renderColumns = (row) => {\r\n    let columns = row.map((column) => {\r\n      let key = column.key;\r\n      let type = column.type || \"text\";\r\n      let validations = column.validations || {};\r\n      let label = column.label;\r\n      let name = key;\r\n      let value = this.state[key] || \"\";\r\n      // let error1 = column.error1 || \"Ths field is required\";\r\n      // let error2 = column.error2;\r\n      let input = \"\";\r\n      let output = \"\";\r\n\r\n      if (\r\n        type === \"text\" ||\r\n        type === \"date\" ||\r\n        type === \"email\" ||\r\n        type === \"number\"\r\n      ) {\r\n        input = (\r\n          <input\r\n            {...validations}\r\n            className=\"form-control\"\r\n            type={type}\r\n            name={name}\r\n            value={value}\r\n            onInvalid={(e) => {\r\n              this.validateInput(e);\r\n              //this.validateInput(e, error1, error2);\r\n            }}\r\n            onChange={(e) => {\r\n              this.onChange(e, key);\r\n              this.validateInput(e);\r\n            }}\r\n          />\r\n        );\r\n      }\r\n      if (type === \"digitalSignature\") {\r\n        input = (\r\n          <>\r\n            <div className=\"form-group\">\r\n              <div className=\"signature-body\">\r\n                <div className=\"sig-box\">\r\n                  <div>\r\n                    <SignaturePad\r\n                      ref={(ref) => {\r\n                        this.sigPad = ref;\r\n                      }}\r\n                      penColor=\"#004ca0\"\r\n                      backgroundColor=\"#fff\"\r\n                      maxWidth={1.5}\r\n                    />\r\n                  </div>\r\n                  <div>\r\n                    {this.state.trimmedDataURL ? (\r\n                      <img src={this.state.trimmedDataURL} alt=\"\" />\r\n                    ) : null}\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"signature-footer\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-light btn-space-r\"\r\n                    onClick={this.clearSignaturePad}\r\n                  >\r\n                    Remove\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary\"\r\n                    onClick={(e) => this.captureSignature(e, key)}\r\n                  >\r\n                    Capture\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </>\r\n        );\r\n      }\r\n\r\n      if (type === \"file\") {\r\n        input = (\r\n          <div className=\"capture-image\">\r\n            <label>{label}</label>\r\n            <div className=\"dropdown custom-data-dropdown\">\r\n              <button\r\n                className=\"btn btn-secondary dropdownToggle\"\r\n                type=\"button\"\r\n                onClick={this.showHideImagePopup}\r\n              >\r\n                Upload / Capture Image\r\n              </button>\r\n              <div className=\"p-image\">\r\n                <img\r\n                  src={this.state[key]}\r\n                  style={{ width: \"300px\", height: \"300px\" }}\r\n                  alt=\"\"\r\n                />\r\n              </div>\r\n              {this.state.showImagePopup && (\r\n                <div\r\n                  className=\"dropdown-menu-new no-padding \"\r\n                  aria-labelledby=\"dropdownMenuButton\"\r\n                >\r\n                  <div className=\"row\">\r\n                    <div className=\"col-lg-12\">\r\n                      <div className=\"captured-picture\">\r\n                        <Webcam\r\n                          audio={false}\r\n                          ref={this.webcamRef}\r\n                          screenshotFormat=\"image/jpeg\"\r\n                          imageSmoothing={true}\r\n                          width=\"300px\"\r\n                          height=\"300px\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"dropdown-footer\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-lg-6\">\r\n                        <div className=\"file btn btn-primary\">\r\n                          Upload\r\n                          <input\r\n                            {...validations}\r\n                            className=\"form-control\"\r\n                            type={type}\r\n                            name={name}\r\n                            onChange={(e) => {\r\n                              this.onFileChange(e, key);\r\n                            }}\r\n                            value={\"\"}\r\n                            style={{ width: \"220px\", float: \"left\" }}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-lg-6\">\r\n                        <button\r\n                          onClick={(e) => this.captureImage(e, key)}\r\n                          className=\"btn btn-primary\"\r\n                        >\r\n                          Capture photo\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n\r\n      if (type === \"radio\") {\r\n        input = column.options.map((option, index) => {\r\n          let checked = option.value === value;\r\n          return (\r\n            <div\r\n              className=\"form-check custom-check-radio\"\r\n              key={\"radio-container-\" + index}\r\n            >\r\n              <input\r\n                {...validations}\r\n                className=\"form-check-input\"\r\n                type={type}\r\n                key={option.key}\r\n                name={option.name}\r\n                value={option.value}\r\n                checked={checked}\r\n                onChange={(e) => {\r\n                  this.onChange(e, option.name);\r\n                }}\r\n              />\r\n              <label\r\n                key={\"radio-\" + key}\r\n                className=\"form-check-label\"\r\n                htmlFor={key}\r\n              >\r\n                {option.label}\r\n              </label>\r\n            </div>\r\n          );\r\n        });\r\n        input = <div className=\"clearfix w-100\">{input}</div>;\r\n      }\r\n\r\n      if (type === \"select\") {\r\n        input = column.options.map((option, index) => {\r\n          //let selected = option.value === value;\r\n          return (\r\n            <option key={option.key} value={option.value}>\r\n              {option.label}\r\n            </option>\r\n          );\r\n        });\r\n        input = (\r\n          <>\r\n            <select\r\n              className=\"form-control\"\r\n              name={key}\r\n              onChange={(e) => {\r\n                this.onChange(e, key);\r\n              }}\r\n              value={value}\r\n              {...validations}\r\n            >\r\n              {input}\r\n            </select>\r\n            {key === \"poi\" && this.state[\"file-\" + key] && (\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn text-btn\"\r\n                onClick={this.doTogglePOIModal}\r\n              >\r\n                View Image\r\n              </button>\r\n            )}\r\n            {key === \"poi\" && this.state.showFileuploadPOI === true && (\r\n              <Modal\r\n                size=\"md\"\r\n                show={this.state.showFileuploadPOI}\r\n                onHide={this.doTogglePOIModal}\r\n              >\r\n                <Modal.Header closeButton>\r\n                  <Modal.Title>{value}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                  <div className=\"image-modal\">\r\n                    <img src={this.state[\"file-\" + key]} alt=\"\" />\r\n                  </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                  <div className=\"file btn btn-primary\">\r\n                    Upload\r\n                    <input\r\n                      className=\"form-control\"\r\n                      type=\"file\"\r\n                      name={\"file-\" + key}\r\n                      onChange={(e) => {\r\n                        this.onFileChange(e, \"file-\" + key);\r\n                      }}\r\n                      value={\"\"}\r\n                    />\r\n                  </div>\r\n                </Modal.Footer>\r\n              </Modal>\r\n            )}\r\n          </>\r\n        );\r\n      }\r\n\r\n      if (type === \"checkbox\") {\r\n        //console.log(validations);\r\n        input = column.options.map((option, index) => {\r\n          let checked = false;\r\n          // Values will be saved in comma seperated format. Checking whether the checkbox needs to be checked or not.\r\n          if (value && value.length > 0) {\r\n            checked = value.indexOf(option.value) > -1 ? true : false;\r\n          }\r\n\r\n          return (\r\n            <div\r\n              className=\"form-check custom-check-radio\"\r\n              key={\"checkbox-container-\" + index}\r\n            >\r\n              <input\r\n                {...validations}\r\n                className=\"form-check-input\"\r\n                type={type}\r\n                key={option.key}\r\n                name={option.name}\r\n                value={option.value}\r\n                checked={checked}\r\n                onChange={(e) => {\r\n                  this.onChange(e, key, \"multiple\");\r\n                }}\r\n              />\r\n              <label\r\n                key={\"checkbox-\" + key}\r\n                className=\"form-check-label\"\r\n                htmlFor={key}\r\n              >\r\n                {option.label}\r\n              </label>\r\n            </div>\r\n          );\r\n        });\r\n        input = <div className=\"clearfix w-100\">{input}</div>;\r\n      }\r\n\r\n      let allLables = \"\";\r\n      if (type === \"grid\") {\r\n        let val = \"\";\r\n\r\n        input = column.gridColumns.map((gridColumn, index) => {\r\n          //console.log(gridColumn);\r\n          val = this.state[gridColumn.key] || \"\";\r\n\r\n          if (index !== column.gridColumns.length - 1) {\r\n            allLables += gridColumn.label + \", \";\r\n          } else {\r\n            allLables += gridColumn.label;\r\n          }\r\n\r\n          return (\r\n            <React.Fragment key={gridColumn.key}>\r\n              <br />\r\n              <label htmlFor={gridColumn.label}>{gridColumn.label}</label>\r\n              <input\r\n                {...validations}\r\n                className=\"form-control\"\r\n                type={gridColumn.type}\r\n                name={gridColumn.key}\r\n                value={val}\r\n                onChange={(e) => {\r\n                  this.onChange(e, gridColumn.key);\r\n                }}\r\n              />\r\n            </React.Fragment>\r\n          );\r\n        });\r\n      }\r\n\r\n      //Displaying the resultant fields\r\n      if (type === \"grid\") {\r\n        output = (\r\n          <div className=\"col-lg-3\" key={\"col\" + key}>\r\n            <label htmlFor={label} key={\"l\" + key}>\r\n              {label}\r\n            </label>\r\n            <div className=\"dropdown custom-data-dropdown\">\r\n              <button\r\n                className=\"btn btn-secondary dropdown-toggle\"\r\n                type=\"button\"\r\n                id=\"accordion\"\r\n                data-toggle=\"dropdown\"\r\n                aria-haspopup=\"true\"\r\n                aria-expanded=\"false\"\r\n              >\r\n                {allLables}\r\n              </button>\r\n              <div className=\"dropdown-menu\" aria-labelledby=\"accordion\">\r\n                {input}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      } else if (type === \"digitalSignature\") {\r\n        output = (\r\n          <div className=\"col-lg-12\" key={key}>\r\n            <div className=\"form-group\">\r\n              <label htmlFor={label} key={\"l\" + key}>\r\n                {label}\r\n              </label>\r\n              {input}\r\n            </div>\r\n          </div>\r\n        );\r\n      } else {\r\n        output = (\r\n          <div className=\"col-lg-4\" key={key}>\r\n            <div className=\"form-group\">\r\n              <label htmlFor={label} key={\"l\" + key}>\r\n                {label}\r\n              </label>\r\n              {input}\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n\r\n      return output;\r\n    });\r\n    return columns;\r\n  };\r\n\r\n  renderForm = () => {\r\n    if (this.props.model.length === undefined) {\r\n      return \"Data format invalid\";\r\n    }\r\n    let model = this.props.model;\r\n    //console.log(model);\r\n    let formUI = model.map((row, index) => {\r\n      return (\r\n        // <React.Fragment key={\"row\" + index}>\r\n        //   <div className=\"row\">{this.renderColumns(row.columns)}</div>\r\n        //   <hr />\r\n        // </React.Fragment>\r\n        <div className=\"card\" key={`Grouping-${index}`}>\r\n          <div className=\"card-header\">\r\n            <h2 className=\"mb-0\">\r\n              <button\r\n                className=\"btn btn-link btn-block text-left float-left\"\r\n                data-toggle=\"collapse\"\r\n                data-target={`#collapse${index}`}\r\n                aria-expanded=\"true\"\r\n                aria-controls=\"collapseOne\"\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                }}\r\n              >\r\n                {row.groupName}\r\n              </button>\r\n            </h2>\r\n          </div>\r\n          <div\r\n            id={`collapse${index}`}\r\n            className=\"collapse show\"\r\n            aria-labelledby=\"headingOne\"\r\n            data-parent=\"#accordion\"\r\n          >\r\n            <div className=\"card-body\">\r\n              <div className=\"row\">{this.renderColumns(row.columns)}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n    return formUI;\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (this.props.onSubmit) {\r\n      this.props.onSubmit(this.state);\r\n      //Resetting the form\r\n      this.setState(this.initialState);\r\n      this.setState({ showFileuploadPOI: false });\r\n    }\r\n  };\r\n\r\n  onChange = (e, key, type = \"single\") => {\r\n    if (key === \"poi\" && e.target.value !== \"\") {\r\n      this.setState({ showFileuploadPOI: true });\r\n    } else {\r\n      this.setState({ showFileuploadPOI: false });\r\n    }\r\n\r\n    //Creating initial state\r\n    this.initialState[key] = \"\";\r\n\r\n    if (type === \"single\") {\r\n      this.setState({\r\n        [key]: e.target.value,\r\n      });\r\n    } else {\r\n      //Array of values\r\n      let found = this.state[key]\r\n        ? this.state[key].find((d) => d === e.target.value)\r\n        : false;\r\n      if (found) {\r\n        let data = this.state[key].filter((d) => {\r\n          return d !== found;\r\n        });\r\n        this.setState({\r\n          [key]: data,\r\n        });\r\n      } else {\r\n        let existing = this.state[key];\r\n        let data = [e.target.value];\r\n        if (existing) {\r\n          data = [e.target.value, ...existing];\r\n        }\r\n        this.setState({\r\n          [key]: data,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    if (\r\n      nextProps.defaultValues &&\r\n      nextProps.defaultValues.id !== prevState.id\r\n    ) {\r\n      return {\r\n        ...nextProps.defaultValues,\r\n      };\r\n    }\r\n    return null;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={this.props.className}>\r\n        <form\r\n          onSubmit={(e) => {\r\n            this.onSubmit(e);\r\n          }}\r\n        >\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <div className=\"row\">\r\n                <div className=\"col-lg-12\">\r\n                  <div id=\"accordion\" className=\"accordion\">\r\n                    {this.renderForm()}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"card-footer text-align-right\">\r\n              <div className=\"row\">\r\n                <div className=\"col-lg-12\">\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-secondary float-right\"\r\n                  >\r\n                    Submit\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CustomForm;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {\r\n  loadOpenYourAccountSchema,\r\n  openYourAccount,\r\n} from \"../../../../actions/open-your-account\";\r\nimport CustomForm from \"../../../../reusable-components/CustomForm\";\r\n\r\n//import \"./open-your-account.css\";\r\n\r\nclass OpenYourAccount extends Component {\r\n  state = {};\r\n\r\n  componentDidMount() {\r\n    // console.log(\r\n    //   sessionStorage.getItem(\"bank_id\") + \" \",\r\n    //   sessionStorage.getItem(\"country_id\")\r\n    // );\r\n    let schemaInfo = {\r\n      bank_id: sessionStorage.getItem(\"bank_id\"),\r\n      country_id: sessionStorage.getItem(\"country_id\"),\r\n    };\r\n    this.props.loadOpenYourAccountSchema(schemaInfo);\r\n  }\r\n\r\n  getCustomDate = () => {\r\n    var today = new Date();\r\n    var dd = String(today.getDate()).padStart(2, \"0\");\r\n    var mm = String(today.getMonth() + 1).padStart(2, \"0\"); //January is 0!\r\n    var yyyy = today.getFullYear();\r\n\r\n    today = yyyy + \"-\" + mm + \"-\" + dd; // 2020-09-24\r\n    return today;\r\n  };\r\n\r\n  onSubmitData = (formData) => {\r\n    let submittedData = {\r\n      account_info: formData,\r\n      processed_indicator: \"NI\",\r\n      current_date: this.getCustomDate(),\r\n    };\r\n    this.props.openYourAccount(submittedData).then(() => {\r\n      console.log(this.props.openYourAccountResponseData.openYourAccountData);\r\n    });\r\n    //console.log(submittedData);\r\n  };\r\n\r\n  render() {\r\n    //console.log(this.props.openYourAccountResponseData);\r\n    return (\r\n      <div id=\"content\">\r\n        <div className=\"inner-container\">\r\n          <div className=\"page-header\">\r\n            <h2>Create an account with us</h2>\r\n          </div>\r\n          <p>Individual Account Opening Form</p>\r\n          <div className=\"row margin-top-30\">\r\n            <div className=\"col-lg-12\">\r\n              {this.props.openYourAccountResponseData\r\n                .openYourAccountSchemaData &&\r\n                this.props.openYourAccountResponseData.openYourAccountSchemaData\r\n                  .formData && (\r\n                  <CustomForm\r\n                    className=\"open-account\"\r\n                    model={\r\n                      this.props.openYourAccountResponseData\r\n                        .openYourAccountSchemaData.formData.data\r\n                    }\r\n                    onSubmit={(model) => {\r\n                      this.onSubmitData(model);\r\n                    }}\r\n                  />\r\n                )}\r\n              {this.props.openYourAccountResponseData.openYourAccountData &&\r\n                this.props.openYourAccountResponseData.openYourAccountData\r\n                  .error === \"false\" && (\r\n                  <div\r\n                    className=\"alert alert-success alert-dismissible fade show\"\r\n                    role=\"alert\"\r\n                  >\r\n                    {/* <strong>\r\n                      {\r\n                        this.props.openYourAccountResponseData\r\n                          .openYourAccountData.successMsg\r\n                      }\r\n                    </strong> */}\r\n                    Your account creation request has been submitted\r\n                    successfully.\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"close\"\r\n                      data-dismiss=\"alert\"\r\n                      aria-label=\"Close\"\r\n                    >\r\n                      <span aria-hidden=\"true\">&times;</span>\r\n                    </button>\r\n                  </div>\r\n                )}\r\n              {this.props.openYourAccountResponseData.openYourAccountData &&\r\n                this.props.openYourAccountResponseData.openYourAccountData\r\n                  .error === \"true\" && (\r\n                  <div\r\n                    className=\"alert alert-warning alert-dismissible fade show\"\r\n                    role=\"alert\"\r\n                  >\r\n                    Your account creation request has been submitted\r\n                    successfully.\r\n                    {/* <strong>\r\n                      {\r\n                        this.props.openYourAccountResponseData\r\n                          .openYourAccountData.errorMsg\r\n                      }\r\n                    </strong> */}\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"close\"\r\n                      data-dismiss=\"alert\"\r\n                      aria-label=\"Close\"\r\n                    >\r\n                      <span aria-hidden=\"true\">&times;</span>\r\n                    </button>\r\n                  </div>\r\n                )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (props) => {\r\n  if (props.openYourAccountReducer.openYourAccountSchemaData) {\r\n    console.log(\r\n      props.openYourAccountReducer.openYourAccountSchemaData.formData.data\r\n    );\r\n  }\r\n  return {\r\n    openYourAccountResponseData: props.openYourAccountReducer,\r\n  };\r\n};\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, { loadOpenYourAccountSchema, openYourAccount })(\r\n    OpenYourAccount\r\n  )\r\n);\r\n","import OpenYourAccount from \"./pages/open-your-account/open-your-account\";\r\n\r\nexport default {\r\n  pages: [\r\n    {\r\n      routeProps: {\r\n        path: \"/create-your-account\",\r\n        component: OpenYourAccount,\r\n      },\r\n      name: \"OpenYourAccount\",\r\n    },\r\n  ],\r\n};\r\n","import {\r\n  doLoadOpenYourAccountStarted,\r\n  doLoadOpenYourAccountSuccess,\r\n  doLoadOpenYourAccountError,\r\n  doOpenYourAccountStarted,\r\n  doOpenYourAccountSuccess,\r\n  doOpenYourAccountError,\r\n} from \"./open-your-account\";\r\nimport Services from \"../../services\";\r\nimport openYourAccountSchema from \"../../data-models-json/open-account-schema_test.json\";\r\n\r\nexport const loadOpenYourAccountSchema = (loadData) => {\r\n  return function doOpenYourAccountAction(dispatch) {\r\n    // dispatch(doLoadOpenYourAccountStarted());\r\n    // dispatch(doLoadOpenYourAccountSuccess(openYourAccountSchema));\r\n    dispatch(doLoadOpenYourAccountStarted());\r\n    return Services.APICallConfig.callAPIService(\r\n      \"LOAD_OPEN_YOUR_ACCOUNT\",\r\n      loadData\r\n    )\r\n      .then((response) => {\r\n        dispatch(doLoadOpenYourAccountSuccess(response));\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"error response\", error);\r\n        dispatch(doLoadOpenYourAccountError(error));\r\n      });\r\n  };\r\n};\r\n\r\nexport const openYourAccount = (accountData) => {\r\n  return function doOpenYourAccountAction(dispatch) {\r\n    dispatch(doOpenYourAccountStarted());\r\n\r\n    return Services.APICallConfig.callAPIService(\r\n      \"OPEN_YOUR_ACCOUNT\",\r\n      accountData\r\n    )\r\n      .then((response) => {\r\n        dispatch(doOpenYourAccountSuccess(response));\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"error response\", error);\r\n        dispatch(doOpenYourAccountError(error));\r\n      });\r\n  };\r\n};\r\n","import {\r\n  LOAD_OPEN_YOUR_ACCOUNT_STARTED,\r\n  LOAD_OPEN_YOUR_ACCOUNT_SUCCESS,\r\n  LOAD_OPEN_YOUR_ACCOUNT_ERROR,\r\n  OPEN_YOUR_ACCOUNT_STARTED,\r\n  OPEN_YOUR_ACCOUNT_SUCCESS,\r\n  OPEN_YOUR_ACCOUNT_ERROR,\r\n} from \"./type\";\r\n\r\nexport const doLoadOpenYourAccountStarted = () => {\r\n  return {\r\n    type: LOAD_OPEN_YOUR_ACCOUNT_STARTED,\r\n  };\r\n};\r\n\r\nexport const doLoadOpenYourAccountSuccess = (accountSchema) => {\r\n  return {\r\n    type: LOAD_OPEN_YOUR_ACCOUNT_SUCCESS,\r\n    payload: accountSchema,\r\n  };\r\n};\r\n\r\nexport const doLoadOpenYourAccountError = (error) => {\r\n  return {\r\n    type: LOAD_OPEN_YOUR_ACCOUNT_ERROR,\r\n    payload: error,\r\n  };\r\n};\r\n\r\nexport const doOpenYourAccountStarted = () => {\r\n  return {\r\n    type: OPEN_YOUR_ACCOUNT_STARTED,\r\n  };\r\n};\r\n\r\nexport const doOpenYourAccountSuccess = (accountInfo) => {\r\n  return {\r\n    type: OPEN_YOUR_ACCOUNT_SUCCESS,\r\n    payload: accountInfo,\r\n  };\r\n};\r\n\r\nexport const doOpenYourAccountError = (error) => {\r\n  return {\r\n    type: OPEN_YOUR_ACCOUNT_ERROR,\r\n    payload: error,\r\n  };\r\n};\r\n","import SuperAdminDashboard from \"./pages/superadmin-dashboard/superadmin-dashboard\";\r\n\r\nexport default {\r\n  pages: [\r\n    {\r\n      routeProps: {\r\n        path: \"/superadmindashboard\",\r\n        component: SuperAdminDashboard,\r\n      },\r\n      name: \"SuperAdminDashboard\",\r\n    },\r\n  ],\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./superadmin-dashboard.css\";\r\nimport {\r\n  OPEN_YOUR_ACCONT,\r\n  PROCESS_ORMENT_ACCOUNT,\r\n  VALIDATE_CREDIT_CARD,\r\n  REQUEST_CHECKBOOK,\r\n  MANAGE_RULES_ICON,\r\n  DORMANT_ACCOUNT_ICON,\r\n  TRANSACTION_DASH_ICON\r\n} from \"../../../../app-constant/images\";\r\n\r\nclass SuperAdminDashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    return (\r\n      <div id=\"content\">\r\n        <div className=\"inner-container\">\r\n          <div className=\"page-header\">\r\n            <h2 className=\"welcome-text\">\r\n              <span>Welcome to </span>Edge Banking Dashboard\r\n            </h2>\r\n          </div>\r\n          {/* <p>\r\n            With the help of this application banking will be easy and take a\r\n            new shape.\r\n          </p>\r\n\r\n          <p>This is future of banking. </p> */}\r\n\r\n          <div className=\"row card-group\">\r\n            <div className=\"col-lg-3 flow-gap\">\r\n              <div className=\"card\">\r\n                <div className=\"card-header\">\r\n                  <figure>\r\n                    <img\r\n                      src={OPEN_YOUR_ACCONT}\r\n                      width=\"218px\"\r\n                      alt=\"Configure Open Your Account\"\r\n                    />\r\n                  </figure>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <h3>Configure Account</h3>\r\n                  <p>Manipulate Create account</p>\r\n                </div>\r\n                <div className=\"card-footer\">\r\n                  <Link\r\n                    to=\"/configure-create-your-account\"\r\n                    className=\"btn btn-primary\"\r\n                  >\r\n                    Configure Account\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-3 flow-gap\">\r\n              <div className=\"card\">\r\n                <div className=\"card-header\">\r\n                  <figure>\r\n                    <img src={PROCESS_ORMENT_ACCOUNT} alt=\"Add Master Data\" />\r\n                  </figure>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <h3>Add master Data</h3>\r\n                  <p>Manipulate Master Data.</p>\r\n                </div>\r\n                <div className=\"card-footer\">\r\n                  <Link\r\n                    to=\"/configure-select-master\"\r\n                    className=\"btn btn-primary\"\r\n                  >\r\n                    Master Data\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-3 flow-gap\">\r\n              <div className=\"card\">\r\n                <div className=\"card-header\">\r\n                  <figure>\r\n                    <img\r\n                      src={DORMANT_ACCOUNT_ICON}\r\n                      alt=\"Process Dormat Account\"\r\n                    />\r\n                  </figure>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <h3>Dormant Account</h3>\r\n                  <p>Manipulate Dormant Data.</p>\r\n                </div>\r\n                <div className=\"card-footer\">\r\n                  <Link\r\n                    to=\"/configure-dormat-account\"\r\n                    className=\"btn btn-primary\"\r\n                  >\r\n                    Dormant Data\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-3 flow-gap\">\r\n              <div className=\"card\">\r\n                <div className=\"card-header\">\r\n                  <figure>\r\n                    <img src={REQUEST_CHECKBOOK} alt=\"Request Checkbook\" />\r\n                  </figure>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <h3>Checkbook Request</h3>\r\n                  <p>Manipulate Checkbook Data.</p>\r\n                </div>\r\n                <div className=\"card-footer\">\r\n                  <Link to=\"/configure-cheque-book\" className=\"btn btn-primary\">\r\n                    Checkbook Data\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n\r\n            <div className=\"col-lg-3 flow-gap\">\r\n              <div className=\"card\">\r\n                <div className=\"card-header\">\r\n                  <figure>\r\n                    <img\r\n                      src={VALIDATE_CREDIT_CARD}\r\n                      alt=\"Validate Credit Card\"\r\n                    />\r\n                  </figure>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <h3>Validate Credit Card</h3>\r\n                  <p>Manipulate Credit Card Data.</p>\r\n                </div>\r\n                <div className=\"card-footer\">\r\n                  <Link to=\"/configure-credit-card\" className=\"btn btn-primary\">\r\n                    Credit Card Data\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n\r\n            <div className=\"col-lg-3 flow-gap\">\r\n              <div className=\"card\">\r\n                <div className=\"card-header\">\r\n                  <figure>\r\n                    <img\r\n                      src={MANAGE_RULES_ICON}\r\n                      alt=\"Validate Credit Card\"\r\n                    />\r\n                  </figure>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <h3>Configure Rules</h3>\r\n                  <p>Fradulent Analytics Rules</p>\r\n                </div>\r\n                <div className=\"card-footer\">\r\n                  <Link to=\"/transaction-rules\" className=\"btn btn-primary\">\r\n                    Fraud Rules Managment\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n\r\n            <div className=\"col-lg-3 flow-gap\">\r\n              <div className=\"card\">\r\n                <div className=\"card-header\">\r\n                  <figure>\r\n                    <img\r\n                      src={TRANSACTION_DASH_ICON}\r\n                      alt=\"Transaction Dashboard\"\r\n                    />\r\n                  </figure>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <h3>Fraud Prevention</h3>\r\n                  <p>Fradulent Transaction Analytics</p>\r\n                </div>\r\n                <div className=\"card-footer\">\r\n                  <Link to=\"/risk-analysis\" className=\"btn btn-primary\">\r\n                    Transaction Dashboard\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SuperAdminDashboard;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {\r\n  COUNTRY_ICON,\r\n  BANK_ICON,\r\n  //ACCOUNT_TYPE,\r\n} from \"../../../../app-constant/images\";\r\nimport {\r\n  loadCreateYourAccountConfiguration,\r\n  createYourAccountConfiguration,\r\n} from \"../../../../actions/create-your-account-configuration\";\r\n\r\nimport \"./configure-create-your-account.css\";\r\n\r\nclass ConfigureCreateYourAccount extends Component {\r\n  state = {\r\n    // allData: [\r\n    //   {\r\n    //     country: \"IND\",\r\n    //     bank: \"ICICI\",\r\n    //     groupingData: [\r\n    //       {\r\n    //         groupName: \"Personal Information\",\r\n    //         columns: [\r\n    //           {\r\n    //             key: \"name\",\r\n    //             label: \"Name\",\r\n    //             type: \"text\",\r\n    //             validations: \"\",\r\n    //             showHideMultipleText: false,\r\n    //             typeOfMultipleText: \"\",\r\n    //             options: [],\r\n    //             actualOptions: \"\",\r\n    //           },\r\n    //           {\r\n    //             key: \"age\",\r\n    //             label: \"Age\",\r\n    //             type: \"number\",\r\n    //             validations: \"\",\r\n    //             showHideMultipleText: false,\r\n    //             typeOfMultipleText: \"\",\r\n    //             options: [],\r\n    //             actualOptions: \"\",\r\n    //           },\r\n    //         ],\r\n    //       },\r\n    //       {\r\n    //         groupName: \"Account Information\",\r\n    //         columns: [\r\n    //           {\r\n    //             key: \"accountInformation\",\r\n    //             label: \"Name\",\r\n    //             type: \"text\",\r\n    //             validations: \"\",\r\n    //             showHideMultipleText: false,\r\n    //             typeOfMultipleText: \"\",\r\n    //             options: [],\r\n    //             actualOptions: \"\",\r\n    //           },\r\n    //         ],\r\n    //       },\r\n    //     ],\r\n    //   },\r\n    //   {\r\n    //     country: \"US\",\r\n    //     bank: \"HDFC\",\r\n    //     groupingData: [\r\n    //       {\r\n    //         groupName: \"Personal Information2\",\r\n    //         columns: [\r\n    //           {\r\n    //             key: \"name\",\r\n    //             label: \"Name\",\r\n    //             type: \"text\",\r\n    //             validations: \"\",\r\n    //             showHideMultipleText: false,\r\n    //             typeOfMultipleText: \"\",\r\n    //             options: [],\r\n    //             actualOptions: \"\",\r\n    //           },\r\n    //           {\r\n    //             key: \"age\",\r\n    //             label: \"Age\",\r\n    //             type: \"number\",\r\n    //             validations: \"\",\r\n    //             showHideMultipleText: false,\r\n    //             typeOfMultipleText: \"\",\r\n    //             options: [],\r\n    //             actualOptions: \"\",\r\n    //           },\r\n    //         ],\r\n    //       },\r\n    //     ],\r\n    //   },\r\n    // ],\r\n    banks: [],\r\n    selectedCountry: \"\",\r\n    selectedBank: \"\",\r\n    allData: [],\r\n    dropDownData: [],\r\n    groupingData: [],\r\n    selectedDropDowns: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.loadCreateYourAccountConfiguration().then(() => {\r\n      let receivedObject = this.props.loadCreateYourAccountConfigurationData\r\n        .createYourAccountConfigData;\r\n      //console.log(receivedObject);\r\n      if (receivedObject.allData.length > 0) {\r\n        this.setState({\r\n          allData: receivedObject.allData,\r\n        });\r\n      }\r\n      if (receivedObject.dropDownData.length > 0) {\r\n        this.setState({\r\n          dropDownData: receivedObject.dropDownData,\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  // --------------------------Display grid------------------------------\r\n  displayGrid = (element, groupData) => {\r\n    return (\r\n      <div className=\"nested-table\">\r\n        <h5>Related Data</h5>\r\n        <table className=\"table\">\r\n          <colgroup>\r\n            <col style={{ width: \"40%\" }} />\r\n            <col style={{ width: \"40%\" }} />\r\n            <col style={{ width: \"20%\" }} />\r\n          </colgroup>\r\n          <tbody>{this.displayGridBody(element, groupData)}</tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  displayGridBody = (element, groupData) => {\r\n    let gridBodyContent = element.gridColumns.map(\r\n      (innerElement, innerElementIndex) => {\r\n        return (\r\n          <tr key={`innerElements-${innerElementIndex}`}>\r\n            <td>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name={`text-${innerElement.key}`}\r\n                value={innerElement.label}\r\n                onChange={(e) => this.changeGridField(e, element, innerElement)}\r\n              />\r\n            </td>\r\n            <td>\r\n              <select\r\n                className=\"form-control\"\r\n                name={`select-${innerElement.type}`}\r\n                value={innerElement.type}\r\n                onChange={(e) => this.changeGridField(e, element, innerElement)}\r\n              >\r\n                <option value=\"\">-Type-</option>\r\n                <option value=\"text\">Text</option>\r\n                <option value=\"number\">Number</option>\r\n                <option value=\"email\">Email</option>\r\n                <option value=\"date\">Date</option>\r\n              </select>\r\n            </td>\r\n            <td>\r\n              <div className=\"sub-action\">\r\n                {innerElementIndex === 0 ? (\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-add\"\r\n                    onClick={() =>\r\n                      this.addGridElement(innerElementIndex, element)\r\n                    }\r\n                  ></button>\r\n                ) : (\r\n                  <>\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-add\"\r\n                      onClick={() =>\r\n                        this.addGridElement(innerElementIndex, element)\r\n                      }\r\n                    ></button>\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-delete\"\r\n                      onClick={() =>\r\n                        this.deleteGridElement(innerElementIndex, element)\r\n                      }\r\n                    ></button>\r\n                  </>\r\n                )}\r\n              </div>\r\n            </td>\r\n          </tr>\r\n        );\r\n      }\r\n    );\r\n    return gridBodyContent;\r\n  };\r\n\r\n  changeGridField = (e, currentElement, innerElement) => {\r\n    console.log(innerElement);\r\n    let rand = +new Date();\r\n    currentElement.gridColumns.map((innerElementFromLoop) => {\r\n      if (\r\n        JSON.stringify(innerElementFromLoop) === JSON.stringify(innerElement)\r\n      ) {\r\n        if (e.target.tagName === \"INPUT\") {\r\n          innerElementFromLoop.key = \"name\" + rand;\r\n          innerElementFromLoop.label = e.target.value;\r\n        } else {\r\n          innerElementFromLoop.type = e.target.value;\r\n        }\r\n        return innerElementFromLoop;\r\n      }\r\n      return innerElement;\r\n    });\r\n    this.setState((prevState) => ({}));\r\n  };\r\n\r\n  addGridElement = (index, element) => {\r\n    //console.log(groupData);\r\n    let rand = +new Date();\r\n    let columnData = {\r\n      key: \"name\" + rand,\r\n      label: \"\",\r\n      type: \"\",\r\n    };\r\n    element.gridColumns.splice(index + 1, 0, columnData);\r\n    this.setState((prevState) => ({}));\r\n  };\r\n  deleteGridElement = (deleteIndex, element) => {\r\n    element.gridColumns.splice(deleteIndex, 1);\r\n    this.setState((prevState) => ({}));\r\n  };\r\n\r\n  // --------------------------Display grid------------------------------\r\n\r\n  // ------------------------------ Display Fields in accordion ----------------------------\r\n\r\n  populateDropdowns = (selectedDropDowns) => {\r\n    let key = +new Date();\r\n    let input = selectedDropDowns.map((item, index) => {\r\n      return (\r\n        <option key={`${index}-${key}`} value={item.groupName}>\r\n          {item.groupName}\r\n        </option>\r\n      );\r\n    });\r\n    return input;\r\n  };\r\n\r\n  changeDropdownData = (e, currentElement, groupData) => {\r\n    //console.log(e.target.value);\r\n    //console.log( element.type = e.target.value;)\r\n    //console.log(currentElement);\r\n    groupData.columns.map((element) => {\r\n      if (JSON.stringify(element) === JSON.stringify(currentElement)) {\r\n        console.log(e.target.tagName);\r\n        if (e.target.tagName === \"SELECT\") {\r\n          //element.actualOptions = e.target.value;\r\n          element.dropdownSchema = e.target.value;\r\n          //console.log(this.state.selectedDropDowns);\r\n          let tempOptions = \"\";\r\n          this.state.selectedDropDowns.map((item) => {\r\n            if (e.target.value === item.groupName) {\r\n              for (let i = 0; i < item.columns.length; i++) {\r\n                if (i !== item.columns.length - 1) {\r\n                  tempOptions += item.columns[i].value + \",\";\r\n                } else {\r\n                  tempOptions += item.columns[i].value;\r\n                }\r\n              }\r\n              element.actualOptions = tempOptions;\r\n            }\r\n          });\r\n          return element;\r\n        }\r\n      }\r\n      return element;\r\n    });\r\n    this.setState((prevState) => ({}));\r\n  };\r\n\r\n  displayFields = (groupData) => {\r\n    let groupElements = groupData.columns.map((element, elementIndex) => {\r\n      return (\r\n        <tr key={`elements-${elementIndex}`}>\r\n          <td>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name={`text-${element.key}`}\r\n              value={element.label}\r\n              onChange={(e) => this.changeField(e, element, groupData)}\r\n            />\r\n          </td>\r\n          <td>\r\n            <select\r\n              className=\"form-control\"\r\n              name={`select-${element.type}`}\r\n              value={element.type}\r\n              onChange={(e) => this.changeField(e, element, groupData)}\r\n            >\r\n              <option value=\"\">-Type-</option>\r\n              <option value=\"text\">Text</option>\r\n              <option value=\"number\">Number</option>\r\n              <option value=\"email\">Email</option>\r\n              <option value=\"checkbox\">Checkbox</option>\r\n              <option value=\"radio\">Radio</option>\r\n              <option value=\"select\">Select</option>\r\n              <option value=\"date\">Date</option>\r\n              <option value=\"file\">File</option>\r\n              <option value=\"grid\">Grid</option>\r\n              <option value=\"digitalSignature\">Digital Signature</option>\r\n            </select>\r\n          </td>\r\n          <td>\r\n            {/* {element.showHideMultipleText && (\r\n              <textarea\r\n                className=\"form-control\"\r\n                name={`multi-${element.key}`}\r\n                value={element.actualOptions}\r\n                onChange={(e) =>\r\n                  this.changeMultiValuedField(e, element, groupData)\r\n                }\r\n                onBlur={(e) => {\r\n                  this.createOptions(e, element, groupData);\r\n                }}\r\n              />\r\n            )} */}\r\n            {element.showHideMultipleText && (\r\n              <select\r\n                className=\"form-control\"\r\n                name={`select-${element.dropdownSchema}`}\r\n                value={element.dropdownSchema}\r\n                onChange={(e) => this.changeDropdownData(e, element, groupData)}\r\n                onBlur={(e) => {\r\n                  this.createOptions(e, element, groupData);\r\n                }}\r\n              >\r\n                <option value=\"\">-Type-</option>\r\n                {this.populateDropdowns(this.state.selectedDropDowns)}\r\n              </select>\r\n            )}\r\n            {element.showHideGrid && this.displayGrid(element, groupData)}\r\n          </td>\r\n          <td className=\"valign-middle\">\r\n            {element.showHideGrid === false && (\r\n              <input\r\n                type=\"checkbox\"\r\n                value={\r\n                  element.validations !== undefined\r\n                    ? element.validations.required\r\n                    : false\r\n                }\r\n                key={`required-${element.key}`}\r\n                defaultChecked={\r\n                  element.validations !== undefined &&\r\n                  element.validations.required\r\n                    ? true\r\n                    : \"\"\r\n                }\r\n                onChange={(e) => {\r\n                  this.changeValidationField(e, element, groupData);\r\n                }}\r\n              />\r\n            )}\r\n          </td>\r\n          <td className=\"valign-middle\">\r\n            {elementIndex === 0 ? (\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-add\"\r\n                onClick={() => this.addCustomElement(elementIndex, groupData)}\r\n              ></button>\r\n            ) : (\r\n              <>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-add\"\r\n                  onClick={() => this.addCustomElement(elementIndex, groupData)}\r\n                ></button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-delete\"\r\n                  onClick={() =>\r\n                    this.deleteCustomElement(elementIndex, groupData)\r\n                  }\r\n                ></button>\r\n              </>\r\n            )}\r\n          </td>\r\n        </tr>\r\n      );\r\n    });\r\n    return groupElements;\r\n  };\r\n\r\n  //Change General Fields\r\n  changeField = (e, currentElement, groupData) => {\r\n    //console.log(currentElement);\r\n    let newGroupData = groupData.columns.map((element) => {\r\n      if (JSON.stringify(element) === JSON.stringify(currentElement)) {\r\n        let rand = +new Date();\r\n        if (e.target.tagName === \"INPUT\") {\r\n          element.key = e.target.value.toLowerCase().replace(/\\s/g, \"\") + rand;\r\n          element.label = e.target.value;\r\n          return element;\r\n        } else if (e.target.tagName === \"SELECT\") {\r\n          element.type = e.target.value;\r\n          if (\r\n            e.target.value === \"checkbox\" ||\r\n            e.target.value === \"radio\" ||\r\n            e.target.value === \"select\"\r\n          ) {\r\n            currentElement.typeOfMultipleText = e.target.value;\r\n            currentElement.showHideMultipleText = true;\r\n            currentElement.showHideGrid = false;\r\n          } else if (e.target.value === \"grid\") {\r\n            currentElement.showHideMultipleText = false;\r\n            currentElement.showHideGrid = true;\r\n          } else {\r\n            currentElement.typeOfMultipleText = \"\";\r\n            currentElement.showHideMultipleText = false;\r\n            currentElement.showHideGrid = false;\r\n          }\r\n          return element;\r\n        }\r\n      }\r\n      return element;\r\n    });\r\n    // calling setstate to update the state\r\n    this.setState((prevState) => ({}));\r\n\r\n    //console.log(this.state);\r\n  };\r\n\r\n  //Change Multi valued fields\r\n  changeMultiValuedField = (e, currentElement, groupData) => {\r\n    //console.log(currentElement);\r\n    let newGroupData = groupData.columns.map((element) => {\r\n      if (JSON.stringify(element) === JSON.stringify(currentElement)) {\r\n        //console.log(e.target.tagName);\r\n        if (e.target.tagName === \"TEXTAREA\") {\r\n          element.actualOptions = e.target.value;\r\n          return element;\r\n        }\r\n      }\r\n      return element;\r\n    });\r\n    this.setState((prevState) => ({}));\r\n  };\r\n\r\n  // Change valiadtion field\r\n  changeValidationField = (e, currentElement, groupData) => {\r\n    console.log(currentElement);\r\n    let newGroupData = groupData.columns.map((element) => {\r\n      if (JSON.stringify(element) === JSON.stringify(currentElement)) {\r\n        console.log(e.target.type);\r\n        if (e.target.type === \"checkbox\") {\r\n          if (currentElement.validations) {\r\n            if (currentElement.validations.required) {\r\n              currentElement.validations = {};\r\n            } else {\r\n              currentElement.validations = { required: true };\r\n            }\r\n          }\r\n          return element;\r\n        }\r\n      }\r\n      return element;\r\n    });\r\n    this.setState((prevState) => ({}));\r\n  };\r\n\r\n  // Creating options array\r\n  createOptions = (e, currentElement, groupData) => {\r\n    groupData.columns.map((element) => {\r\n      if (JSON.stringify(element) === JSON.stringify(currentElement)) {\r\n        let actualOptionsArr = element.actualOptions.split(\",\");\r\n        element.options = [];\r\n        //console.log(actualOptionsArr);\r\n        if (element.type === \"select\") {\r\n          let optionObj = { key: \"select\", label: \"Select\", value: \"\" };\r\n          element.options.push(optionObj);\r\n          actualOptionsArr.map((item) => {\r\n            element.options.push({ key: item, label: item, value: item });\r\n          });\r\n          return element;\r\n        }\r\n        if (element.type === \"radio\") {\r\n          actualOptionsArr.map((item) => {\r\n            element.options.push({\r\n              key: item,\r\n              label: item,\r\n              name: element.key,\r\n              value: item,\r\n            });\r\n          });\r\n          return element;\r\n        }\r\n        if (element.type === \"checkbox\") {\r\n          actualOptionsArr.map((item) => {\r\n            element.options.push({ key: item, label: item, value: item });\r\n          });\r\n          return element;\r\n        }\r\n      }\r\n      return element;\r\n    });\r\n    this.setState((prevState) => ({}));\r\n  };\r\n\r\n  addCustomElement = (index, groupData) => {\r\n    //console.log(groupData);\r\n    let rand = +new Date();\r\n    let columnData = {\r\n      key: \"name\" + rand,\r\n      label: \"\",\r\n      type: \"text\",\r\n      validations: {},\r\n      showHideGrid: false,\r\n      gridColumns: [{ key: \"firstGridElement\", label: \"\", type: \"text\" }],\r\n    };\r\n    //groupData.columns.push(columnData);\r\n    groupData.columns.splice(index + 1, 0, columnData);\r\n    // calling setstate to update the state\r\n    this.setState((prevState) => ({}));\r\n  };\r\n\r\n  deleteCustomElement = (deleteIndex, groupData) => {\r\n    //console.log(groupData, deleteIndex);\r\n    groupData.columns.splice(deleteIndex, 1);\r\n    this.setState((prevState) => ({}));\r\n  };\r\n\r\n  // ------------------------ Display Fields in accordion -----------------------\r\n\r\n  // -------------------------- Display accordion ------------------\r\n  generateAccordion = (groupingData) => {\r\n    this.groupElement = groupingData.map((group, index) => {\r\n      return (\r\n        <div className=\"card\" key={`Grouping-${index}`}>\r\n          <div className=\"card-header\">\r\n            <h2 className=\"mb-0\">\r\n              <button\r\n                className=\"btn btn-link btn-block text-left float-left\"\r\n                data-toggle=\"collapse\"\r\n                data-target={`#collapse${index}`}\r\n                aria-expanded=\"true\"\r\n                aria-controls=\"collapseOne\"\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                }}\r\n              >\r\n                {group.groupName}\r\n              </button>\r\n            </h2>\r\n            <input\r\n              className=\"form-control edit-title\"\r\n              type=\"text\"\r\n              value={group.groupName}\r\n              onChange={(e) => this.onChangeGroup(e, group)}\r\n            />\r\n\r\n            {index === 0 ? (\r\n              <button\r\n                className=\"btn add-new-btn float-right\"\r\n                onClick={(e) => this.addGroupingContent(e, index)}\r\n              >\r\n                Add New Section\r\n              </button>\r\n            ) : (\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn remove-btn\"\r\n                onClick={(e) => this.deleteGroupingContent(e, index)}\r\n              ></button>\r\n            )}\r\n          </div>\r\n\r\n          <div\r\n            id={`collapse${index}`}\r\n            className=\"collapse show\"\r\n            aria-labelledby=\"headingOne\"\r\n            data-parent=\"#accordion\"\r\n          >\r\n            <div className=\"card-body\">\r\n              <div className=\"clean-table\">\r\n                <table className=\"table\">\r\n                  <colgroup>\r\n                    <col style={{ width: \"20%\" }} />\r\n                    <col style={{ width: \"20%\" }} />\r\n                    <col style={{ width: \"40%\" }} />\r\n                    <col style={{ width: \"10%\" }} />\r\n                    <col style={{ width: \"10%\" }} />\r\n                  </colgroup>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Label Name</th>\r\n                      <th>Field Type</th>\r\n                      <th>Options</th>\r\n                      <th>is Required?</th>\r\n                      <th>&nbsp;</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>{this.displayFields(group)}</tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n    return this.groupElement;\r\n  };\r\n  onChangeGroup = (e, group) => {\r\n    //console.log(group);\r\n    group.groupName = e.target.value;\r\n    this.setState((prevState) => ({}));\r\n  };\r\n\r\n  addGroupingContent = (e, index) => {\r\n    e.preventDefault();\r\n    let groupData = {\r\n      groupName: \"Group Name\",\r\n      columns: [\r\n        {\r\n          key: \"name\" + index,\r\n          label: \"\",\r\n          type: \"text\",\r\n          validations: {},\r\n          showHideGrid: false,\r\n          gridColumns: [{ key: \"firstGridElement\", label: \"\", type: \"text\" }],\r\n        },\r\n      ],\r\n    };\r\n    this.setState((prevState) => ({\r\n      groupingData: [...prevState.groupingData, groupData],\r\n    }));\r\n  };\r\n\r\n  deleteGroupingContent = (e, index) => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      groupingData: this.state.groupingData.filter(\r\n        (group, groupIndex) => index != groupIndex\r\n      ),\r\n    });\r\n  };\r\n  // ---------------------- Display accordion ----------------------------\r\n\r\n  onSubmitData = (e) => {\r\n    //console.log(\"heelo\");\r\n    e.preventDefault();\r\n    let submittedObject = {\r\n      country: this.state.selectedCountry,\r\n      bank: this.state.selectedBank,\r\n      groupingData: this.state.groupingData,\r\n    };\r\n    //console.log(submittedObject);\r\n    this.props.createYourAccountConfiguration(submittedObject).then(() => {\r\n      console.log(\r\n        this.props.loadCreateYourAccountConfigurationData\r\n          .createYourAccountConfigResponseData\r\n      );\r\n    });\r\n  };\r\n\r\n  onChangeCountry = (event) => {\r\n    this.setState({\r\n      groupingData: [],\r\n      banks: [],\r\n      selectedBank: \"\",\r\n      selectedDropDowns: [],\r\n    });\r\n    //console.log(country.target.value);\r\n    let bankNames = new Array();\r\n\r\n    let selectedCountry = event.target.value;\r\n    this.state.allData.forEach(function (item) {\r\n      if (item.country === selectedCountry) {\r\n        bankNames.push(item.bank);\r\n      }\r\n    });\r\n    let distinctBanks = [...new Set(bankNames)];\r\n    this.setState({\r\n      banks: distinctBanks,\r\n      selectedCountry,\r\n    });\r\n    //Filtering Select information\r\n    let dropdowns = null;\r\n    this.state.dropDownData.forEach(function (item) {\r\n      if (item.country === selectedCountry) {\r\n        dropdowns = item.groupingData;\r\n      }\r\n    });\r\n    this.setState({ selectedDropDowns: dropdowns });\r\n  };\r\n\r\n  onChangeBank = (event) => {\r\n    let selectedBank = event.target.value;\r\n    let selectedGroupingData = [];\r\n    let selectedCountry = this.state.selectedCountry;\r\n    this.state.allData.forEach(function (item) {\r\n      if (item.bank === selectedBank && item.country === selectedCountry) {\r\n        selectedGroupingData = item.groupingData;\r\n      }\r\n    });\r\n    this.setState({\r\n      groupingData: selectedGroupingData,\r\n      selectedBank: selectedBank,\r\n    });\r\n    //console.log(\"this.state.selecetdBank in bank \" + this.state.selecetdBank);\r\n  };\r\n\r\n  render() {\r\n    // console.log(\"AllData\");\r\n    // console.log(this.state);\r\n\r\n    if (this.state.allData.length < 0) {\r\n      return (\r\n        <div id=\"content\">\r\n          <div className=\"inner-container\">No Record Found</div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    let countries = new Array();\r\n    this.state.allData.forEach(function (item) {\r\n      countries.push(item.country);\r\n    });\r\n    let distinctCounties = [...new Set(countries)];\r\n\r\n    //console.log(this.state.selectedDropDowns);\r\n\r\n    return (\r\n      <div id=\"content\">\r\n        <div className=\"inner-container\">\r\n          <div className=\"page-header\">\r\n            <h2>Configure account</h2>\r\n          </div>\r\n          <div className=\"row margin-top-30\">\r\n            <div className=\"col-lg-12\">\r\n              <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-lg-4 boredr-right\">\r\n                      <div className=\"select-container country-selection\">\r\n                        <figure>\r\n                          <img src={COUNTRY_ICON} alt=\"country\" />\r\n                        </figure>\r\n                        <div className=\"form-group\">\r\n                          <label>Select Country</label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"country\"\r\n                            onChange={this.onChangeCountry}\r\n                          >\r\n                            <option value=\"\">Select</option>\r\n                            {distinctCounties.map((country) => {\r\n                              return (\r\n                                <option\r\n                                  value={country}\r\n                                  key={`country-${country}`}\r\n                                >\r\n                                  {country}\r\n                                </option>\r\n                              );\r\n                            })}\r\n                          </select>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-lg-4 boredr-right\">\r\n                      <div className=\"select-container bank-selection\">\r\n                        <figure>\r\n                          <img src={BANK_ICON} alt=\"bank\" />\r\n                        </figure>\r\n                        <div className=\"form-group\">\r\n                          <label>Select Bank</label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"bank\"\r\n                            onChange={this.onChangeBank}\r\n                            value={this.state.selecetdBank}\r\n                          >\r\n                            <option value=\"\">Select</option>\r\n                            {this.state.banks.map((bank) => {\r\n                              return (\r\n                                <option value={bank} key={`bank-${bank}`}>\r\n                                  {bank}\r\n                                </option>\r\n                              );\r\n                            })}\r\n                          </select>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    {/* <div className=\"col-lg-4\">\r\n                      <div className=\"select-container account-type-selection\">\r\n                        <figure>\r\n                          <img src={ACCOUNT_TYPE} alt=\"Account Type\" />\r\n                        </figure>\r\n                        <div className=\"form-group\">\r\n                          <label forName=\"Account type\">\r\n                            Select Account Type\r\n                          </label>\r\n                          <select className=\"form-control\">\r\n                            <option value=\"\">Single</option>\r\n                            <option value=\"\">Joint</option>\r\n                          </select>\r\n                        </div>\r\n                      </div>\r\n                    </div> */}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {this.state.groupingData.length > 0 && (\r\n                <form\r\n                  onSubmit={(e) => {\r\n                    this.onSubmitData(e);\r\n                  }}\r\n                >\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-lg-12\">\r\n                          <div id=\"accordion\" className=\"accordion\">\r\n                            {this.generateAccordion(this.state.groupingData)}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"card-footer text-align-right\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-lg-12\">\r\n                          <button\r\n                            type=\"submit\"\r\n                            className=\"btn btn-secondary float-right\"\r\n                          >\r\n                            Submit\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row\">\r\n                        <div className=\"col-lg-12\">\r\n                          {this.props.loadCreateYourAccountConfigurationData\r\n                            .createYourAccountConfigResponseData &&\r\n                            this.props.loadCreateYourAccountConfigurationData\r\n                              .createYourAccountConfigResponseData.error ===\r\n                              \"false\" && (\r\n                              <div\r\n                                className=\"alert alert-success alert-dismissible fade show\"\r\n                                role=\"alert\"\r\n                                style={{ margin: \"15px\" }}\r\n                              >\r\n                                {/*<strong>\r\n                                \r\n                                   {\r\n                                    this.props\r\n                                      .loadCreateYourAccountConfigurationData\r\n                                      .createYourAccountConfigResponseData\r\n                                      .errorMsg\r\n                                  }\r\n                                </strong> */}\r\n                                Account configuration data has been submitted\r\n                                successfully\r\n                                <button\r\n                                  type=\"button\"\r\n                                  className=\"close\"\r\n                                  data-dismiss=\"alert\"\r\n                                  aria-label=\"Close\"\r\n                                >\r\n                                  <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                              </div>\r\n                            )}\r\n                          {this.props.loadCreateYourAccountConfigurationData\r\n                            .createYourAccountConfigResponseData &&\r\n                            this.props.loadCreateYourAccountConfigurationData\r\n                              .createYourAccountConfigResponseData.error ===\r\n                              \"true\" && (\r\n                              <div\r\n                                className=\"alert alert-warning alert-dismissible fade show\"\r\n                                role=\"alert\"\r\n                                style={{ margin: \"15px\" }}\r\n                              >\r\n                                <strong>\r\n                                  {\r\n                                    this.props\r\n                                      .loadCreateYourAccountConfigurationData\r\n                                      .createYourAccountConfigResponseData\r\n                                      .errorMsg\r\n                                  }\r\n                                </strong>\r\n                                <button\r\n                                  type=\"button\"\r\n                                  className=\"close\"\r\n                                  data-dismiss=\"alert\"\r\n                                  aria-label=\"Close\"\r\n                                >\r\n                                  <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                              </div>\r\n                            )}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ createYourAccountConfigationReducer }) => {\r\n  //console.log(props);\r\n  return {\r\n    loadCreateYourAccountConfigurationData: createYourAccountConfigationReducer,\r\n  };\r\n};\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, {\r\n    loadCreateYourAccountConfiguration,\r\n    createYourAccountConfiguration,\r\n  })(ConfigureCreateYourAccount)\r\n);\r\n","import ConfigureCreateOpenYourAccount from \"./pages/configure-create-your-account/configure-create-your-account\";\r\n\r\nexport default {\r\n  pages: [\r\n    {\r\n      routeProps: {\r\n        path: \"/configure-create-your-account\",\r\n        component: ConfigureCreateOpenYourAccount,\r\n      },\r\n      name: \"ConfigureCreateOpenYourAccount\",\r\n      type: \"superAdmin\",\r\n    },\r\n  ],\r\n};\r\n","import {\r\n  doLoadCreateYourAccountConfigurationStarted,\r\n  doLoadCreateYourAccountConfigurationSuccess,\r\n  doLoadCreateYourAccountConfigurationError,\r\n  doSaveCreateYourAccountConfigurationStarted,\r\n  doSaveCreateYourAccountConfigurationSuccess,\r\n  doSaveCreateYourAccountConfigurationError,\r\n} from \"./create-your-account-configuration\";\r\nimport Services from \"../../services\";\r\n//import createYourAccountConfigurationSchema from \"../../data-models-json/create-your-account-configuration-schema_test.json\";\r\n\r\nexport const loadCreateYourAccountConfiguration = () => {\r\n  return function loadCreateYourAccountConfigurationAction(dispatch) {\r\n    //console.log(createYourAccountConfigurationSchema);\r\n    // dispatch(doLoadCreateYourAccountConfigurationStarted());\r\n    // dispatch(\r\n    //   doLoadCreateYourAccountConfigurationSuccess(\r\n    //     createYourAccountConfigurationSchema\r\n    //   )\r\n    // );\r\n    dispatch(doLoadCreateYourAccountConfigurationStarted());\r\n    return Services.APICallConfig.callAPIService(\r\n      \"LOAD_CREATE_YOUR_ACCOUNT_CONFIG\"\r\n    )\r\n      .then((response) => {\r\n        dispatch(doLoadCreateYourAccountConfigurationSuccess(response));\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"error response\", error);\r\n        dispatch(doLoadCreateYourAccountConfigurationError(error));\r\n      });\r\n  };\r\n};\r\n\r\nexport const createYourAccountConfiguration = (configurationData) => {\r\n  return function createYourAccountConfigurationAction(dispatch) {\r\n    dispatch(doSaveCreateYourAccountConfigurationStarted());\r\n\r\n    return Services.APICallConfig.callAPIService(\r\n      \"SAVE_CREATE_YOUR_ACCOUNT_CONFIG\",\r\n      configurationData\r\n    )\r\n      .then((response) => {\r\n        dispatch(doSaveCreateYourAccountConfigurationSuccess(response));\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"error response\", error);\r\n        dispatch(doSaveCreateYourAccountConfigurationError(error));\r\n      });\r\n  };\r\n};\r\n","import {\r\n  LOAD_CREATE_YOUR_ACCOUNT_CONFIGURATION_STARTED,\r\n  LOAD_CREATE_YOUR_ACCOUNT_CONFIGURATION_SUCCESS,\r\n  LOAD_CREATE_YOUR_ACCOUNT_CONFIGURATION_ERROR,\r\n  SAVE_CREATE_YOUR_ACCOUNT_CONFIGURATION_STARTED,\r\n  SAVE_CREATE_YOUR_ACCOUNT_CONFIGURATION_SUCCESS,\r\n  SAVE_CREATE_YOUR_ACCOUNT_CONFIGURATION_ERROR,\r\n} from \"./type\";\r\n\r\nexport const doLoadCreateYourAccountConfigurationStarted = () => {\r\n  return {\r\n    type: LOAD_CREATE_YOUR_ACCOUNT_CONFIGURATION_STARTED,\r\n  };\r\n};\r\n\r\nexport const doLoadCreateYourAccountConfigurationSuccess = (accountSchema) => {\r\n  return {\r\n    type: LOAD_CREATE_YOUR_ACCOUNT_CONFIGURATION_SUCCESS,\r\n    payload: accountSchema,\r\n  };\r\n};\r\n\r\nexport const doLoadCreateYourAccountConfigurationError = (error) => {\r\n  return {\r\n    type: LOAD_CREATE_YOUR_ACCOUNT_CONFIGURATION_ERROR,\r\n    payload: error,\r\n  };\r\n};\r\n\r\nexport const doSaveCreateYourAccountConfigurationStarted = () => {\r\n  return {\r\n    type: SAVE_CREATE_YOUR_ACCOUNT_CONFIGURATION_STARTED,\r\n  };\r\n};\r\n\r\nexport const doSaveCreateYourAccountConfigurationSuccess = (accountInfo) => {\r\n  return {\r\n    type: SAVE_CREATE_YOUR_ACCOUNT_CONFIGURATION_SUCCESS,\r\n    payload: accountInfo,\r\n  };\r\n};\r\n\r\nexport const doSaveCreateYourAccountConfigurationError = (error) => {\r\n  return {\r\n    type: SAVE_CREATE_YOUR_ACCOUNT_CONFIGURATION_ERROR,\r\n    payload: error,\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { COUNTRY_ICON } from \"../../../../app-constant/images\";\r\nimport {\r\n  loadSelectMasterConfiguration,\r\n  saveSelectMasterConfiguration,\r\n} from \"../../../../actions/configure-select-master\";\r\n\r\nimport \"./configure-select-master.css\";\r\n\r\nclass ConfigureSelectMaster extends Component {\r\n  state = {\r\n    selectedCountry: \"\",\r\n    allData: [],\r\n    groupingData: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.loadSelectMasterConfiguration().then(() => {\r\n      let receivedObject = this.props.selectMasterReducerData\r\n        .loadSelectMasterData;\r\n      //console.log(receivedObject.dropDownData);\r\n      if (receivedObject.dropDownData.length > 0) {\r\n        this.setState({\r\n          allData: receivedObject.dropDownData,\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  // ------------------------------ Display Fields in accordion ----------------------------\r\n  displayFields = (groupData) => {\r\n    let groupElements = groupData.columns.map((element, elementIndex) => {\r\n      //console.log(element);\r\n      return (\r\n        <tr key={`elements-${elementIndex}`}>\r\n          <td>\r\n            {element.readOnly === \"true\" ? (\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name={`text-${element.key}`}\r\n                value={element.value}\r\n                readOnly\r\n              />\r\n            ) : (\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name={`text-${element.key}`}\r\n                value={element.value}\r\n                onChange={(e) => this.changeField(e, element, groupData)}\r\n              />\r\n            )}\r\n          </td>\r\n          <td>\r\n            {elementIndex === 0 ? (\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-add\"\r\n                onClick={() => this.addCustomElement(elementIndex, groupData)}\r\n              ></button>\r\n            ) : (\r\n              <>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-add\"\r\n                  onClick={() => this.addCustomElement(elementIndex, groupData)}\r\n                ></button>\r\n                {element.readOnly !== \"true\" && (\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-delete\"\r\n                    onClick={() =>\r\n                      this.deleteCustomElement(elementIndex, groupData)\r\n                    }\r\n                  ></button>\r\n                )}\r\n                {/* <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-delete\"\r\n                  onClick={() =>\r\n                    this.deleteCustomElement(elementIndex, groupData)\r\n                  }\r\n                ></button> */}\r\n              </>\r\n            )}\r\n          </td>\r\n        </tr>\r\n      );\r\n    });\r\n    return groupElements;\r\n  };\r\n\r\n  //Change General Fields\r\n  changeField = (e, currentElement, groupData) => {\r\n    groupData.columns.map((element) => {\r\n      if (JSON.stringify(element) === JSON.stringify(currentElement)) {\r\n        let rand = +new Date();\r\n        if (e.target.tagName === \"INPUT\") {\r\n          element.key = e.target.value.toLowerCase().replace(/\\s/g, \"\") + rand;\r\n          element.value = e.target.value;\r\n          return element;\r\n        }\r\n      }\r\n      return element;\r\n    });\r\n    // calling setstate to update the state\r\n    this.setState((prevState) => ({}));\r\n  };\r\n\r\n  addCustomElement = (index, groupData) => {\r\n    //console.log(groupData);\r\n    let rand = +new Date();\r\n    let columnData = {\r\n      key: \"name\" + rand,\r\n      value: \"\",\r\n    };\r\n    //groupData.columns.push(columnData);\r\n    groupData.columns.splice(index + 1, 0, columnData);\r\n    // calling setstate to update the state\r\n    this.setState((prevState) => ({}));\r\n  };\r\n\r\n  deleteCustomElement = (deleteIndex, groupData) => {\r\n    //console.log(groupData, deleteIndex);\r\n    groupData.columns.splice(deleteIndex, 1);\r\n    this.setState((prevState) => ({}));\r\n  };\r\n\r\n  // ------------------------ Display Fields in accordion -----------------------\r\n\r\n  // -------------------------- Display accordion ------------------\r\n  generateAccordion = (groupingData) => {\r\n    this.groupElement = groupingData.map((group, index) => {\r\n      //console.log(group);\r\n      return (\r\n        <div className=\"card\" key={`Grouping-${index}`}>\r\n          <div className=\"card-header\">\r\n            <h2 className=\"mb-0\">\r\n              <button\r\n                className=\"btn btn-link btn-block text-left float-left\"\r\n                data-toggle=\"collapse\"\r\n                data-target={`#collapse${index}`}\r\n                aria-expanded=\"true\"\r\n                aria-controls=\"collapseOne\"\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                }}\r\n              >\r\n                {group.groupName}\r\n              </button>\r\n            </h2>\r\n            <input\r\n              className=\"form-control edit-title\"\r\n              type=\"text\"\r\n              value={group.groupName}\r\n              onChange={(e) => this.onChangeGroup(e, group)}\r\n            />\r\n\r\n            {index === 0 ? (\r\n              <button\r\n                className=\"btn add-new-btn float-right\"\r\n                onClick={(e) => this.addGroupingContent(e, index)}\r\n              >\r\n                Add New Section\r\n              </button>\r\n            ) : (\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn remove-btn\"\r\n                onClick={(e) => this.deleteGroupingContent(e, index)}\r\n              ></button>\r\n            )}\r\n          </div>\r\n\r\n          <div\r\n            id={`collapse${index}`}\r\n            className=\"collapse show\"\r\n            aria-labelledby=\"headingOne\"\r\n            data-parent=\"#accordion\"\r\n          >\r\n            <div className=\"card-body\">\r\n              <div className=\"clean-table\">\r\n                <table className=\"table\">\r\n                  <colgroup>\r\n                    <col style={{ width: \"50%\" }} />\r\n                    <col style={{ width: \"50%\" }} />\r\n                  </colgroup>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Values</th>\r\n                      <th>Options</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>{this.displayFields(group)}</tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n    return this.groupElement;\r\n  };\r\n  onChangeGroup = (e, group) => {\r\n    //console.log(group);\r\n    group.groupName = e.target.value;\r\n    this.setState((prevState) => ({}));\r\n  };\r\n\r\n  addGroupingContent = (e, index) => {\r\n    e.preventDefault();\r\n    let groupData = {\r\n      groupName: \"Group Name\",\r\n      columns: [\r\n        {\r\n          key: \"name\" + index,\r\n          value: \"\",\r\n        },\r\n      ],\r\n    };\r\n    this.setState((prevState) => ({\r\n      groupingData: [...prevState.groupingData, groupData],\r\n    }));\r\n  };\r\n\r\n  deleteGroupingContent = (e, index) => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      groupingData: this.state.groupingData.filter(\r\n        (group, groupIndex) => index !== groupIndex\r\n      ),\r\n    });\r\n  };\r\n  // ---------------------- Display accordion ----------------------------\r\n\r\n  onSubmitData = (e) => {\r\n    //console.log(\"heelo\");\r\n    e.preventDefault();\r\n    let submittedObject = {\r\n      country: this.state.selectedCountry,\r\n      groupingData: this.state.groupingData,\r\n    };\r\n    //console.log(submittedObject);\r\n    this.props.saveSelectMasterConfiguration(submittedObject);\r\n    // this.props.saveSelectMasterConfiguration(submittedObject).then(() => {\r\n    //   // console.log(\r\n    //   //   this.props.selectMasterReducerData.saveSelectMasterResponse.error\r\n    //   // );\r\n    //   // console.log(\r\n    //   //   this.props.selectMasterReducerData.saveSelectMasterResponse.errorMsg\r\n    //   // );\r\n    // });\r\n  };\r\n\r\n  onChangeCountry = (event) => {\r\n    this.setState({\r\n      groupingData: [],\r\n    });\r\n\r\n    let selectedCountry = event.target.value;\r\n    let selectedGroupingData = [];\r\n    this.state.allData.forEach(function (item) {\r\n      if (item.country === selectedCountry) {\r\n        selectedGroupingData = item.groupingData;\r\n      }\r\n    });\r\n\r\n    this.setState({\r\n      groupingData: selectedGroupingData,\r\n      selectedCountry,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    if (this.state.allData.length < 0) {\r\n      return (\r\n        <div id=\"content\">\r\n          <div className=\"inner-container\">No Record Found</div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    let countries = [];\r\n    this.state.allData.forEach(function (item) {\r\n      countries.push(item.country);\r\n    });\r\n\r\n    return (\r\n      <div id=\"content\">\r\n        <div className=\"inner-container\">\r\n          <div className=\"page-header\">\r\n            <h2>Configure Master Data</h2>\r\n          </div>\r\n          <div className=\"row margin-top-30\">\r\n            <div className=\"col-lg-12\">\r\n              <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-lg-4 boredr-right\">\r\n                      <div className=\"select-container country-selection\">\r\n                        <figure>\r\n                          <img src={COUNTRY_ICON} alt=\"country\" />\r\n                        </figure>\r\n                        <div className=\"form-group\">\r\n                          <label>Select Country</label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"country\"\r\n                            onChange={this.onChangeCountry}\r\n                          >\r\n                            <option value=\"\">Select</option>\r\n                            {countries.map((country) => {\r\n                              return (\r\n                                <option\r\n                                  value={country}\r\n                                  key={`country-${country}`}\r\n                                >\r\n                                  {country}\r\n                                </option>\r\n                              );\r\n                            })}\r\n                          </select>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {this.state.groupingData.length > 0 && (\r\n                <form\r\n                  onSubmit={(e) => {\r\n                    this.onSubmitData(e);\r\n                  }}\r\n                >\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-lg-12\">\r\n                          <div id=\"accordion\" className=\"accordion\">\r\n                            {this.generateAccordion(this.state.groupingData)}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"card-footer text-align-right\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-lg-12\">\r\n                          <button\r\n                            type=\"submit\"\r\n                            className=\"btn btn-secondary float-right\"\r\n                          >\r\n                            Submit\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row\">\r\n                        <div className=\"col-lg-12\">\r\n                          {this.props.selectMasterReducerData\r\n                            .saveSelectMasterResponse &&\r\n                            this.props.selectMasterReducerData\r\n                              .saveSelectMasterResponse.error === \"false\" && (\r\n                              <div\r\n                                className=\"alert alert-success alert-dismissible fade show\"\r\n                                role=\"alert\"\r\n                                style={{ margin: \"15px\" }}\r\n                              >\r\n                                Master configuration data has been submitted\r\n                                successfully.\r\n                                <button\r\n                                  type=\"button\"\r\n                                  className=\"close\"\r\n                                  data-dismiss=\"alert\"\r\n                                  aria-label=\"Close\"\r\n                                >\r\n                                  <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                              </div>\r\n                            )}\r\n                          {/* {this.props.loadCreateYourAccountConfigurationData\r\n                            .createYourAccountConfigResponseData &&\r\n                            this.props.loadCreateYourAccountConfigurationData\r\n                              .createYourAccountConfigResponseData.error ===\r\n                              \"true\" && (\r\n                              <div\r\n                                className=\"alert alert-warning alert-dismissible fade show\"\r\n                                role=\"alert\"\r\n                                style={{ margin: \"15px\" }}\r\n                              >\r\n                                <strong>\r\n                                  {\r\n                                    this.props\r\n                                      .loadCreateYourAccountConfigurationData\r\n                                      .createYourAccountConfigResponseData\r\n                                      .errorMsg\r\n                                  }\r\n                                </strong>\r\n                                <button\r\n                                  type=\"button\"\r\n                                  className=\"close\"\r\n                                  data-dismiss=\"alert\"\r\n                                  aria-label=\"Close\"\r\n                                >\r\n                                  <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                              </div>\r\n                            )} */}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (props) => {\r\n  // console.log(\"map state to props\");\r\n  //console.log(props);\r\n  return {\r\n    selectMasterReducerData: props.selectMasterReducer,\r\n  };\r\n};\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, {\r\n    loadSelectMasterConfiguration,\r\n    saveSelectMasterConfiguration,\r\n  })(ConfigureSelectMaster)\r\n);\r\n","import ConfigureSelectMaster from \"./pages/configure-select-master/configure-select-master\";\r\n\r\nexport default {\r\n  pages: [\r\n    {\r\n      routeProps: {\r\n        path: \"/configure-select-master\",\r\n        component: ConfigureSelectMaster,\r\n      },\r\n      name: \"ConfigureSelectMaster\",\r\n      type: \"superAdmin\",\r\n    },\r\n  ],\r\n};\r\n","import {\r\n  doLoadSelectMasterStarted,\r\n  doLoadSelectMasterSuccess,\r\n  doLoadSelectMasterError,\r\n  doSaveSelectMasterStarted,\r\n  doSaveSelectMasterSuccess,\r\n  doSaveSelectMasterError,\r\n} from \"./configure-select-master\";\r\nimport Services from \"../../services\";\r\n\r\nexport const loadSelectMasterConfiguration = () => {\r\n  return function loadSelectMasterConfigurationAction(dispatch) {\r\n    dispatch(doLoadSelectMasterStarted());\r\n    return Services.APICallConfig.callAPIService(\"LOAD_SELECT_MASTER_CONFIG\")\r\n      .then((response) => {\r\n        // console.log(\"Response\");\r\n        // console.log(response);\r\n        dispatch(doLoadSelectMasterSuccess(response));\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"error response\", error);\r\n        dispatch(doLoadSelectMasterError(error));\r\n      });\r\n  };\r\n};\r\n\r\nexport const saveSelectMasterConfiguration = (configurationData) => {\r\n  return function saveSelectMasterConfigurationAction(dispatch) {\r\n    dispatch(doSaveSelectMasterStarted());\r\n\r\n    return Services.APICallConfig.callAPIService(\r\n      \"SAVE_SELECT_MASTER_CONFIG\",\r\n      configurationData\r\n    )\r\n      .then((response) => {\r\n        dispatch(doSaveSelectMasterSuccess(response));\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"error response\", error);\r\n        dispatch(doSaveSelectMasterError(error));\r\n      });\r\n  };\r\n};\r\n","import {\r\n  LOAD_SELECT_MASTER_STARTED,\r\n  LOAD_SELECT_MASTER_SUCCESS,\r\n  LOAD_SELECT_MASTER_ERROR,\r\n  SAVE_SELECT_MASTER_STARTED,\r\n  SAVE_SELECT_MASTER_SUCCESS,\r\n  SAVE_SELECT_MASTER_ERROR,\r\n} from \"./type\";\r\n\r\nexport const doLoadSelectMasterStarted = () => {\r\n  return {\r\n    type: LOAD_SELECT_MASTER_STARTED,\r\n  };\r\n};\r\n\r\nexport const doLoadSelectMasterSuccess = (selectMasterSchema) => {\r\n  return {\r\n    type: LOAD_SELECT_MASTER_SUCCESS,\r\n    payload: selectMasterSchema,\r\n  };\r\n};\r\n\r\nexport const doLoadSelectMasterError = (error) => {\r\n  return {\r\n    type: LOAD_SELECT_MASTER_ERROR,\r\n    payload: error,\r\n  };\r\n};\r\n\r\nexport const doSaveSelectMasterStarted = () => {\r\n  return {\r\n    type: SAVE_SELECT_MASTER_STARTED,\r\n  };\r\n};\r\n\r\nexport const doSaveSelectMasterSuccess = (selectMasterSchema) => {\r\n  return {\r\n    type: SAVE_SELECT_MASTER_SUCCESS,\r\n    payload: selectMasterSchema,\r\n  };\r\n};\r\n\r\nexport const doSaveSelectMasterError = (error) => {\r\n  return {\r\n    type: SAVE_SELECT_MASTER_ERROR,\r\n    payload: error,\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {\r\n  COUNTRY_ICON,\r\n  BANK_ICON,\r\n  //ACCOUNT_TYPE,\r\n} from \"../../../../app-constant/images\";\r\nimport {\r\n  loadDormatAccountConfiguration,\r\n  createDormatAccountConfiguration,\r\n} from \"../../../../actions/configure-dormat-account\";\r\n\r\nimport \"./configure-dormat-account.css\";\r\n\r\nclass ConfigureDormatAccount extends Component {\r\n  state = {\r\n    banks: [],\r\n    selectedCountry: \"\",\r\n    selectedBank: \"\",\r\n    allData: [],\r\n    dropDownData: [],\r\n    groupingData: [],\r\n    selectedDropDowns: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.loadDormatAccountConfiguration().then(() => {\r\n      let receivedObject = this.props.loadDormatAccountConfigurationData\r\n        .dormatAccountConfigData;\r\n      //console.log(receivedObject);\r\n      if (receivedObject.allData.length > 0) {\r\n        this.setState({\r\n          allData: receivedObject.allData,\r\n        });\r\n      }\r\n      if (receivedObject.dropDownData.length > 0) {\r\n        this.setState({\r\n          dropDownData: receivedObject.dropDownData,\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  // --------------------------Display grid------------------------------\r\n  displayGrid = (element, groupData) => {\r\n    return (\r\n      <div className=\"nested-table\">\r\n        <h5>Related Data</h5>\r\n        <table className=\"table\">\r\n          <colgroup>\r\n            <col style={{ width: \"40%\" }} />\r\n            <col style={{ width: \"40%\" }} />\r\n            <col style={{ width: \"20%\" }} />\r\n          </colgroup>\r\n          <tbody>{this.displayGridBody(element, groupData)}</tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  displayGridBody = (element, groupData) => {\r\n    let gridBodyContent = element.gridColumns.map(\r\n      (innerElement, innerElementIndex) => {\r\n        return (\r\n          <tr key={`innerElements-${innerElementIndex}`}>\r\n            <td>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name={`text-${innerElement.key}`}\r\n                value={innerElement.label}\r\n                onChange={(e) => this.changeGridField(e, element, innerElement)}\r\n              />\r\n            </td>\r\n            <td>\r\n              <select\r\n                className=\"form-control\"\r\n                name={`select-${innerElement.type}`}\r\n                value={innerElement.type}\r\n                onChange={(e) => this.changeGridField(e, element, innerElement)}\r\n              >\r\n                <option value=\"\">-Type-</option>\r\n                <option value=\"text\">Text</option>\r\n                <option value=\"number\">Number</option>\r\n                <option value=\"email\">Email</option>\r\n                <option value=\"date\">Date</option>\r\n              </select>\r\n            </td>\r\n            <td>\r\n              <div className=\"sub-action\">\r\n                {innerElementIndex === 0 ? (\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-add\"\r\n                    onClick={() =>\r\n                      this.addGridElement(innerElementIndex, element)\r\n                    }\r\n                  ></button>\r\n                ) : (\r\n                  <>\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-add\"\r\n                      onClick={() =>\r\n                        this.addGridElement(innerElementIndex, element)\r\n                      }\r\n                    ></button>\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-delete\"\r\n                      onClick={() =>\r\n                        this.deleteGridElement(innerElementIndex, element)\r\n                      }\r\n                    ></button>\r\n                  </>\r\n                )}\r\n              </div>\r\n            </td>\r\n          </tr>\r\n        );\r\n      }\r\n    );\r\n    return gridBodyContent;\r\n  };\r\n\r\n  changeGridField = (e, currentElement, innerElement) => {\r\n    console.log(innerElement);\r\n    let rand = +new Date();\r\n    let newGroupData = currentElement.gridColumns.map(\r\n      (innerElementFromLoop) => {\r\n        if (\r\n          JSON.stringify(innerElementFromLoop) === JSON.stringify(innerElement)\r\n        ) {\r\n          if (e.target.tagName === \"INPUT\") {\r\n            innerElementFromLoop.key = \"name\" + rand;\r\n            innerElementFromLoop.label = e.target.value;\r\n          } else {\r\n            innerElementFromLoop.type = e.target.value;\r\n          }\r\n          return innerElementFromLoop;\r\n        }\r\n        return innerElement;\r\n      }\r\n    );\r\n    this.setState((prevState) => ({}));\r\n  };\r\n\r\n  addGridElement = (index, element) => {\r\n    //console.log(groupData);\r\n    let rand = +new Date();\r\n    let columnData = {\r\n      key: \"name\" + rand,\r\n      label: \"\",\r\n      type: \"\",\r\n    };\r\n    element.gridColumns.splice(index + 1, 0, columnData);\r\n    this.setState((prevState) => ({}));\r\n  };\r\n  deleteGridElement = (deleteIndex, element) => {\r\n    element.gridColumns.splice(deleteIndex, 1);\r\n    this.setState((prevState) => ({}));\r\n  };\r\n\r\n  // --------------------------Display grid------------------------------\r\n\r\n  // ------------------------------ Display Fields in accordion ----------------------------\r\n\r\n  populateDropdowns = (selectedDropDowns) => {\r\n    let key = +new Date();\r\n    let input = selectedDropDowns.map((item, index) => {\r\n      return (\r\n        <option key={`${index}-${key}`} value={item.groupName}>\r\n          {item.groupName}\r\n        </option>\r\n      );\r\n    });\r\n    return input;\r\n  };\r\n\r\n  changeDropdownData = (e, currentElement, groupData) => {\r\n    //console.log(e.target.value);\r\n    //console.log( element.type = e.target.value;)\r\n    //console.log(currentElement);\r\n    let newGroupData = groupData.columns.map((element) => {\r\n      if (JSON.stringify(element) === JSON.stringify(currentElement)) {\r\n        console.log(e.target.tagName);\r\n        if (e.target.tagName === \"SELECT\") {\r\n          //element.actualOptions = e.target.value;\r\n          element.dropdownSchema = e.target.value;\r\n          //console.log(this.state.selectedDropDowns);\r\n          let tempOptions = \"\";\r\n          this.state.selectedDropDowns.map((item) => {\r\n            if (e.target.value === item.groupName) {\r\n              for (let i = 0; i < item.columns.length; i++) {\r\n                if (i !== item.columns.length - 1) {\r\n                  tempOptions += item.columns[i].value + \",\";\r\n                } else {\r\n                  tempOptions += item.columns[i].value;\r\n                }\r\n              }\r\n              element.actualOptions = tempOptions;\r\n            }\r\n          });\r\n          return element;\r\n        }\r\n      }\r\n      return element;\r\n    });\r\n    this.setState((prevState) => ({}));\r\n  };\r\n\r\n  displayFields = (groupData) => {\r\n    let groupElements = groupData.columns.map((element, elementIndex) => {\r\n      return (\r\n        <tr key={`elements-${elementIndex}`}>\r\n          <td>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name={`text-${element.key}`}\r\n              value={element.label}\r\n              onChange={(e) => this.changeField(e, element, groupData)}\r\n            />\r\n          </td>\r\n          <td>\r\n            <select\r\n              className=\"form-control\"\r\n              name={`select-${element.type}`}\r\n              value={element.type}\r\n              onChange={(e) => this.changeField(e, element, groupData)}\r\n            >\r\n              <option value=\"\">-Type-</option>\r\n              <option value=\"text\">Text</option>\r\n              <option value=\"number\">Number</option>\r\n              <option value=\"email\">Email</option>\r\n              <option value=\"checkbox\">Checkbox</option>\r\n              <option value=\"radio\">Radio</option>\r\n              <option value=\"select\">Select</option>\r\n              <option value=\"date\">Date</option>\r\n              <option value=\"file\">File</option>\r\n              <option value=\"grid\">Grid</option>\r\n              <option value=\"digitalSignature\">Digital Signature</option>\r\n            </select>\r\n          </td>\r\n          <td>\r\n            {/* {element.showHideMultipleText && (\r\n              <textarea\r\n                className=\"form-control\"\r\n                name={`multi-${element.key}`}\r\n                value={element.actualOptions}\r\n                onChange={(e) =>\r\n                  this.changeMultiValuedField(e, element, groupData)\r\n                }\r\n                onBlur={(e) => {\r\n                  this.createOptions(e, element, groupData);\r\n                }}\r\n              />\r\n            )} */}\r\n            {element.showHideMultipleText && (\r\n              <select\r\n                className=\"form-control\"\r\n                name={`select-${element.dropdownSchema}`}\r\n                value={element.dropdownSchema}\r\n                onChange={(e) => this.changeDropdownData(e, element, groupData)}\r\n                onBlur={(e) => {\r\n                  this.createOptions(e, element, groupData);\r\n                }}\r\n              >\r\n                <option value=\"\">-Type-</option>\r\n                {this.populateDropdowns(this.state.selectedDropDowns)}\r\n              </select>\r\n            )}\r\n            {element.showHideGrid && this.displayGrid(element, groupData)}\r\n          </td>\r\n          <td className=\"valign-middle\">\r\n            {element.showHideGrid === false && (\r\n              <input\r\n                type=\"checkbox\"\r\n                value={\r\n                  element.validations !== undefined\r\n                    ? element.validations.required\r\n                    : false\r\n                }\r\n                key={`required-${element.key}`}\r\n                defaultChecked={\r\n                  element.validations !== undefined &&\r\n                  element.validations.required\r\n                    ? true\r\n                    : \"\"\r\n                }\r\n                onChange={(e) => {\r\n                  this.changeValidationField(e, element, groupData);\r\n                }}\r\n              />\r\n            )}\r\n          </td>\r\n          <td className=\"valign-middle\">\r\n            {elementIndex === 0 ? (\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-add\"\r\n                onClick={() => this.addCustomElement(elementIndex, groupData)}\r\n              ></button>\r\n            ) : (\r\n              <>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-add\"\r\n                  onClick={() => this.addCustomElement(elementIndex, groupData)}\r\n                ></button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-delete\"\r\n                  onClick={() =>\r\n                    this.deleteCustomElement(elementIndex, groupData)\r\n                  }\r\n                ></button>\r\n              </>\r\n            )}\r\n          </td>\r\n        </tr>\r\n      );\r\n    });\r\n    return groupElements;\r\n  };\r\n\r\n  //Change General Fields\r\n  changeField = (e, currentElement, groupData) => {\r\n    //console.log(currentElement);\r\n    let newGroupData = groupData.columns.map((element) => {\r\n      if (JSON.stringify(element) === JSON.stringify(currentElement)) {\r\n        let rand = +new Date();\r\n        if (e.target.tagName === \"INPUT\") {\r\n          element.key = e.target.value.toLowerCase().replace(/\\s/g, \"\") + rand;\r\n          element.label = e.target.value;\r\n          return element;\r\n        } else if (e.target.tagName === \"SELECT\") {\r\n          element.type = e.target.value;\r\n          if (\r\n            e.target.value === \"checkbox\" ||\r\n            e.target.value === \"radio\" ||\r\n            e.target.value === \"select\"\r\n          ) {\r\n            currentElement.typeOfMultipleText = e.target.value;\r\n            currentElement.showHideMultipleText = true;\r\n            currentElement.showHideGrid = false;\r\n          } else if (e.target.value === \"grid\") {\r\n            currentElement.showHideMultipleText = false;\r\n            currentElement.showHideGrid = true;\r\n          } else {\r\n            currentElement.typeOfMultipleText = \"\";\r\n            currentElement.showHideMultipleText = false;\r\n            currentElement.showHideGrid = false;\r\n          }\r\n          return element;\r\n        }\r\n      }\r\n      return element;\r\n    });\r\n    // calling setstate to update the state\r\n    this.setState((prevState) => ({}));\r\n\r\n    //console.log(this.state);\r\n  };\r\n\r\n  //Change Multi valued fields\r\n  changeMultiValuedField = (e, currentElement, groupData) => {\r\n    //console.log(currentElement);\r\n    let newGroupData = groupData.columns.map((element) => {\r\n      if (JSON.stringify(element) === JSON.stringify(currentElement)) {\r\n        //console.log(e.target.tagName);\r\n        if (e.target.tagName === \"TEXTAREA\") {\r\n          element.actualOptions = e.target.value;\r\n          return element;\r\n        }\r\n      }\r\n      return element;\r\n    });\r\n    this.setState((prevState) => ({}));\r\n  };\r\n\r\n  // Change valiadtion field\r\n  changeValidationField = (e, currentElement, groupData) => {\r\n    console.log(groupData);\r\n    let newGroupData = groupData.columns.map((element) => {\r\n      if (JSON.stringify(element) === JSON.stringify(currentElement)) {\r\n        console.log(e.target.type);\r\n        if (e.target.type === \"checkbox\") {\r\n          if (currentElement.validations) {\r\n            if (currentElement.validations.required) {\r\n              currentElement.validations = {};\r\n            } else {\r\n              currentElement.validations = { required: true };\r\n            }\r\n          }\r\n          return element;\r\n        }\r\n      }\r\n      return element;\r\n    });\r\n    this.setState((prevState) => ({}));\r\n  };\r\n\r\n  // Creating options array\r\n  createOptions = (e, currentElement, groupData) => {\r\n    groupData.columns.map((element) => {\r\n      if (JSON.stringify(element) === JSON.stringify(currentElement)) {\r\n        let actualOptionsArr = element.actualOptions.split(\",\");\r\n        element.options = [];\r\n        //console.log(actualOptionsArr);\r\n        if (element.type === \"select\") {\r\n          let optionObj = { key: \"select\", label: \"Select\", value: \"\" };\r\n          element.options.push(optionObj);\r\n          actualOptionsArr.map((item) => {\r\n            element.options.push({ key: item, label: item, value: item });\r\n          });\r\n          return element;\r\n        }\r\n        if (element.type === \"radio\") {\r\n          actualOptionsArr.map((item) => {\r\n            element.options.push({\r\n              key: item,\r\n              label: item,\r\n              name: element.key,\r\n              value: item,\r\n            });\r\n          });\r\n          return element;\r\n        }\r\n        if (element.type === \"checkbox\") {\r\n          actualOptionsArr.map((item) => {\r\n            element.options.push({ key: item, label: item, value: item });\r\n          });\r\n          return element;\r\n        }\r\n      }\r\n      return element;\r\n    });\r\n    this.setState((prevState) => ({}));\r\n  };\r\n\r\n  addCustomElement = (index, groupData) => {\r\n    //console.log(groupData);\r\n    let rand = +new Date();\r\n    let columnData = {\r\n      key: \"name\" + rand,\r\n      label: \"\",\r\n      type: \"text\",\r\n      validations: {},\r\n      showHideGrid: false,\r\n      gridColumns: [{ key: \"firstGridElement\", label: \"\", type: \"text\" }],\r\n    };\r\n    //groupData.columns.push(columnData);\r\n    groupData.columns.splice(index + 1, 0, columnData);\r\n    // calling setstate to update the state\r\n    this.setState((prevState) => ({}));\r\n  };\r\n\r\n  deleteCustomElement = (deleteIndex, groupData) => {\r\n    //console.log(groupData, deleteIndex);\r\n    groupData.columns.splice(deleteIndex, 1);\r\n    this.setState((prevState) => ({}));\r\n  };\r\n\r\n  // ------------------------ Display Fields in accordion -----------------------\r\n\r\n  // -------------------------- Display accordion ------------------\r\n  generateAccordion = (groupingData) => {\r\n    this.groupElement = groupingData.map((group, index) => {\r\n      return (\r\n        <div className=\"card\" key={`Grouping-${index}`}>\r\n          <div className=\"card-header\">\r\n            <h2 className=\"mb-0\">\r\n              <button\r\n                className=\"btn btn-link btn-block text-left float-left\"\r\n                data-toggle=\"collapse\"\r\n                data-target={`#collapse${index}`}\r\n                aria-expanded=\"true\"\r\n                aria-controls=\"collapseOne\"\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                }}\r\n              >\r\n                {group.groupName}\r\n              </button>\r\n            </h2>\r\n            <input\r\n              className=\"form-control edit-title\"\r\n              type=\"text\"\r\n              value={group.groupName}\r\n              onChange={(e) => this.onChangeGroup(e, group)}\r\n            />\r\n\r\n            {index === 0 ? (\r\n              <button\r\n                className=\"btn add-new-btn float-right\"\r\n                onClick={(e) => this.addGroupingContent(e, index)}\r\n              >\r\n                Add New Section\r\n              </button>\r\n            ) : (\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn remove-btn\"\r\n                onClick={(e) => this.deleteGroupingContent(e, index)}\r\n              ></button>\r\n            )}\r\n          </div>\r\n\r\n          <div\r\n            id={`collapse${index}`}\r\n            className=\"collapse show\"\r\n            aria-labelledby=\"headingOne\"\r\n            data-parent=\"#accordion\"\r\n          >\r\n            <div className=\"card-body\">\r\n              <div className=\"clean-table\">\r\n                <table className=\"table\">\r\n                  <colgroup>\r\n                    <col style={{ width: \"20%\" }} />\r\n                    <col style={{ width: \"20%\" }} />\r\n                    <col style={{ width: \"40%\" }} />\r\n                    <col style={{ width: \"10%\" }} />\r\n                    <col style={{ width: \"10%\" }} />\r\n                  </colgroup>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Label Name</th>\r\n                      <th>Field Type</th>\r\n                      <th>Options</th>\r\n                      <th>is Required?</th>\r\n                      <th>&nbsp;</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>{this.displayFields(group)}</tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n    return this.groupElement;\r\n  };\r\n  onChangeGroup = (e, group) => {\r\n    //console.log(group);\r\n    group.groupName = e.target.value;\r\n    this.setState((prevState) => ({}));\r\n  };\r\n\r\n  addGroupingContent = (e, index) => {\r\n    e.preventDefault();\r\n    let groupData = {\r\n      groupName: \"Group Name\",\r\n      columns: [\r\n        {\r\n          key: \"name\" + index,\r\n          label: \"\",\r\n          type: \"text\",\r\n          validations: {},\r\n          showHideGrid: false,\r\n          gridColumns: [{ key: \"firstGridElement\", label: \"\", type: \"text\" }],\r\n        },\r\n      ],\r\n    };\r\n    this.setState((prevState) => ({\r\n      groupingData: [...prevState.groupingData, groupData],\r\n    }));\r\n  };\r\n\r\n  deleteGroupingContent = (e, index) => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      groupingData: this.state.groupingData.filter(\r\n        (group, groupIndex) => index != groupIndex\r\n      ),\r\n    });\r\n  };\r\n  // ---------------------- Display accordion ----------------------------\r\n\r\n  onSubmitData = (e) => {\r\n    //console.log(\"heelo\");\r\n    e.preventDefault();\r\n    let submittedObject = {\r\n      country: this.state.selectedCountry,\r\n      bank: this.state.selectedBank,\r\n      groupingData: this.state.groupingData,\r\n    };\r\n    //console.log(submittedObject);\r\n    this.props.createDormatAccountConfiguration(submittedObject).then(() => {\r\n      // console.log(\r\n      //   this.props.loadDormatAccountConfigurationData.dormatAccountConfigData\r\n      // );\r\n    });\r\n  };\r\n\r\n  onChangeCountry = (event) => {\r\n    this.setState({\r\n      groupingData: [],\r\n      banks: [],\r\n      selectedBank: \"\",\r\n      selectedDropDowns: [],\r\n    });\r\n    //console.log(country.target.value);\r\n    let bankNames = new Array();\r\n\r\n    let selectedCountry = event.target.value;\r\n    this.state.allData.forEach(function (item) {\r\n      if (item.country === selectedCountry) {\r\n        bankNames.push(item.bank);\r\n      }\r\n    });\r\n    let distinctBanks = [...new Set(bankNames)];\r\n    this.setState({\r\n      banks: distinctBanks,\r\n      selectedCountry,\r\n    });\r\n    //Filtering Select information\r\n    let dropdowns = null;\r\n    this.state.dropDownData.forEach(function (item) {\r\n      if (item.country === selectedCountry) {\r\n        dropdowns = item.groupingData;\r\n      }\r\n    });\r\n    this.setState({ selectedDropDowns: dropdowns });\r\n  };\r\n\r\n  onChangeBank = (event) => {\r\n    let selectedBank = event.target.value;\r\n    let selectedGroupingData = [];\r\n    let selectedCountry = this.state.selectedCountry;\r\n    this.state.allData.forEach(function (item) {\r\n      if (item.bank === selectedBank && item.country === selectedCountry) {\r\n        selectedGroupingData = item.groupingData;\r\n      }\r\n    });\r\n    this.setState({\r\n      groupingData: selectedGroupingData,\r\n      selectedBank: selectedBank,\r\n    });\r\n    //console.log(\"this.state.selecetdBank in bank \" + this.state.selecetdBank);\r\n  };\r\n\r\n  render() {\r\n    if (this.state.allData.length < 0) {\r\n      return (\r\n        <div id=\"content\">\r\n          <div className=\"inner-container\">No Record Found</div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    let countries = new Array();\r\n    this.state.allData.forEach(function (item) {\r\n      countries.push(item.country);\r\n    });\r\n    let distinctCounties = [...new Set(countries)];\r\n\r\n    //console.log(this.state.selectedDropDowns);\r\n\r\n    return (\r\n      <div id=\"content\">\r\n        <div className=\"inner-container\">\r\n          <div className=\"page-header\">\r\n            <h2>Configure Dormant account</h2>\r\n          </div>\r\n          <div className=\"row margin-top-30\">\r\n            <div className=\"col-lg-12\">\r\n              <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-lg-4 boredr-right\">\r\n                      <div className=\"select-container country-selection\">\r\n                        <figure>\r\n                          <img src={COUNTRY_ICON} alt=\"country\" />\r\n                        </figure>\r\n                        <div className=\"form-group\">\r\n                          <label>Select Country</label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"country\"\r\n                            onChange={this.onChangeCountry}\r\n                          >\r\n                            <option value=\"\">Select</option>\r\n                            {distinctCounties.map((country) => {\r\n                              return (\r\n                                <option\r\n                                  value={country}\r\n                                  key={`country-${country}`}\r\n                                >\r\n                                  {country}\r\n                                </option>\r\n                              );\r\n                            })}\r\n                          </select>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-lg-4 boredr-right\">\r\n                      <div className=\"select-container bank-selection\">\r\n                        <figure>\r\n                          <img src={BANK_ICON} alt=\"bank\" />\r\n                        </figure>\r\n                        <div className=\"form-group\">\r\n                          <label>Select Bank</label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"bank\"\r\n                            onChange={this.onChangeBank}\r\n                            value={this.state.selecetdBank}\r\n                          >\r\n                            <option value=\"\">Select</option>\r\n                            {this.state.banks.map((bank) => {\r\n                              return (\r\n                                <option value={bank} key={`bank-${bank}`}>\r\n                                  {bank}\r\n                                </option>\r\n                              );\r\n                            })}\r\n                          </select>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    {/* <div className=\"col-lg-4\">\r\n                      <div className=\"select-container account-type-selection\">\r\n                        <figure>\r\n                          <img src={ACCOUNT_TYPE} alt=\"Account Type\" />\r\n                        </figure>\r\n                        <div className=\"form-group\">\r\n                          <label forName=\"Account type\">\r\n                            Select Account Type\r\n                          </label>\r\n                          <select className=\"form-control\">\r\n                            <option value=\"\">Single</option>\r\n                            <option value=\"\">Joint</option>\r\n                          </select>\r\n                        </div>\r\n                      </div>\r\n                    </div> */}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {this.state.groupingData.length > 0 && (\r\n                <form\r\n                  onSubmit={(e) => {\r\n                    this.onSubmitData(e);\r\n                  }}\r\n                >\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-lg-12\">\r\n                          <div id=\"accordion\" className=\"accordion\">\r\n                            {this.generateAccordion(this.state.groupingData)}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"card-footer text-align-right\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-lg-12\">\r\n                          <button\r\n                            type=\"submit\"\r\n                            className=\"btn btn-secondary float-right\"\r\n                          >\r\n                            Submit\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row\">\r\n                        <div className=\"col-lg-12\">\r\n                          {this.props.loadDormatAccountConfigurationData\r\n                            .dormatAccountConfigResponseData &&\r\n                            this.props.loadDormatAccountConfigurationData\r\n                              .dormatAccountConfigResponseData.error ===\r\n                              \"false\" && (\r\n                              <div\r\n                                className=\"alert alert-success alert-dismissible fade show\"\r\n                                role=\"alert\"\r\n                                style={{ margin: \"15px\" }}\r\n                              >\r\n                                {/*<strong>\r\n                                \r\n                                   {\r\n                                    this.props\r\n                                      .loadDormatAccountConfigurationData\r\n                                      .dormatAccountConfigData\r\n                                      .errorMsg\r\n                                  }\r\n                                </strong> */}\r\n                                Dormat Account configuration data has been\r\n                                submitted successfully\r\n                                <button\r\n                                  type=\"button\"\r\n                                  className=\"close\"\r\n                                  data-dismiss=\"alert\"\r\n                                  aria-label=\"Close\"\r\n                                >\r\n                                  <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                              </div>\r\n                            )}\r\n                          {this.props.loadDormatAccountConfigurationData\r\n                            .dormatAccountConfigResponseData &&\r\n                            this.props.loadDormatAccountConfigurationData\r\n                              .dormatAccountConfigResponseData.error ===\r\n                              \"true\" && (\r\n                              <div\r\n                                className=\"alert alert-warning alert-dismissible fade show\"\r\n                                role=\"alert\"\r\n                                style={{ margin: \"15px\" }}\r\n                              >\r\n                                <strong>\r\n                                  {\r\n                                    this.props\r\n                                      .loadDormatAccountConfigurationData\r\n                                      .dormatAccountConfigData.errorMsg\r\n                                  }\r\n                                </strong>\r\n                                <button\r\n                                  type=\"button\"\r\n                                  className=\"close\"\r\n                                  data-dismiss=\"alert\"\r\n                                  aria-label=\"Close\"\r\n                                >\r\n                                  <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                              </div>\r\n                            )}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ DormatAccountConfigurationReducer }) => {\r\n  //console.log(DormatAccountConfigurationReducer);\r\n  return {\r\n    loadDormatAccountConfigurationData: DormatAccountConfigurationReducer,\r\n  };\r\n};\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, {\r\n    loadDormatAccountConfiguration,\r\n    createDormatAccountConfiguration,\r\n  })(ConfigureDormatAccount)\r\n);\r\n","import ConfigureDormatAccount from \"./pages/configure-dormat-account/configure-dormat-account\";\r\n\r\nexport default {\r\n  pages: [\r\n    {\r\n      routeProps: {\r\n        path: \"/configure-dormat-account\",\r\n        component: ConfigureDormatAccount,\r\n      },\r\n      name: \"ConfigureDormatAccount\",\r\n      type: \"superAdmin\",\r\n    },\r\n  ],\r\n};\r\n","import {\r\n  doLoadDormatAccountConfigurationStarted,\r\n  doLoadDormatAccountConfigurationSuccess,\r\n  doLoadDormatAccountConfigurationError,\r\n  doSaveDormatAccountConfigurationStarted,\r\n  doSaveDormatAccountConfigurationSuccess,\r\n  doSaveDormatAccountConfigurationError,\r\n} from \"./configure-dormat-account\";\r\nimport Services from \"../../services\";\r\n\r\nexport const loadDormatAccountConfiguration = () => {\r\n  return function loadDormatAccountConfigurationAction(dispatch) {\r\n    dispatch(doLoadDormatAccountConfigurationStarted());\r\n    return Services.APICallConfig.callAPIService(\"LOAD_DORMAT_ACCOUNT_CONFIG\")\r\n      .then((response) => {\r\n        dispatch(doLoadDormatAccountConfigurationSuccess(response));\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"error response\", error);\r\n        dispatch(doLoadDormatAccountConfigurationError(error));\r\n      });\r\n  };\r\n};\r\n\r\nexport const createDormatAccountConfiguration = (configurationData) => {\r\n  return function createDormatAccountConfigurationAction(dispatch) {\r\n    dispatch(doSaveDormatAccountConfigurationStarted());\r\n\r\n    return Services.APICallConfig.callAPIService(\r\n      \"SAVE_DORMAT_ACCOUNT_CONFIG\",\r\n      configurationData\r\n    )\r\n      .then((response) => {\r\n        dispatch(doSaveDormatAccountConfigurationSuccess(response));\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"error response\", error);\r\n        dispatch(doSaveDormatAccountConfigurationError(error));\r\n      });\r\n  };\r\n};\r\n","import {\r\n  LOAD_DORMAT_ACCOUNT_CONFIGURATION_STARTED,\r\n  LOAD_DORMAT_ACCOUNT_CONFIGURATION_SUCCESS,\r\n  LOAD_DORMAT_ACCOUNT_CONFIGURATION_ERROR,\r\n  SAVE_DORMAT_ACCOUNT_CONFIGURATION_STARTED,\r\n  SAVE_DORMAT_ACCOUNT_CONFIGURATION_SUCCESS,\r\n  SAVE_DORMAT_ACCOUNT_CONFIGURATION_ERROR,\r\n} from \"./type\";\r\n\r\nexport const doLoadDormatAccountConfigurationStarted = () => {\r\n  return {\r\n    type: LOAD_DORMAT_ACCOUNT_CONFIGURATION_STARTED,\r\n  };\r\n};\r\n\r\nexport const doLoadDormatAccountConfigurationSuccess = (accountSchema) => {\r\n  return {\r\n    type: LOAD_DORMAT_ACCOUNT_CONFIGURATION_SUCCESS,\r\n    payload: accountSchema,\r\n  };\r\n};\r\n\r\nexport const doLoadDormatAccountConfigurationError = (error) => {\r\n  return {\r\n    type: LOAD_DORMAT_ACCOUNT_CONFIGURATION_ERROR,\r\n    payload: error,\r\n  };\r\n};\r\n\r\nexport const doSaveDormatAccountConfigurationStarted = () => {\r\n  return {\r\n    type: SAVE_DORMAT_ACCOUNT_CONFIGURATION_STARTED,\r\n  };\r\n};\r\n\r\nexport const doSaveDormatAccountConfigurationSuccess = (accountInfo) => {\r\n  return {\r\n    type: SAVE_DORMAT_ACCOUNT_CONFIGURATION_SUCCESS,\r\n    payload: accountInfo,\r\n  };\r\n};\r\n\r\nexport const doSaveDormatAccountConfigurationError = (error) => {\r\n  return {\r\n    type: SAVE_DORMAT_ACCOUNT_CONFIGURATION_ERROR,\r\n    payload: error,\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {\r\n  loadDormatAccountSchema,\r\n  doSaveDormatAccount,\r\n} from \"../../../../actions/dormat-account\";\r\nimport CustomForm from \"../../../../reusable-components/CustomForm\";\r\n\r\n//import \"./open-your-account.css\";\r\n\r\nclass DormatAccount extends Component {\r\n  state = {};\r\n\r\n  componentDidMount() {\r\n    let schemaInfo = {\r\n      bank_id: sessionStorage.getItem(\"bank_id\"),\r\n      country_id: sessionStorage.getItem(\"country_id\"),\r\n    };\r\n    this.props.loadDormatAccountSchema(schemaInfo);\r\n  }\r\n\r\n  getCustomDate = () => {\r\n    var today = new Date();\r\n    var dd = String(today.getDate()).padStart(2, \"0\");\r\n    var mm = String(today.getMonth() + 1).padStart(2, \"0\"); //January is 0!\r\n    var yyyy = today.getFullYear();\r\n\r\n    today = yyyy + \"-\" + mm + \"-\" + dd; // 2020-09-24\r\n    return today;\r\n  };\r\n\r\n  onSubmitData = (formData) => {\r\n    let submittedData = {\r\n      account_info: formData,\r\n      processed_indicator: \"NI\",\r\n      current_date: this.getCustomDate(),\r\n    };\r\n    this.props.doSaveDormatAccount(submittedData).then(() => {\r\n      //console.log(this.props.openYourAccountResponseData.openYourAccountData);\r\n    });\r\n    //console.log(submittedData);\r\n  };\r\n\r\n  render() {\r\n    //console.log(this.props.dormatAccountResponseData.dormatAccountSchemaData);\r\n    // return null;\r\n    return (\r\n      <div id=\"content\">\r\n        <div className=\"inner-container\">\r\n          <div className=\"page-header\">\r\n            <h2>Activate Dormat Account</h2>\r\n          </div>\r\n          <p>Individual Dormat Account Activation Form</p>\r\n          <div className=\"row margin-top-30\">\r\n            <div className=\"col-lg-12\">\r\n              {this.props.dormatAccountResponseData.dormatAccountSchemaData &&\r\n                this.props.dormatAccountResponseData.dormatAccountSchemaData\r\n                  .formData && (\r\n                  <CustomForm\r\n                    className=\"open-account\"\r\n                    model={\r\n                      this.props.dormatAccountResponseData\r\n                        .dormatAccountSchemaData.formData.data\r\n                    }\r\n                    onSubmit={(model) => {\r\n                      this.onSubmitData(model);\r\n                    }}\r\n                  />\r\n                )}\r\n              {this.props.dormatAccountResponseData.dormatAccountData &&\r\n                this.props.dormatAccountResponseData.dormatAccountData.error ===\r\n                  \"false\" && (\r\n                  <div\r\n                    className=\"alert alert-success alert-dismissible fade show\"\r\n                    role=\"alert\"\r\n                  >\r\n                    {/* <strong>\r\n                      {\r\n                        this.props.dormatAccountResponseData\r\n                .dormatAccountSchemaData.successMsg\r\n                      }\r\n                    </strong> */}\r\n                    Your dormant account activation request has been submitted\r\n                    successfully.\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"close\"\r\n                      data-dismiss=\"alert\"\r\n                      aria-label=\"Close\"\r\n                    >\r\n                      <span aria-hidden=\"true\">&times;</span>\r\n                    </button>\r\n                  </div>\r\n                )}\r\n              {this.props.dormatAccountResponseData.dormatAccountData &&\r\n                this.props.dormatAccountResponseData.dormatAccountData.error ===\r\n                  \"true\" && (\r\n                  <div\r\n                    className=\"alert alert-warning alert-dismissible fade show\"\r\n                    role=\"alert\"\r\n                  >\r\n                    Your dormat account activation request has been\r\n                    unsuccessfull.\r\n                    {/* <strong>\r\n                      {\r\n                        this.props.dormatAccountResponseData\r\n                .dormatAccountSchemaData.errorMsg\r\n                      }\r\n                    </strong> */}\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"close\"\r\n                      data-dismiss=\"alert\"\r\n                      aria-label=\"Close\"\r\n                    >\r\n                      <span aria-hidden=\"true\">&times;</span>\r\n                    </button>\r\n                  </div>\r\n                )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ DormatAccountReducer }) => {\r\n  return {\r\n    dormatAccountResponseData: DormatAccountReducer,\r\n  };\r\n};\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, { loadDormatAccountSchema, doSaveDormatAccount })(\r\n    DormatAccount\r\n  )\r\n);\r\n","import DormatAccount from \"./pages/dormat-account/dormat-account\";\r\n\r\nexport default {\r\n  pages: [\r\n    {\r\n      routeProps: {\r\n        path: \"/dormat-account\",\r\n        component: DormatAccount,\r\n      },\r\n      name: \"DormatAccount\",\r\n    },\r\n  ],\r\n};\r\n","import {\r\n  doLoadDormatAccountStarted,\r\n  doLoadDormatAccountSuccess,\r\n  doLoadDormatAccountError,\r\n  doSaveDormatAccountStarted,\r\n  doSaveDormatAccountSuccess,\r\n  doSaveDormatAccountError,\r\n} from \"./dormat-account\";\r\nimport Services from \"../../services\";\r\n\r\nexport const loadDormatAccountSchema = (loadData) => {\r\n  return function doDormatAccountAction(dispatch) {\r\n    dispatch(doLoadDormatAccountStarted());\r\n    return Services.APICallConfig.callAPIService(\r\n      \"LOAD_DORMAT_ACCOUNT\",\r\n      loadData\r\n    )\r\n      .then((response) => {\r\n        //console.log(response);\r\n        dispatch(doLoadDormatAccountSuccess(response));\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"error response\", error);\r\n        dispatch(doLoadDormatAccountError(error));\r\n      });\r\n  };\r\n};\r\n\r\nexport const doSaveDormatAccount = (accountData) => {\r\n  return function doSaveDormatAccountAction(dispatch) {\r\n    dispatch(doSaveDormatAccountStarted());\r\n\r\n    return Services.APICallConfig.callAPIService(\r\n      \"SAVE_DORMAT_ACCOUNT\",\r\n      accountData\r\n    )\r\n      .then((response) => {\r\n        dispatch(doSaveDormatAccountSuccess(response));\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"error response\", error);\r\n        dispatch(doSaveDormatAccountError(error));\r\n      });\r\n  };\r\n};\r\n","import {\r\n  LOAD_DORMAT_ACCOUNT_STARTED,\r\n  LOAD_DORMAT_ACCOUNT_SUCCESS,\r\n  LOAD_DORMAT_ACCOUNT_ERROR,\r\n  SAVE_DORMAT_ACCOUNT_STARTED,\r\n  SAVE_DORMAT_ACCOUNT_SUCCESS,\r\n  SAVE_DORMAT_ACCOUNT_ERROR,\r\n} from \"./type\";\r\n\r\nexport const doLoadDormatAccountStarted = () => {\r\n  return {\r\n    type: LOAD_DORMAT_ACCOUNT_STARTED,\r\n  };\r\n};\r\n\r\nexport const doLoadDormatAccountSuccess = (accountSchema) => {\r\n  return {\r\n    type: LOAD_DORMAT_ACCOUNT_SUCCESS,\r\n    payload: accountSchema,\r\n  };\r\n};\r\n\r\nexport const doLoadDormatAccountError = (error) => {\r\n  return {\r\n    type: LOAD_DORMAT_ACCOUNT_ERROR,\r\n    payload: error,\r\n  };\r\n};\r\n\r\nexport const doSaveDormatAccountStarted = () => {\r\n  return {\r\n    type: SAVE_DORMAT_ACCOUNT_STARTED,\r\n  };\r\n};\r\n\r\nexport const doSaveDormatAccountSuccess = (accountInfo) => {\r\n  return {\r\n    type: SAVE_DORMAT_ACCOUNT_SUCCESS,\r\n    payload: accountInfo,\r\n  };\r\n};\r\n\r\nexport const doSaveDormatAccountError = (error) => {\r\n  return {\r\n    type: SAVE_DORMAT_ACCOUNT_ERROR,\r\n    payload: error,\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {\r\n  COUNTRY_ICON,\r\n  BANK_ICON,\r\n  //ACCOUNT_TYPE,\r\n} from \"../../../../app-constant/images\";\r\nimport {\r\n  loadChequebookConfiguration,\r\n  createChequebookConfiguration,\r\n} from \"../../../../actions/configure-chequebook-request\";\r\n\r\nimport \"./configure-cheque-book.css\";\r\n\r\nclass ConfigureChequeBook extends Component {\r\n  state = {\r\n    banks: [],\r\n    selectedCountry: \"\",\r\n    selectedBank: \"\",\r\n    allData: [],\r\n    dropDownData: [],\r\n    groupingData: [],\r\n    selectedDropDowns: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.loadChequebookConfiguration().then(() => {\r\n      let receivedObject = this.props.loadChequebookConfigurationData\r\n        .chequebookConfigData;\r\n      //console.log(receivedObject);\r\n      if (receivedObject.allData.length > 0) {\r\n        this.setState({\r\n          allData: receivedObject.allData,\r\n        });\r\n      }\r\n      if (receivedObject.dropDownData.length > 0) {\r\n        this.setState({\r\n          dropDownData: receivedObject.dropDownData,\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  // --------------------------Display grid------------------------------\r\n  displayGrid = (element, groupData) => {\r\n    return (\r\n      <div className=\"nested-table\">\r\n        <h5>Related Data</h5>\r\n        <table className=\"table\">\r\n          <colgroup>\r\n            <col style={{ width: \"40%\" }} />\r\n            <col style={{ width: \"40%\" }} />\r\n            <col style={{ width: \"20%\" }} />\r\n          </colgroup>\r\n          <tbody>{this.displayGridBody(element, groupData)}</tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  displayGridBody = (element, groupData) => {\r\n    let gridBodyContent = element.gridColumns.map(\r\n      (innerElement, innerElementIndex) => {\r\n        return (\r\n          <tr key={`innerElements-${innerElementIndex}`}>\r\n            <td>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name={`text-${innerElement.key}`}\r\n                value={innerElement.label}\r\n                onChange={(e) => this.changeGridField(e, element, innerElement)}\r\n              />\r\n            </td>\r\n            <td>\r\n              <select\r\n                className=\"form-control\"\r\n                name={`select-${innerElement.type}`}\r\n                value={innerElement.type}\r\n                onChange={(e) => this.changeGridField(e, element, innerElement)}\r\n              >\r\n                <option value=\"\">-Type-</option>\r\n                <option value=\"text\">Text</option>\r\n                <option value=\"number\">Number</option>\r\n                <option value=\"email\">Email</option>\r\n                <option value=\"date\">Date</option>\r\n              </select>\r\n            </td>\r\n            <td>\r\n              <div className=\"sub-action\">\r\n                {innerElementIndex === 0 ? (\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-add\"\r\n                    onClick={() =>\r\n                      this.addGridElement(innerElementIndex, element)\r\n                    }\r\n                  ></button>\r\n                ) : (\r\n                  <>\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-add\"\r\n                      onClick={() =>\r\n                        this.addGridElement(innerElementIndex, element)\r\n                      }\r\n                    ></button>\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-delete\"\r\n                      onClick={() =>\r\n                        this.deleteGridElement(innerElementIndex, element)\r\n                      }\r\n                    ></button>\r\n                  </>\r\n                )}\r\n              </div>\r\n            </td>\r\n          </tr>\r\n        );\r\n      }\r\n    );\r\n    return gridBodyContent;\r\n  };\r\n\r\n  changeGridField = (e, currentElement, innerElement) => {\r\n    console.log(innerElement);\r\n    let rand = +new Date();\r\n    let newGroupData = currentElement.gridColumns.map(\r\n      (innerElementFromLoop) => {\r\n        if (\r\n          JSON.stringify(innerElementFromLoop) === JSON.stringify(innerElement)\r\n        ) {\r\n          if (e.target.tagName === \"INPUT\") {\r\n            innerElementFromLoop.key = \"name\" + rand;\r\n            innerElementFromLoop.label = e.target.value;\r\n          } else {\r\n            innerElementFromLoop.type = e.target.value;\r\n          }\r\n          return innerElementFromLoop;\r\n        }\r\n        return innerElement;\r\n      }\r\n    );\r\n    this.setState((prevState) => ({}));\r\n  };\r\n\r\n  addGridElement = (index, element) => {\r\n    //console.log(groupData);\r\n    let rand = +new Date();\r\n    let columnData = {\r\n      key: \"name\" + rand,\r\n      label: \"\",\r\n      type: \"\",\r\n    };\r\n    element.gridColumns.splice(index + 1, 0, columnData);\r\n    this.setState((prevState) => ({}));\r\n  };\r\n  deleteGridElement = (deleteIndex, element) => {\r\n    element.gridColumns.splice(deleteIndex, 1);\r\n    this.setState((prevState) => ({}));\r\n  };\r\n\r\n  // --------------------------Display grid------------------------------\r\n\r\n  // ------------------------------ Display Fields in accordion ----------------------------\r\n\r\n  populateDropdowns = (selectedDropDowns) => {\r\n    let key = +new Date();\r\n    let input = selectedDropDowns.map((item, index) => {\r\n      return (\r\n        <option key={`${index}-${key}`} value={item.groupName}>\r\n          {item.groupName}\r\n        </option>\r\n      );\r\n    });\r\n    return input;\r\n  };\r\n\r\n  changeDropdownData = (e, currentElement, groupData) => {\r\n    //console.log(e.target.value);\r\n    //console.log( element.type = e.target.value;)\r\n    //console.log(currentElement);\r\n    let newGroupData = groupData.columns.map((element) => {\r\n      if (JSON.stringify(element) === JSON.stringify(currentElement)) {\r\n        console.log(e.target.tagName);\r\n        if (e.target.tagName === \"SELECT\") {\r\n          //element.actualOptions = e.target.value;\r\n          element.dropdownSchema = e.target.value;\r\n          //console.log(this.state.selectedDropDowns);\r\n          let tempOptions = \"\";\r\n          this.state.selectedDropDowns.map((item) => {\r\n            if (e.target.value === item.groupName) {\r\n              for (let i = 0; i < item.columns.length; i++) {\r\n                if (i !== item.columns.length - 1) {\r\n                  tempOptions += item.columns[i].value + \",\";\r\n                } else {\r\n                  tempOptions += item.columns[i].value;\r\n                }\r\n              }\r\n              element.actualOptions = tempOptions;\r\n            }\r\n          });\r\n          return element;\r\n        }\r\n      }\r\n      return element;\r\n    });\r\n    this.setState((prevState) => ({}));\r\n  };\r\n\r\n  displayFields = (groupData) => {\r\n    let groupElements = groupData.columns.map((element, elementIndex) => {\r\n      return (\r\n        <tr key={`elements-${elementIndex}`}>\r\n          <td>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name={`text-${element.key}`}\r\n              value={element.label}\r\n              onChange={(e) => this.changeField(e, element, groupData)}\r\n            />\r\n          </td>\r\n          <td>\r\n            <select\r\n              className=\"form-control\"\r\n              name={`select-${element.type}`}\r\n              value={element.type}\r\n              onChange={(e) => this.changeField(e, element, groupData)}\r\n            >\r\n              <option value=\"\">-Type-</option>\r\n              <option value=\"text\">Text</option>\r\n              <option value=\"number\">Number</option>\r\n              <option value=\"email\">Email</option>\r\n              <option value=\"checkbox\">Checkbox</option>\r\n              <option value=\"radio\">Radio</option>\r\n              <option value=\"select\">Select</option>\r\n              <option value=\"date\">Date</option>\r\n              <option value=\"file\">File</option>\r\n              <option value=\"grid\">Grid</option>\r\n              <option value=\"digitalSignature\">Digital Signature</option>\r\n            </select>\r\n          </td>\r\n          <td>\r\n            {/* {element.showHideMultipleText && (\r\n              <textarea\r\n                className=\"form-control\"\r\n                name={`multi-${element.key}`}\r\n                value={element.actualOptions}\r\n                onChange={(e) =>\r\n                  this.changeMultiValuedField(e, element, groupData)\r\n                }\r\n                onBlur={(e) => {\r\n                  this.createOptions(e, element, groupData);\r\n                }}\r\n              />\r\n            )} */}\r\n            {element.showHideMultipleText && (\r\n              <select\r\n                className=\"form-control\"\r\n                name={`select-${element.dropdownSchema}`}\r\n                value={element.dropdownSchema}\r\n                onChange={(e) => this.changeDropdownData(e, element, groupData)}\r\n                onBlur={(e) => {\r\n                  this.createOptions(e, element, groupData);\r\n                }}\r\n              >\r\n                <option value=\"\">-Type-</option>\r\n                {this.populateDropdowns(this.state.selectedDropDowns)}\r\n              </select>\r\n            )}\r\n            {element.showHideGrid && this.displayGrid(element, groupData)}\r\n          </td>\r\n          <td className=\"valign-middle\">\r\n            {element.showHideGrid === false && (\r\n              <input\r\n                type=\"checkbox\"\r\n                value={\r\n                  element.validations !== undefined\r\n                    ? element.validations.required\r\n                    : false\r\n                }\r\n                key={`required-${element.key}`}\r\n                defaultChecked={\r\n                  element.validations !== undefined &&\r\n                  element.validations.required\r\n                    ? true\r\n                    : \"\"\r\n                }\r\n                onChange={(e) => {\r\n                  this.changeValidationField(e, element, groupData);\r\n                }}\r\n              />\r\n            )}\r\n          </td>\r\n          <td className=\"valign-middle\">\r\n            {elementIndex === 0 ? (\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-add\"\r\n                onClick={() => this.addCustomElement(elementIndex, groupData)}\r\n              ></button>\r\n            ) : (\r\n              <>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-add\"\r\n                  onClick={() => this.addCustomElement(elementIndex, groupData)}\r\n                ></button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-delete\"\r\n                  onClick={() =>\r\n                    this.deleteCustomElement(elementIndex, groupData)\r\n                  }\r\n                ></button>\r\n              </>\r\n            )}\r\n          </td>\r\n        </tr>\r\n      );\r\n    });\r\n    return groupElements;\r\n  };\r\n\r\n  //Change General Fields\r\n  changeField = (e, currentElement, groupData) => {\r\n    //console.log(currentElement);\r\n    let newGroupData = groupData.columns.map((element) => {\r\n      if (JSON.stringify(element) === JSON.stringify(currentElement)) {\r\n        let rand = +new Date();\r\n        if (e.target.tagName === \"INPUT\") {\r\n          element.key = e.target.value.toLowerCase().replace(/\\s/g, \"\") + rand;\r\n          element.label = e.target.value;\r\n          return element;\r\n        } else if (e.target.tagName === \"SELECT\") {\r\n          element.type = e.target.value;\r\n          if (\r\n            e.target.value === \"checkbox\" ||\r\n            e.target.value === \"radio\" ||\r\n            e.target.value === \"select\"\r\n          ) {\r\n            currentElement.typeOfMultipleText = e.target.value;\r\n            currentElement.showHideMultipleText = true;\r\n            currentElement.showHideGrid = false;\r\n          } else if (e.target.value === \"grid\") {\r\n            currentElement.showHideMultipleText = false;\r\n            currentElement.showHideGrid = true;\r\n          } else {\r\n            currentElement.typeOfMultipleText = \"\";\r\n            currentElement.showHideMultipleText = false;\r\n            currentElement.showHideGrid = false;\r\n          }\r\n          return element;\r\n        }\r\n      }\r\n      return element;\r\n    });\r\n    // calling setstate to update the state\r\n    this.setState((prevState) => ({}));\r\n\r\n    //console.log(this.state);\r\n  };\r\n\r\n  //Change Multi valued fields\r\n  changeMultiValuedField = (e, currentElement, groupData) => {\r\n    //console.log(currentElement);\r\n    let newGroupData = groupData.columns.map((element) => {\r\n      if (JSON.stringify(element) === JSON.stringify(currentElement)) {\r\n        //console.log(e.target.tagName);\r\n        if (e.target.tagName === \"TEXTAREA\") {\r\n          element.actualOptions = e.target.value;\r\n          return element;\r\n        }\r\n      }\r\n      return element;\r\n    });\r\n    this.setState((prevState) => ({}));\r\n  };\r\n\r\n  // Change valiadtion field\r\n  changeValidationField = (e, currentElement, groupData) => {\r\n    console.log(groupData);\r\n    let newGroupData = groupData.columns.map((element) => {\r\n      if (JSON.stringify(element) === JSON.stringify(currentElement)) {\r\n        console.log(e.target.type);\r\n        if (e.target.type === \"checkbox\") {\r\n          if (currentElement.validations) {\r\n            if (currentElement.validations.required) {\r\n              currentElement.validations = {};\r\n            } else {\r\n              currentElement.validations = { required: true };\r\n            }\r\n          }\r\n          return element;\r\n        }\r\n      }\r\n      return element;\r\n    });\r\n    this.setState((prevState) => ({}));\r\n  };\r\n\r\n  // Creating options array\r\n  createOptions = (e, currentElement, groupData) => {\r\n    groupData.columns.map((element) => {\r\n      if (JSON.stringify(element) === JSON.stringify(currentElement)) {\r\n        let actualOptionsArr = element.actualOptions.split(\",\");\r\n        element.options = [];\r\n        //console.log(actualOptionsArr);\r\n        if (element.type === \"select\") {\r\n          let optionObj = { key: \"select\", label: \"Select\", value: \"\" };\r\n          element.options.push(optionObj);\r\n          actualOptionsArr.map((item) => {\r\n            element.options.push({ key: item, label: item, value: item });\r\n          });\r\n          return element;\r\n        }\r\n        if (element.type === \"radio\") {\r\n          actualOptionsArr.map((item) => {\r\n            element.options.push({\r\n              key: item,\r\n              label: item,\r\n              name: element.key,\r\n              value: item,\r\n            });\r\n          });\r\n          return element;\r\n        }\r\n        if (element.type === \"checkbox\") {\r\n          actualOptionsArr.map((item) => {\r\n            element.options.push({ key: item, label: item, value: item });\r\n          });\r\n          return element;\r\n        }\r\n      }\r\n      return element;\r\n    });\r\n    this.setState((prevState) => ({}));\r\n  };\r\n\r\n  addCustomElement = (index, groupData) => {\r\n    //console.log(groupData);\r\n    let rand = +new Date();\r\n    let columnData = {\r\n      key: \"name\" + rand,\r\n      label: \"\",\r\n      type: \"text\",\r\n      validations: {},\r\n      showHideGrid: false,\r\n      gridColumns: [{ key: \"firstGridElement\", label: \"\", type: \"text\" }],\r\n    };\r\n    //groupData.columns.push(columnData);\r\n    groupData.columns.splice(index + 1, 0, columnData);\r\n    // calling setstate to update the state\r\n    this.setState((prevState) => ({}));\r\n  };\r\n\r\n  deleteCustomElement = (deleteIndex, groupData) => {\r\n    //console.log(groupData, deleteIndex);\r\n    groupData.columns.splice(deleteIndex, 1);\r\n    this.setState((prevState) => ({}));\r\n  };\r\n\r\n  // ------------------------ Display Fields in accordion -----------------------\r\n\r\n  // -------------------------- Display accordion ------------------\r\n  generateAccordion = (groupingData) => {\r\n    this.groupElement = groupingData.map((group, index) => {\r\n      return (\r\n        <div className=\"card\" key={`Grouping-${index}`}>\r\n          <div className=\"card-header\">\r\n            <h2 className=\"mb-0\">\r\n              <button\r\n                className=\"btn btn-link btn-block text-left float-left\"\r\n                data-toggle=\"collapse\"\r\n                data-target={`#collapse${index}`}\r\n                aria-expanded=\"true\"\r\n                aria-controls=\"collapseOne\"\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                }}\r\n              >\r\n                {group.groupName}\r\n              </button>\r\n            </h2>\r\n            <input\r\n              className=\"form-control edit-title\"\r\n              type=\"text\"\r\n              value={group.groupName}\r\n              onChange={(e) => this.onChangeGroup(e, group)}\r\n            />\r\n\r\n            {index === 0 ? (\r\n              <button\r\n                className=\"btn add-new-btn float-right\"\r\n                onClick={(e) => this.addGroupingContent(e, index)}\r\n              >\r\n                Add New Section\r\n              </button>\r\n            ) : (\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn remove-btn\"\r\n                onClick={(e) => this.deleteGroupingContent(e, index)}\r\n              ></button>\r\n            )}\r\n          </div>\r\n\r\n          <div\r\n            id={`collapse${index}`}\r\n            className=\"collapse show\"\r\n            aria-labelledby=\"headingOne\"\r\n            data-parent=\"#accordion\"\r\n          >\r\n            <div className=\"card-body\">\r\n              <div className=\"clean-table\">\r\n                <table className=\"table\">\r\n                  <colgroup>\r\n                    <col style={{ width: \"20%\" }} />\r\n                    <col style={{ width: \"20%\" }} />\r\n                    <col style={{ width: \"40%\" }} />\r\n                    <col style={{ width: \"10%\" }} />\r\n                    <col style={{ width: \"10%\" }} />\r\n                  </colgroup>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Label Name</th>\r\n                      <th>Field Type</th>\r\n                      <th>Options</th>\r\n                      <th>is Required?</th>\r\n                      <th>&nbsp;</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>{this.displayFields(group)}</tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n    return this.groupElement;\r\n  };\r\n  onChangeGroup = (e, group) => {\r\n    //console.log(group);\r\n    group.groupName = e.target.value;\r\n    this.setState((prevState) => ({}));\r\n  };\r\n\r\n  addGroupingContent = (e, index) => {\r\n    e.preventDefault();\r\n    let groupData = {\r\n      groupName: \"Group Name\",\r\n      columns: [\r\n        {\r\n          key: \"name\" + index,\r\n          label: \"\",\r\n          type: \"text\",\r\n          validations: {},\r\n          showHideGrid: false,\r\n          gridColumns: [{ key: \"firstGridElement\", label: \"\", type: \"text\" }],\r\n        },\r\n      ],\r\n    };\r\n    this.setState((prevState) => ({\r\n      groupingData: [...prevState.groupingData, groupData],\r\n    }));\r\n  };\r\n\r\n  deleteGroupingContent = (e, index) => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      groupingData: this.state.groupingData.filter(\r\n        (group, groupIndex) => index != groupIndex\r\n      ),\r\n    });\r\n  };\r\n  // ---------------------- Display accordion ----------------------------\r\n\r\n  onSubmitData = (e) => {\r\n    //console.log(\"heelo\");\r\n    e.preventDefault();\r\n    let submittedObject = {\r\n      country: this.state.selectedCountry,\r\n      bank: this.state.selectedBank,\r\n      groupingData: this.state.groupingData,\r\n    };\r\n    //console.log(submittedObject);\r\n    this.props.createChequebookConfiguration(submittedObject).then(() => {\r\n      // console.log(\r\n      //   this.props.loadDormatAccountConfigurationData.dormatAccountConfigData\r\n      // );\r\n    });\r\n  };\r\n\r\n  onChangeCountry = (event) => {\r\n    this.setState({\r\n      groupingData: [],\r\n      banks: [],\r\n      selectedBank: \"\",\r\n      selectedDropDowns: [],\r\n    });\r\n    //console.log(country.target.value);\r\n    let bankNames = new Array();\r\n\r\n    let selectedCountry = event.target.value;\r\n    this.state.allData.forEach(function (item) {\r\n      if (item.country === selectedCountry) {\r\n        bankNames.push(item.bank);\r\n      }\r\n    });\r\n    let distinctBanks = [...new Set(bankNames)];\r\n    this.setState({\r\n      banks: distinctBanks,\r\n      selectedCountry,\r\n    });\r\n    //Filtering Select information\r\n    let dropdowns = null;\r\n    this.state.dropDownData.forEach(function (item) {\r\n      if (item.country === selectedCountry) {\r\n        dropdowns = item.groupingData;\r\n      }\r\n    });\r\n    this.setState({ selectedDropDowns: dropdowns });\r\n  };\r\n\r\n  onChangeBank = (event) => {\r\n    let selectedBank = event.target.value;\r\n    let selectedGroupingData = [];\r\n    let selectedCountry = this.state.selectedCountry;\r\n    this.state.allData.forEach(function (item) {\r\n      if (item.bank === selectedBank && item.country === selectedCountry) {\r\n        selectedGroupingData = item.groupingData;\r\n      }\r\n    });\r\n    this.setState({\r\n      groupingData: selectedGroupingData,\r\n      selectedBank: selectedBank,\r\n    });\r\n    //console.log(\"this.state.selecetdBank in bank \" + this.state.selecetdBank);\r\n  };\r\n\r\n  render() {\r\n    console.log(\r\n      this.props.loadChequebookConfigurationData.chequebookConfigResponseData\r\n    );\r\n    if (this.state.allData.length < 0) {\r\n      return (\r\n        <div id=\"content\">\r\n          <div className=\"inner-container\">No Record Found</div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    let countries = new Array();\r\n    this.state.allData.forEach(function (item) {\r\n      countries.push(item.country);\r\n    });\r\n    let distinctCounties = [...new Set(countries)];\r\n\r\n    //console.log(this.state.selectedDropDowns);\r\n\r\n    return (\r\n      <div id=\"content\">\r\n        <div className=\"inner-container\">\r\n          <div className=\"page-header\">\r\n            <h2>Configure Cheque Book Request</h2>\r\n          </div>\r\n          <div className=\"row margin-top-30\">\r\n            <div className=\"col-lg-12\">\r\n              <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-lg-4 boredr-right\">\r\n                      <div className=\"select-container country-selection\">\r\n                        <figure>\r\n                          <img src={COUNTRY_ICON} alt=\"country\" />\r\n                        </figure>\r\n                        <div className=\"form-group\">\r\n                          <label>Select Country</label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"country\"\r\n                            onChange={this.onChangeCountry}\r\n                          >\r\n                            <option value=\"\">Select</option>\r\n                            {distinctCounties.map((country) => {\r\n                              return (\r\n                                <option\r\n                                  value={country}\r\n                                  key={`country-${country}`}\r\n                                >\r\n                                  {country}\r\n                                </option>\r\n                              );\r\n                            })}\r\n                          </select>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-lg-4 boredr-right\">\r\n                      <div className=\"select-container bank-selection\">\r\n                        <figure>\r\n                          <img src={BANK_ICON} alt=\"bank\" />\r\n                        </figure>\r\n                        <div className=\"form-group\">\r\n                          <label>Select Bank</label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"bank\"\r\n                            onChange={this.onChangeBank}\r\n                            value={this.state.selecetdBank}\r\n                          >\r\n                            <option value=\"\">Select</option>\r\n                            {this.state.banks.map((bank) => {\r\n                              return (\r\n                                <option value={bank} key={`bank-${bank}`}>\r\n                                  {bank}\r\n                                </option>\r\n                              );\r\n                            })}\r\n                          </select>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    {/* <div className=\"col-lg-4\">\r\n                      <div className=\"select-container account-type-selection\">\r\n                        <figure>\r\n                          <img src={ACCOUNT_TYPE} alt=\"Account Type\" />\r\n                        </figure>\r\n                        <div className=\"form-group\">\r\n                          <label forName=\"Account type\">\r\n                            Select Account Type\r\n                          </label>\r\n                          <select className=\"form-control\">\r\n                            <option value=\"\">Single</option>\r\n                            <option value=\"\">Joint</option>\r\n                          </select>\r\n                        </div>\r\n                      </div>\r\n                    </div> */}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {this.state.groupingData.length > 0 && (\r\n                <form\r\n                  onSubmit={(e) => {\r\n                    this.onSubmitData(e);\r\n                  }}\r\n                >\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-lg-12\">\r\n                          <div id=\"accordion\" className=\"accordion\">\r\n                            {this.generateAccordion(this.state.groupingData)}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"card-footer text-align-right\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-lg-12\">\r\n                          <button\r\n                            type=\"submit\"\r\n                            className=\"btn btn-secondary float-right\"\r\n                          >\r\n                            Submit\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row\">\r\n                        <div className=\"col-lg-12\">\r\n                          {this.props.loadChequebookConfigurationData\r\n                            .chequebookConfigResponseData &&\r\n                            this.props.loadChequebookConfigurationData\r\n                              .chequebookConfigResponseData.error ===\r\n                              \"false\" && (\r\n                              <div\r\n                                className=\"alert alert-success alert-dismissible fade show\"\r\n                                role=\"alert\"\r\n                                style={{ margin: \"15px\" }}\r\n                              >\r\n                                {/*<strong>\r\n                                \r\n                                   {\r\n                                    this.props\r\n                                      .loadDormatAccountConfigurationData\r\n                                      .dormatAccountConfigData\r\n                                      .errorMsg\r\n                                  }\r\n                                </strong> */}\r\n                                Chequebook configuration data has been submitted\r\n                                successfully\r\n                                <button\r\n                                  type=\"button\"\r\n                                  className=\"close\"\r\n                                  data-dismiss=\"alert\"\r\n                                  aria-label=\"Close\"\r\n                                >\r\n                                  <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                              </div>\r\n                            )}\r\n                          {this.props.loadChequebookConfigurationData\r\n                            .chequebookConfigResponseData &&\r\n                            this.props.loadChequebookConfigurationData\r\n                              .chequebookConfigResponseData.error ===\r\n                              \"true\" && (\r\n                              <div\r\n                                className=\"alert alert-warning alert-dismissible fade show\"\r\n                                role=\"alert\"\r\n                                style={{ margin: \"15px\" }}\r\n                              >\r\n                                <strong>\r\n                                  {\r\n                                    this.props.loadChequebookConfigurationData\r\n                                      .chequebookConfigResponseData.errorMsg\r\n                                  }\r\n                                </strong>\r\n                                <button\r\n                                  type=\"button\"\r\n                                  className=\"close\"\r\n                                  data-dismiss=\"alert\"\r\n                                  aria-label=\"Close\"\r\n                                >\r\n                                  <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                              </div>\r\n                            )}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ ChequebookConfigurationReducer }) => {\r\n  //console.log(ChequebookConfigurationReducer);\r\n  return {\r\n    loadChequebookConfigurationData: ChequebookConfigurationReducer,\r\n  };\r\n};\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, {\r\n    loadChequebookConfiguration,\r\n    createChequebookConfiguration,\r\n  })(ConfigureChequeBook)\r\n);\r\n","import ConfigureChequeBook from \"./pages/configure-cheque-book/configure-cheque-book\";\r\n\r\nexport default {\r\n  pages: [\r\n    {\r\n      routeProps: {\r\n        path: \"/configure-cheque-book\",\r\n        component: ConfigureChequeBook,\r\n      },\r\n      name: \"ConfigureChequeBook\",\r\n      type: \"superAdmin\",\r\n    },\r\n  ],\r\n};\r\n","import {\r\n  doLoadChequebookConfigurationStarted,\r\n  doLoadChequebookConfigurationSuccess,\r\n  doLoadChequebookConfigurationError,\r\n  doSaveChequebookConfigurationStarted,\r\n  doSaveChequebookConfigurationSuccess,\r\n  doSaveChequebookConfigurationError,\r\n} from \"./configure-chequebook-request\";\r\nimport Services from \"../../services\";\r\n\r\nexport const loadChequebookConfiguration = () => {\r\n  return function loadChequebookConfigurationAction(dispatch) {\r\n    dispatch(doLoadChequebookConfigurationStarted());\r\n    return Services.APICallConfig.callAPIService(\"LOAD_CHEQUEBOOK_CONFIG\")\r\n      .then((response) => {\r\n        dispatch(doLoadChequebookConfigurationSuccess(response));\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"error response\", error);\r\n        dispatch(doLoadChequebookConfigurationError(error));\r\n      });\r\n  };\r\n};\r\n\r\nexport const createChequebookConfiguration = (configurationData) => {\r\n  return function createChequebookConfigurationAction(dispatch) {\r\n    dispatch(doSaveChequebookConfigurationStarted());\r\n\r\n    return Services.APICallConfig.callAPIService(\r\n      \"SAVE_CHEQUEBOOK_CONFIG\",\r\n      configurationData\r\n    )\r\n      .then((response) => {\r\n        dispatch(doSaveChequebookConfigurationSuccess(response));\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"error response\", error);\r\n        dispatch(doSaveChequebookConfigurationError(error));\r\n      });\r\n  };\r\n};\r\n","import {\r\n  LOAD_CHEQUE_BOOK_CONFIGURATION_STARTED,\r\n  LOAD_CHEQUE_BOOK_CONFIGURATION_SUCCESS,\r\n  LOAD_CHEQUE_BOOK_CONFIGURATION_ERROR,\r\n  SAVE_CHEQUE_BOOK_CONFIGURATION_STARTED,\r\n  SAVE_CHEQUE_BOOK_CONFIGURATION_SUCCESS,\r\n  SAVE_CHEQUE_BOOK_CONFIGURATION_ERROR,\r\n} from \"./type\";\r\n\r\nexport const doLoadChequebookConfigurationStarted = () => {\r\n  return {\r\n    type: LOAD_CHEQUE_BOOK_CONFIGURATION_STARTED,\r\n  };\r\n};\r\n\r\nexport const doLoadChequebookConfigurationSuccess = (accountSchema) => {\r\n  return {\r\n    type: LOAD_CHEQUE_BOOK_CONFIGURATION_SUCCESS,\r\n    payload: accountSchema,\r\n  };\r\n};\r\n\r\nexport const doLoadChequebookConfigurationError = (error) => {\r\n  return {\r\n    type: LOAD_CHEQUE_BOOK_CONFIGURATION_ERROR,\r\n    payload: error,\r\n  };\r\n};\r\n\r\nexport const doSaveChequebookConfigurationStarted = () => {\r\n  return {\r\n    type: SAVE_CHEQUE_BOOK_CONFIGURATION_STARTED,\r\n  };\r\n};\r\n\r\nexport const doSaveChequebookConfigurationSuccess = (accountInfo) => {\r\n  return {\r\n    type: SAVE_CHEQUE_BOOK_CONFIGURATION_SUCCESS,\r\n    payload: accountInfo,\r\n  };\r\n};\r\n\r\nexport const doSaveChequebookConfigurationError = (error) => {\r\n  return {\r\n    type: SAVE_CHEQUE_BOOK_CONFIGURATION_ERROR,\r\n    payload: error,\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {\r\n  loadChequebookSchema,\r\n  doSaveChequebook,\r\n} from \"../../../../actions/chequebook\";\r\nimport CustomForm from \"../../../../reusable-components/CustomForm\";\r\n\r\n//import \"./open-your-account.css\";\r\n\r\nclass Chequebook extends Component {\r\n  state = {};\r\n\r\n  componentDidMount() {\r\n    let schemaInfo = {\r\n      bank_id: sessionStorage.getItem(\"bank_id\"),\r\n      country_id: sessionStorage.getItem(\"country_id\"),\r\n    };\r\n    this.props.loadChequebookSchema(schemaInfo);\r\n  }\r\n\r\n  getCustomDate = () => {\r\n    var today = new Date();\r\n    var dd = String(today.getDate()).padStart(2, \"0\");\r\n    var mm = String(today.getMonth() + 1).padStart(2, \"0\"); //January is 0!\r\n    var yyyy = today.getFullYear();\r\n\r\n    today = yyyy + \"-\" + mm + \"-\" + dd; // 2020-09-24\r\n    return today;\r\n  };\r\n\r\n  onSubmitData = (formData) => {\r\n    let submittedData = {\r\n      account_info: formData,\r\n      processed_indicator: \"NI\",\r\n      current_date: this.getCustomDate(),\r\n    };\r\n    this.props.doSaveChequebook(submittedData).then(() => {\r\n      //console.log(this.props.openYourAccountResponseData.openYourAccountData);\r\n    });\r\n    //console.log(submittedData);\r\n  };\r\n\r\n  render() {\r\n    //console.log(this.props.dormatAccountResponseData.dormatAccountSchemaData);\r\n    // return null;\r\n    return (\r\n      <div id=\"content\">\r\n        <div className=\"inner-container\">\r\n          <div className=\"page-header\">\r\n            <h2>Request for a chequebook</h2>\r\n          </div>\r\n          <p>Individual Chequebook Request Form</p>\r\n          <div className=\"row margin-top-30\">\r\n            <div className=\"col-lg-12\">\r\n              {this.props.chequebookResponseData.chequebookSchemaData &&\r\n                this.props.chequebookResponseData.chequebookSchemaData\r\n                  .formData && (\r\n                  <CustomForm\r\n                    className=\"open-account\"\r\n                    model={\r\n                      this.props.chequebookResponseData.chequebookSchemaData\r\n                        .formData.data\r\n                    }\r\n                    onSubmit={(model) => {\r\n                      this.onSubmitData(model);\r\n                    }}\r\n                  />\r\n                )}\r\n              {this.props.chequebookResponseData.chequebookData &&\r\n                this.props.chequebookResponseData.chequebookData.error ===\r\n                  \"false\" && (\r\n                  <div\r\n                    className=\"alert alert-success alert-dismissible fade show\"\r\n                    role=\"alert\"\r\n                  >\r\n                    {/* <strong>\r\n                      {\r\n                        this.props.chequebookResponseData\r\n                .chequebookData.successMsg\r\n                      }\r\n                    </strong> */}\r\n                    Your chequebook request has been submitted successfully.\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"close\"\r\n                      data-dismiss=\"alert\"\r\n                      aria-label=\"Close\"\r\n                    >\r\n                      <span aria-hidden=\"true\">&times;</span>\r\n                    </button>\r\n                  </div>\r\n                )}\r\n              {this.props.chequebookResponseData.chequebookData &&\r\n                this.props.chequebookResponseData.chequebookData.error ===\r\n                  \"true\" && (\r\n                  <div\r\n                    className=\"alert alert-warning alert-dismissible fade show\"\r\n                    role=\"alert\"\r\n                  >\r\n                    Your cheque book request has been unsuccessfull.\r\n                    {/* <strong>\r\n                      {\r\n                        this.props.chequebookResponseData\r\n                .chequebookData.errorMsg\r\n                      }\r\n                    </strong> */}\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"close\"\r\n                      data-dismiss=\"alert\"\r\n                      aria-label=\"Close\"\r\n                    >\r\n                      <span aria-hidden=\"true\">&times;</span>\r\n                    </button>\r\n                  </div>\r\n                )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ ChequebookReducer }) => {\r\n  return {\r\n    chequebookResponseData: ChequebookReducer,\r\n  };\r\n};\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, { loadChequebookSchema, doSaveChequebook })(\r\n    Chequebook\r\n  )\r\n);\r\n","import Chequebook from \"./pages/cheque-book/cheque-book\";\r\n\r\nexport default {\r\n  pages: [\r\n    {\r\n      routeProps: {\r\n        path: \"/cheque-book-request\",\r\n        component: Chequebook,\r\n      },\r\n      name: \"Chequebook\",\r\n    },\r\n  ],\r\n};\r\n","import {\r\n  doLoadChequebookStarted,\r\n  doLoadChequebookSuccess,\r\n  doLoadChequebookError,\r\n  doSaveChequebookStarted,\r\n  doSaveChequebookSuccess,\r\n  doSaveChequebookError,\r\n} from \"./chequebook\";\r\nimport Services from \"../../services\";\r\n\r\nexport const loadChequebookSchema = (loadData) => {\r\n  return function doChequebookAction(dispatch) {\r\n    dispatch(doLoadChequebookStarted());\r\n    return Services.APICallConfig.callAPIService(\"LOAD_CHEQUE_BOOK\", loadData)\r\n      .then((response) => {\r\n        dispatch(doLoadChequebookSuccess(response));\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"error response\", error);\r\n        dispatch(doLoadChequebookError(error));\r\n      });\r\n  };\r\n};\r\n\r\nexport const doSaveChequebook = (accountData) => {\r\n  return function doSaveChequebookAction(dispatch) {\r\n    dispatch(doSaveChequebookStarted());\r\n\r\n    return Services.APICallConfig.callAPIService(\r\n      \"SAVE_CHEQUE_BOOK\",\r\n      accountData\r\n    )\r\n      .then((response) => {\r\n        dispatch(doSaveChequebookSuccess(response));\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"error response\", error);\r\n        dispatch(doSaveChequebookError(error));\r\n      });\r\n  };\r\n};\r\n","import {\r\n  LOAD_CHEQUE_BOOK_STARTED,\r\n  LOAD_CHEQUE_BOOK_SUCCESS,\r\n  LOAD_CHEQUE_BOOK_ERROR,\r\n  SAVE_CHEQUE_BOOK_STARTED,\r\n  SAVE_CHEQUE_BOOK_SUCCESS,\r\n  SAVE_CHEQUE_BOOK_ERROR,\r\n} from \"./type\";\r\n\r\nexport const doLoadChequebookStarted = () => {\r\n  return {\r\n    type: LOAD_CHEQUE_BOOK_STARTED,\r\n  };\r\n};\r\n\r\nexport const doLoadChequebookSuccess = (accountSchema) => {\r\n  return {\r\n    type: LOAD_CHEQUE_BOOK_SUCCESS,\r\n    payload: accountSchema,\r\n  };\r\n};\r\n\r\nexport const doLoadChequebookError = (error) => {\r\n  return {\r\n    type: LOAD_CHEQUE_BOOK_ERROR,\r\n    payload: error,\r\n  };\r\n};\r\n\r\nexport const doSaveChequebookStarted = () => {\r\n  return {\r\n    type: SAVE_CHEQUE_BOOK_STARTED,\r\n  };\r\n};\r\n\r\nexport const doSaveChequebookSuccess = (accountInfo) => {\r\n  return {\r\n    type: SAVE_CHEQUE_BOOK_SUCCESS,\r\n    payload: accountInfo,\r\n  };\r\n};\r\n\r\nexport const doSaveChequebookError = (error) => {\r\n  return {\r\n    type: SAVE_CHEQUE_BOOK_ERROR,\r\n    payload: error,\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {\r\n  COUNTRY_ICON,\r\n  BANK_ICON,\r\n  //ACCOUNT_TYPE,\r\n} from \"../../../../app-constant/images\";\r\nimport {\r\n  loadCreditCardConfiguration,\r\n  createCreditCardConfiguration,\r\n} from \"../../../../actions/configure-credit-card\";\r\n\r\nimport \"./configure-credit-card\";\r\n\r\nclass ConfigureCreditCard extends Component {\r\n  state = {\r\n    banks: [],\r\n    selectedCountry: \"\",\r\n    selectedBank: \"\",\r\n    allData: [],\r\n    dropDownData: [],\r\n    groupingData: [],\r\n    selectedDropDowns: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.loadCreditCardConfiguration().then(() => {\r\n      //console.log(this.props);\r\n      let receivedObject = this.props.loadCreditCardConfigurationData\r\n        .creditCardConfigSchemaData;\r\n      //console.log(receivedObject);\r\n      if (receivedObject.allData.length > 0) {\r\n        this.setState({\r\n          allData: receivedObject.allData,\r\n        });\r\n      }\r\n      if (receivedObject.dropDownData.length > 0) {\r\n        this.setState({\r\n          dropDownData: receivedObject.dropDownData,\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  // --------------------------Display grid------------------------------\r\n  displayGrid = (element, groupData) => {\r\n    return (\r\n      <div className=\"nested-table\">\r\n        <h5>Related Data</h5>\r\n        <table className=\"table\">\r\n          <colgroup>\r\n            <col style={{ width: \"40%\" }} />\r\n            <col style={{ width: \"40%\" }} />\r\n            <col style={{ width: \"20%\" }} />\r\n          </colgroup>\r\n          <tbody>{this.displayGridBody(element, groupData)}</tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  displayGridBody = (element, groupData) => {\r\n    let gridBodyContent = element.gridColumns.map(\r\n      (innerElement, innerElementIndex) => {\r\n        return (\r\n          <tr key={`innerElements-${innerElementIndex}`}>\r\n            <td>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name={`text-${innerElement.key}`}\r\n                value={innerElement.label}\r\n                onChange={(e) => this.changeGridField(e, element, innerElement)}\r\n              />\r\n            </td>\r\n            <td>\r\n              <select\r\n                className=\"form-control\"\r\n                name={`select-${innerElement.type}`}\r\n                value={innerElement.type}\r\n                onChange={(e) => this.changeGridField(e, element, innerElement)}\r\n              >\r\n                <option value=\"\">-Type-</option>\r\n                <option value=\"text\">Text</option>\r\n                <option value=\"number\">Number</option>\r\n                <option value=\"email\">Email</option>\r\n                <option value=\"date\">Date</option>\r\n              </select>\r\n            </td>\r\n            <td>\r\n              <div className=\"sub-action\">\r\n                {innerElementIndex === 0 ? (\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-add\"\r\n                    onClick={() =>\r\n                      this.addGridElement(innerElementIndex, element)\r\n                    }\r\n                  ></button>\r\n                ) : (\r\n                  <>\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-add\"\r\n                      onClick={() =>\r\n                        this.addGridElement(innerElementIndex, element)\r\n                      }\r\n                    ></button>\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-delete\"\r\n                      onClick={() =>\r\n                        this.deleteGridElement(innerElementIndex, element)\r\n                      }\r\n                    ></button>\r\n                  </>\r\n                )}\r\n              </div>\r\n            </td>\r\n          </tr>\r\n        );\r\n      }\r\n    );\r\n    return gridBodyContent;\r\n  };\r\n\r\n  changeGridField = (e, currentElement, innerElement) => {\r\n    console.log(innerElement);\r\n    let rand = +new Date();\r\n    let newGroupData = currentElement.gridColumns.map(\r\n      (innerElementFromLoop) => {\r\n        if (\r\n          JSON.stringify(innerElementFromLoop) === JSON.stringify(innerElement)\r\n        ) {\r\n          if (e.target.tagName === \"INPUT\") {\r\n            innerElementFromLoop.key = \"name\" + rand;\r\n            innerElementFromLoop.label = e.target.value;\r\n          } else {\r\n            innerElementFromLoop.type = e.target.value;\r\n          }\r\n          return innerElementFromLoop;\r\n        }\r\n        return innerElement;\r\n      }\r\n    );\r\n    this.setState((prevState) => ({}));\r\n  };\r\n\r\n  addGridElement = (index, element) => {\r\n    //console.log(groupData);\r\n    let rand = +new Date();\r\n    let columnData = {\r\n      key: \"name\" + rand,\r\n      label: \"\",\r\n      type: \"\",\r\n    };\r\n    element.gridColumns.splice(index + 1, 0, columnData);\r\n    this.setState((prevState) => ({}));\r\n  };\r\n  deleteGridElement = (deleteIndex, element) => {\r\n    element.gridColumns.splice(deleteIndex, 1);\r\n    this.setState((prevState) => ({}));\r\n  };\r\n\r\n  // --------------------------Display grid------------------------------\r\n\r\n  // ------------------------------ Display Fields in accordion ----------------------------\r\n\r\n  populateDropdowns = (selectedDropDowns) => {\r\n    let key = +new Date();\r\n    let input = selectedDropDowns.map((item, index) => {\r\n      return (\r\n        <option key={`${index}-${key}`} value={item.groupName}>\r\n          {item.groupName}\r\n        </option>\r\n      );\r\n    });\r\n    return input;\r\n  };\r\n\r\n  changeDropdownData = (e, currentElement, groupData) => {\r\n    //console.log(e.target.value);\r\n    //console.log( element.type = e.target.value;)\r\n    //console.log(currentElement);\r\n    let newGroupData = groupData.columns.map((element) => {\r\n      if (JSON.stringify(element) === JSON.stringify(currentElement)) {\r\n        console.log(e.target.tagName);\r\n        if (e.target.tagName === \"SELECT\") {\r\n          //element.actualOptions = e.target.value;\r\n          element.dropdownSchema = e.target.value;\r\n          //console.log(this.state.selectedDropDowns);\r\n          let tempOptions = \"\";\r\n          this.state.selectedDropDowns.map((item) => {\r\n            if (e.target.value === item.groupName) {\r\n              for (let i = 0; i < item.columns.length; i++) {\r\n                if (i !== item.columns.length - 1) {\r\n                  tempOptions += item.columns[i].value + \",\";\r\n                } else {\r\n                  tempOptions += item.columns[i].value;\r\n                }\r\n              }\r\n              element.actualOptions = tempOptions;\r\n            }\r\n          });\r\n          return element;\r\n        }\r\n      }\r\n      return element;\r\n    });\r\n    this.setState((prevState) => ({}));\r\n  };\r\n\r\n  displayFields = (groupData) => {\r\n    let groupElements = groupData.columns.map((element, elementIndex) => {\r\n      return (\r\n        <tr key={`elements-${elementIndex}`}>\r\n          <td>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name={`text-${element.key}`}\r\n              value={element.label}\r\n              onChange={(e) => this.changeField(e, element, groupData)}\r\n            />\r\n          </td>\r\n          <td>\r\n            <select\r\n              className=\"form-control\"\r\n              name={`select-${element.type}`}\r\n              value={element.type}\r\n              onChange={(e) => this.changeField(e, element, groupData)}\r\n            >\r\n              <option value=\"\">-Type-</option>\r\n              <option value=\"text\">Text</option>\r\n              <option value=\"number\">Number</option>\r\n              <option value=\"email\">Email</option>\r\n              <option value=\"checkbox\">Checkbox</option>\r\n              <option value=\"radio\">Radio</option>\r\n              <option value=\"select\">Select</option>\r\n              <option value=\"date\">Date</option>\r\n              <option value=\"file\">File</option>\r\n              <option value=\"grid\">Grid</option>\r\n              <option value=\"digitalSignature\">Digital Signature</option>\r\n            </select>\r\n          </td>\r\n          <td>\r\n            {/* {element.showHideMultipleText && (\r\n              <textarea\r\n                className=\"form-control\"\r\n                name={`multi-${element.key}`}\r\n                value={element.actualOptions}\r\n                onChange={(e) =>\r\n                  this.changeMultiValuedField(e, element, groupData)\r\n                }\r\n                onBlur={(e) => {\r\n                  this.createOptions(e, element, groupData);\r\n                }}\r\n              />\r\n            )} */}\r\n            {element.showHideMultipleText && (\r\n              <select\r\n                className=\"form-control\"\r\n                name={`select-${element.dropdownSchema}`}\r\n                value={element.dropdownSchema}\r\n                onChange={(e) => this.changeDropdownData(e, element, groupData)}\r\n                onBlur={(e) => {\r\n                  this.createOptions(e, element, groupData);\r\n                }}\r\n              >\r\n                <option value=\"\">-Type-</option>\r\n                {this.populateDropdowns(this.state.selectedDropDowns)}\r\n              </select>\r\n            )}\r\n            {element.showHideGrid && this.displayGrid(element, groupData)}\r\n          </td>\r\n          <td className=\"valign-middle\">\r\n            {element.showHideGrid === false && (\r\n              <input\r\n                type=\"checkbox\"\r\n                value={\r\n                  element.validations !== undefined\r\n                    ? element.validations.required\r\n                    : false\r\n                }\r\n                key={`required-${element.key}`}\r\n                defaultChecked={\r\n                  element.validations !== undefined &&\r\n                  element.validations.required\r\n                    ? true\r\n                    : \"\"\r\n                }\r\n                onChange={(e) => {\r\n                  this.changeValidationField(e, element, groupData);\r\n                }}\r\n              />\r\n            )}\r\n          </td>\r\n          <td className=\"valign-middle\">\r\n            {elementIndex === 0 ? (\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-add\"\r\n                onClick={() => this.addCustomElement(elementIndex, groupData)}\r\n              ></button>\r\n            ) : (\r\n              <>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-add\"\r\n                  onClick={() => this.addCustomElement(elementIndex, groupData)}\r\n                ></button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-delete\"\r\n                  onClick={() =>\r\n                    this.deleteCustomElement(elementIndex, groupData)\r\n                  }\r\n                ></button>\r\n              </>\r\n            )}\r\n          </td>\r\n        </tr>\r\n      );\r\n    });\r\n    return groupElements;\r\n  };\r\n\r\n  //Change General Fields\r\n  changeField = (e, currentElement, groupData) => {\r\n    //console.log(currentElement);\r\n    let newGroupData = groupData.columns.map((element) => {\r\n      if (JSON.stringify(element) === JSON.stringify(currentElement)) {\r\n        let rand = +new Date();\r\n        if (e.target.tagName === \"INPUT\") {\r\n          element.key = e.target.value.toLowerCase().replace(/\\s/g, \"\") + rand;\r\n          element.label = e.target.value;\r\n          return element;\r\n        } else if (e.target.tagName === \"SELECT\") {\r\n          element.type = e.target.value;\r\n          if (\r\n            e.target.value === \"checkbox\" ||\r\n            e.target.value === \"radio\" ||\r\n            e.target.value === \"select\"\r\n          ) {\r\n            currentElement.typeOfMultipleText = e.target.value;\r\n            currentElement.showHideMultipleText = true;\r\n            currentElement.showHideGrid = false;\r\n          } else if (e.target.value === \"grid\") {\r\n            currentElement.showHideMultipleText = false;\r\n            currentElement.showHideGrid = true;\r\n          } else {\r\n            currentElement.typeOfMultipleText = \"\";\r\n            currentElement.showHideMultipleText = false;\r\n            currentElement.showHideGrid = false;\r\n          }\r\n          return element;\r\n        }\r\n      }\r\n      return element;\r\n    });\r\n    // calling setstate to update the state\r\n    this.setState((prevState) => ({}));\r\n\r\n    //console.log(this.state);\r\n  };\r\n\r\n  //Change Multi valued fields\r\n  changeMultiValuedField = (e, currentElement, groupData) => {\r\n    //console.log(currentElement);\r\n    let newGroupData = groupData.columns.map((element) => {\r\n      if (JSON.stringify(element) === JSON.stringify(currentElement)) {\r\n        //console.log(e.target.tagName);\r\n        if (e.target.tagName === \"TEXTAREA\") {\r\n          element.actualOptions = e.target.value;\r\n          return element;\r\n        }\r\n      }\r\n      return element;\r\n    });\r\n    this.setState((prevState) => ({}));\r\n  };\r\n\r\n  // Change valiadtion field\r\n  changeValidationField = (e, currentElement, groupData) => {\r\n    console.log(groupData);\r\n    let newGroupData = groupData.columns.map((element) => {\r\n      if (JSON.stringify(element) === JSON.stringify(currentElement)) {\r\n        console.log(e.target.type);\r\n        if (e.target.type === \"checkbox\") {\r\n          if (currentElement.validations) {\r\n            if (currentElement.validations.required) {\r\n              currentElement.validations = {};\r\n            } else {\r\n              currentElement.validations = { required: true };\r\n            }\r\n          }\r\n          return element;\r\n        }\r\n      }\r\n      return element;\r\n    });\r\n    this.setState((prevState) => ({}));\r\n  };\r\n\r\n  // Creating options array\r\n  createOptions = (e, currentElement, groupData) => {\r\n    groupData.columns.map((element) => {\r\n      if (JSON.stringify(element) === JSON.stringify(currentElement)) {\r\n        let actualOptionsArr = element.actualOptions.split(\",\");\r\n        element.options = [];\r\n        //console.log(actualOptionsArr);\r\n        if (element.type === \"select\") {\r\n          let optionObj = { key: \"select\", label: \"Select\", value: \"\" };\r\n          element.options.push(optionObj);\r\n          actualOptionsArr.map((item) => {\r\n            element.options.push({ key: item, label: item, value: item });\r\n          });\r\n          return element;\r\n        }\r\n        if (element.type === \"radio\") {\r\n          actualOptionsArr.map((item) => {\r\n            element.options.push({\r\n              key: item,\r\n              label: item,\r\n              name: element.key,\r\n              value: item,\r\n            });\r\n          });\r\n          return element;\r\n        }\r\n        if (element.type === \"checkbox\") {\r\n          actualOptionsArr.map((item) => {\r\n            element.options.push({ key: item, label: item, value: item });\r\n          });\r\n          return element;\r\n        }\r\n      }\r\n      return element;\r\n    });\r\n    this.setState((prevState) => ({}));\r\n  };\r\n\r\n  addCustomElement = (index, groupData) => {\r\n    //console.log(groupData);\r\n    let rand = +new Date();\r\n    let columnData = {\r\n      key: \"name\" + rand,\r\n      label: \"\",\r\n      type: \"text\",\r\n      validations: {},\r\n      showHideGrid: false,\r\n      gridColumns: [{ key: \"firstGridElement\", label: \"\", type: \"text\" }],\r\n    };\r\n    //groupData.columns.push(columnData);\r\n    groupData.columns.splice(index + 1, 0, columnData);\r\n    // calling setstate to update the state\r\n    this.setState((prevState) => ({}));\r\n  };\r\n\r\n  deleteCustomElement = (deleteIndex, groupData) => {\r\n    //console.log(groupData, deleteIndex);\r\n    groupData.columns.splice(deleteIndex, 1);\r\n    this.setState((prevState) => ({}));\r\n  };\r\n\r\n  // ------------------------ Display Fields in accordion -----------------------\r\n\r\n  // -------------------------- Display accordion ------------------\r\n  generateAccordion = (groupingData) => {\r\n    this.groupElement = groupingData.map((group, index) => {\r\n      return (\r\n        <div className=\"card\" key={`Grouping-${index}`}>\r\n          <div className=\"card-header\">\r\n            <h2 className=\"mb-0\">\r\n              <button\r\n                className=\"btn btn-link btn-block text-left float-left\"\r\n                data-toggle=\"collapse\"\r\n                data-target={`#collapse${index}`}\r\n                aria-expanded=\"true\"\r\n                aria-controls=\"collapseOne\"\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                }}\r\n              >\r\n                {group.groupName}\r\n              </button>\r\n            </h2>\r\n            <input\r\n              className=\"form-control edit-title\"\r\n              type=\"text\"\r\n              value={group.groupName}\r\n              onChange={(e) => this.onChangeGroup(e, group)}\r\n            />\r\n\r\n            {index === 0 ? (\r\n              <button\r\n                className=\"btn add-new-btn float-right\"\r\n                onClick={(e) => this.addGroupingContent(e, index)}\r\n              >\r\n                Add New Section\r\n              </button>\r\n            ) : (\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn remove-btn\"\r\n                onClick={(e) => this.deleteGroupingContent(e, index)}\r\n              ></button>\r\n            )}\r\n          </div>\r\n\r\n          <div\r\n            id={`collapse${index}`}\r\n            className=\"collapse show\"\r\n            aria-labelledby=\"headingOne\"\r\n            data-parent=\"#accordion\"\r\n          >\r\n            <div className=\"card-body\">\r\n              <div className=\"clean-table\">\r\n                <table className=\"table\">\r\n                  <colgroup>\r\n                    <col style={{ width: \"20%\" }} />\r\n                    <col style={{ width: \"20%\" }} />\r\n                    <col style={{ width: \"40%\" }} />\r\n                    <col style={{ width: \"10%\" }} />\r\n                    <col style={{ width: \"10%\" }} />\r\n                  </colgroup>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Label Name</th>\r\n                      <th>Field Type</th>\r\n                      <th>Options</th>\r\n                      <th>is Required?</th>\r\n                      <th>&nbsp;</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>{this.displayFields(group)}</tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n    return this.groupElement;\r\n  };\r\n  onChangeGroup = (e, group) => {\r\n    //console.log(group);\r\n    group.groupName = e.target.value;\r\n    this.setState((prevState) => ({}));\r\n  };\r\n\r\n  addGroupingContent = (e, index) => {\r\n    e.preventDefault();\r\n    let groupData = {\r\n      groupName: \"Group Name\",\r\n      columns: [\r\n        {\r\n          key: \"name\" + index,\r\n          label: \"\",\r\n          type: \"text\",\r\n          validations: {},\r\n          showHideGrid: false,\r\n          gridColumns: [{ key: \"firstGridElement\", label: \"\", type: \"text\" }],\r\n        },\r\n      ],\r\n    };\r\n    this.setState((prevState) => ({\r\n      groupingData: [...prevState.groupingData, groupData],\r\n    }));\r\n  };\r\n\r\n  deleteGroupingContent = (e, index) => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      groupingData: this.state.groupingData.filter(\r\n        (group, groupIndex) => index != groupIndex\r\n      ),\r\n    });\r\n  };\r\n  // ---------------------- Display accordion ----------------------------\r\n\r\n  onSubmitData = (e) => {\r\n    //console.log(\"heelo\");\r\n    e.preventDefault();\r\n    let submittedObject = {\r\n      country: this.state.selectedCountry,\r\n      bank: this.state.selectedBank,\r\n      groupingData: this.state.groupingData,\r\n    };\r\n    //console.log(submittedObject);\r\n    this.props.createCreditCardConfiguration(submittedObject).then(() => {\r\n      // console.log(\r\n      //   this.props.loadCreditCardConfigurationData.creditCardConfigSchemaData\r\n      // );\r\n    });\r\n  };\r\n\r\n  onChangeCountry = (event) => {\r\n    this.setState({\r\n      groupingData: [],\r\n      banks: [],\r\n      selectedBank: \"\",\r\n      selectedDropDowns: [],\r\n    });\r\n    //console.log(country.target.value);\r\n    let bankNames = new Array();\r\n\r\n    let selectedCountry = event.target.value;\r\n    this.state.allData.forEach(function (item) {\r\n      if (item.country === selectedCountry) {\r\n        bankNames.push(item.bank);\r\n      }\r\n    });\r\n    let distinctBanks = [...new Set(bankNames)];\r\n    this.setState({\r\n      banks: distinctBanks,\r\n      selectedCountry,\r\n    });\r\n    //Filtering Select information\r\n    let dropdowns = null;\r\n    this.state.dropDownData.forEach(function (item) {\r\n      if (item.country === selectedCountry) {\r\n        dropdowns = item.groupingData;\r\n      }\r\n    });\r\n    this.setState({ selectedDropDowns: dropdowns });\r\n  };\r\n\r\n  onChangeBank = (event) => {\r\n    let selectedBank = event.target.value;\r\n    let selectedGroupingData = [];\r\n    let selectedCountry = this.state.selectedCountry;\r\n    this.state.allData.forEach(function (item) {\r\n      if (item.bank === selectedBank && item.country === selectedCountry) {\r\n        selectedGroupingData = item.groupingData;\r\n      }\r\n    });\r\n    this.setState({\r\n      groupingData: selectedGroupingData,\r\n      selectedBank: selectedBank,\r\n    });\r\n    //console.log(\"this.state.selecetdBank in bank \" + this.state.selecetdBank);\r\n  };\r\n\r\n  render() {\r\n    if (this.state.allData.length < 0) {\r\n      return (\r\n        <div id=\"content\">\r\n          <div className=\"inner-container\">No Record Found</div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    let countries = new Array();\r\n    this.state.allData.forEach(function (item) {\r\n      countries.push(item.country);\r\n    });\r\n    let distinctCounties = [...new Set(countries)];\r\n\r\n    //console.log(this.state.selectedDropDowns);\r\n\r\n    return (\r\n      <div id=\"content\">\r\n        <div className=\"inner-container\">\r\n          <div className=\"page-header\">\r\n            <h2>Configure Credit Card</h2>\r\n          </div>\r\n          <div className=\"row margin-top-30\">\r\n            <div className=\"col-lg-12\">\r\n              <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-lg-4 boredr-right\">\r\n                      <div className=\"select-container country-selection\">\r\n                        <figure>\r\n                          <img src={COUNTRY_ICON} alt=\"country\" />\r\n                        </figure>\r\n                        <div className=\"form-group\">\r\n                          <label>Select Country</label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"country\"\r\n                            onChange={this.onChangeCountry}\r\n                          >\r\n                            <option value=\"\">Select</option>\r\n                            {distinctCounties.map((country) => {\r\n                              return (\r\n                                <option\r\n                                  value={country}\r\n                                  key={`country-${country}`}\r\n                                >\r\n                                  {country}\r\n                                </option>\r\n                              );\r\n                            })}\r\n                          </select>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-lg-4 boredr-right\">\r\n                      <div className=\"select-container bank-selection\">\r\n                        <figure>\r\n                          <img src={BANK_ICON} alt=\"bank\" />\r\n                        </figure>\r\n                        <div className=\"form-group\">\r\n                          <label>Select Bank</label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"bank\"\r\n                            onChange={this.onChangeBank}\r\n                            value={this.state.selecetdBank}\r\n                          >\r\n                            <option value=\"\">Select</option>\r\n                            {this.state.banks.map((bank) => {\r\n                              return (\r\n                                <option value={bank} key={`bank-${bank}`}>\r\n                                  {bank}\r\n                                </option>\r\n                              );\r\n                            })}\r\n                          </select>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    {/* <div className=\"col-lg-4\">\r\n                      <div className=\"select-container account-type-selection\">\r\n                        <figure>\r\n                          <img src={ACCOUNT_TYPE} alt=\"Account Type\" />\r\n                        </figure>\r\n                        <div className=\"form-group\">\r\n                          <label forName=\"Account type\">\r\n                            Select Account Type\r\n                          </label>\r\n                          <select className=\"form-control\">\r\n                            <option value=\"\">Single</option>\r\n                            <option value=\"\">Joint</option>\r\n                          </select>\r\n                        </div>\r\n                      </div>\r\n                    </div> */}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {this.state.groupingData.length > 0 && (\r\n                <form\r\n                  onSubmit={(e) => {\r\n                    this.onSubmitData(e);\r\n                  }}\r\n                >\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-lg-12\">\r\n                          <div id=\"accordion\" className=\"accordion\">\r\n                            {this.generateAccordion(this.state.groupingData)}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"card-footer text-align-right\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-lg-12\">\r\n                          <button\r\n                            type=\"submit\"\r\n                            className=\"btn btn-secondary float-right\"\r\n                          >\r\n                            Submit\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row\">\r\n                        <div className=\"col-lg-12\">\r\n                          {this.props.loadCreditCardConfigurationData\r\n                            .creditCardConfigResponseData &&\r\n                            this.props.loadCreditCardConfigurationData\r\n                              .creditCardConfigResponseData.error ===\r\n                              \"false\" && (\r\n                              <div\r\n                                className=\"alert alert-success alert-dismissible fade show\"\r\n                                role=\"alert\"\r\n                                style={{ margin: \"15px\" }}\r\n                              >\r\n                                {/*<strong>\r\n                                \r\n                                   {\r\n                                    this.props\r\n                                      .loadCreditCardConfigurationData\r\n                                      .creditCardConfigSchemaData\r\n                                      .errorMsg\r\n                                  }\r\n                                </strong> */}\r\n                                Credit Card configuration data has been\r\n                                submitted successfully\r\n                                <button\r\n                                  type=\"button\"\r\n                                  className=\"close\"\r\n                                  data-dismiss=\"alert\"\r\n                                  aria-label=\"Close\"\r\n                                >\r\n                                  <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                              </div>\r\n                            )}\r\n                          {this.props.loadCreditCardConfigurationData\r\n                            .creditCardConfigResponseData &&\r\n                            this.props.loadCreditCardConfigurationData\r\n                              .creditCardConfigResponseData.error ===\r\n                              \"true\" && (\r\n                              <div\r\n                                className=\"alert alert-warning alert-dismissible fade show\"\r\n                                role=\"alert\"\r\n                                style={{ margin: \"15px\" }}\r\n                              >\r\n                                <strong>\r\n                                  {\r\n                                    this.props.loadCreditCardConfigurationData\r\n                                      .creditCardConfigSchemaData.errorMsg\r\n                                  }\r\n                                </strong>\r\n                                <button\r\n                                  type=\"button\"\r\n                                  className=\"close\"\r\n                                  data-dismiss=\"alert\"\r\n                                  aria-label=\"Close\"\r\n                                >\r\n                                  <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                              </div>\r\n                            )}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ CreditCardConfigurationReducer }) => {\r\n  //console.log(CreditCardConfigurationReducer);\r\n  return {\r\n    loadCreditCardConfigurationData: CreditCardConfigurationReducer,\r\n  };\r\n};\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, {\r\n    loadCreditCardConfiguration,\r\n    createCreditCardConfiguration,\r\n  })(ConfigureCreditCard)\r\n);\r\n","import ConfigureCreditCard from \"./pages/configure-credit-card/configure-credit-card\";\r\n\r\nexport default {\r\n  pages: [\r\n    {\r\n      routeProps: {\r\n        path: \"/configure-credit-card\",\r\n        component: ConfigureCreditCard,\r\n      },\r\n      name: \"ConfigureCreditCard\",\r\n      type: \"superAdmin\",\r\n    },\r\n  ],\r\n};\r\n","import {\r\n  doLoadCreditCardConfigurationStarted,\r\n  doLoadCreditCardConfigurationSuccess,\r\n  doLoadCreditCardConfigurationError,\r\n  doSaveCreditCardConfigurationStarted,\r\n  doSaveCreditCardConfigurationSuccess,\r\n  doSaveCreditCardConfigurationError,\r\n} from \"./configure-credit-card\";\r\nimport Services from \"../../services\";\r\n\r\nexport const loadCreditCardConfiguration = () => {\r\n  return function loadCreditCardConfigurationAction(dispatch) {\r\n    dispatch(doLoadCreditCardConfigurationStarted());\r\n    return Services.APICallConfig.callAPIService(\"LOAD_CREDIT_CARD_CONFIG\")\r\n      .then((response) => {\r\n        //console.log(response);\r\n        dispatch(doLoadCreditCardConfigurationSuccess(response));\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"error response\", error);\r\n        dispatch(doLoadCreditCardConfigurationError(error));\r\n      });\r\n  };\r\n};\r\n\r\nexport const createCreditCardConfiguration = (configurationData) => {\r\n  return function createCreditCardConfigurationAction(dispatch) {\r\n    dispatch(doSaveCreditCardConfigurationStarted());\r\n\r\n    return Services.APICallConfig.callAPIService(\r\n      \"SAVE_CREDIT_CARD_CONFIG\",\r\n      configurationData\r\n    )\r\n      .then((response) => {\r\n        dispatch(doSaveCreditCardConfigurationSuccess(response));\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"error response\", error);\r\n        dispatch(doSaveCreditCardConfigurationError(error));\r\n      });\r\n  };\r\n};\r\n","import {\r\n  LOAD_CREDIT_CARD_CONFIGURATION_STARTED,\r\n  LOAD_CREDIT_CARD_CONFIGURATION_SUCCESS,\r\n  LOAD_CREDIT_CARD_CONFIGURATION_ERROR,\r\n  SAVE_CREDIT_CARD_CONFIGURATION_STARTED,\r\n  SAVE_CREDIT_CARD_CONFIGURATION_SUCCESS,\r\n  SAVE_CREDIT_CARD_CONFIGURATION_ERROR,\r\n} from \"./type\";\r\n\r\nexport const doLoadCreditCardConfigurationStarted = () => {\r\n  return {\r\n    type: LOAD_CREDIT_CARD_CONFIGURATION_STARTED,\r\n  };\r\n};\r\n\r\nexport const doLoadCreditCardConfigurationSuccess = (accountSchema) => {\r\n  return {\r\n    type: LOAD_CREDIT_CARD_CONFIGURATION_SUCCESS,\r\n    payload: accountSchema,\r\n  };\r\n};\r\n\r\nexport const doLoadCreditCardConfigurationError = (error) => {\r\n  return {\r\n    type: LOAD_CREDIT_CARD_CONFIGURATION_ERROR,\r\n    payload: error,\r\n  };\r\n};\r\n\r\nexport const doSaveCreditCardConfigurationStarted = () => {\r\n  return {\r\n    type: SAVE_CREDIT_CARD_CONFIGURATION_STARTED,\r\n  };\r\n};\r\n\r\nexport const doSaveCreditCardConfigurationSuccess = (accountInfo) => {\r\n  return {\r\n    type: SAVE_CREDIT_CARD_CONFIGURATION_SUCCESS,\r\n    payload: accountInfo,\r\n  };\r\n};\r\n\r\nexport const doSaveCreditCardConfigurationError = (error) => {\r\n  return {\r\n    type: SAVE_CREDIT_CARD_CONFIGURATION_ERROR,\r\n    payload: error,\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {\r\n  loadCreditCardSchema,\r\n  doSaveCreditCard,\r\n} from \"../../../../actions/credit-card\";\r\nimport CustomForm from \"../../../../reusable-components/CustomForm\";\r\n\r\nclass CreditCard extends Component {\r\n  state = {};\r\n\r\n  componentDidMount() {\r\n    let schemaInfo = {\r\n      bank_id: sessionStorage.getItem(\"bank_id\"),\r\n      country_id: sessionStorage.getItem(\"country_id\"),\r\n    };\r\n    this.props.loadCreditCardSchema(schemaInfo);\r\n  }\r\n\r\n  getCustomDate = () => {\r\n    var today = new Date();\r\n    var dd = String(today.getDate()).padStart(2, \"0\");\r\n    var mm = String(today.getMonth() + 1).padStart(2, \"0\"); //January is 0!\r\n    var yyyy = today.getFullYear();\r\n\r\n    today = yyyy + \"-\" + mm + \"-\" + dd; // 2020-09-24\r\n    return today;\r\n  };\r\n\r\n  onSubmitData = (formData) => {\r\n    let submittedData = {\r\n      account_info: formData,\r\n      processed_indicator: \"NI\",\r\n      current_date: this.getCustomDate(),\r\n    };\r\n    this.props.doSaveCreditCard(submittedData).then(() => {\r\n      //console.log(this.props.openYourAccountResponseData.openYourAccountData);\r\n    });\r\n    //console.log(submittedData);\r\n  };\r\n\r\n  render() {\r\n    //console.log(this.props.creditCardResponseData.creditCardSchemaData);\r\n    // return null;\r\n    return (\r\n      <div id=\"content\">\r\n        <div className=\"inner-container\">\r\n          <div className=\"page-header\">\r\n            <h2>Request a credit card</h2>\r\n          </div>\r\n          <p>Individual Credit Card Request Form</p>\r\n          <div className=\"row margin-top-30\">\r\n            <div className=\"col-lg-12\">\r\n              {this.props.creditCardResponseData.creditCardSchemaData &&\r\n                this.props.creditCardResponseData.creditCardSchemaData\r\n                  .formData && (\r\n                  <CustomForm\r\n                    className=\"open-account\"\r\n                    model={\r\n                      this.props.creditCardResponseData.creditCardSchemaData\r\n                        .formData.data\r\n                    }\r\n                    onSubmit={(model) => {\r\n                      this.onSubmitData(model);\r\n                    }}\r\n                  />\r\n                )}\r\n              {this.props.creditCardResponseData.creditCardData &&\r\n                this.props.creditCardResponseData.creditCardData.error ===\r\n                  \"false\" && (\r\n                  <div\r\n                    className=\"alert alert-success alert-dismissible fade show\"\r\n                    role=\"alert\"\r\n                  >\r\n                    {/* <strong>\r\n                      {\r\n                        this.props.creditCardResponseData\r\n                .creditCardSchemaData.successMsg\r\n                      }\r\n                    </strong> */}\r\n                    Your credit card validation request has been submitted\r\n                    successfully.\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"close\"\r\n                      data-dismiss=\"alert\"\r\n                      aria-label=\"Close\"\r\n                    >\r\n                      <span aria-hidden=\"true\">&times;</span>\r\n                    </button>\r\n                  </div>\r\n                )}\r\n              {this.props.creditCardResponseData.creditCardData &&\r\n                this.props.creditCardResponseData.creditCardData.error ===\r\n                  \"true\" && (\r\n                  <div\r\n                    className=\"alert alert-warning alert-dismissible fade show\"\r\n                    role=\"alert\"\r\n                  >\r\n                    Your credit card validation request has been unsuccessfull.\r\n                    {/* <strong>\r\n                      {\r\n                        this.props.creditCardResponseData\r\n                .creditCardSchemaData.errorMsg\r\n                      }\r\n                    </strong> */}\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"close\"\r\n                      data-dismiss=\"alert\"\r\n                      aria-label=\"Close\"\r\n                    >\r\n                      <span aria-hidden=\"true\">&times;</span>\r\n                    </button>\r\n                  </div>\r\n                )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ CreditCardReducer }) => {\r\n  return {\r\n    creditCardResponseData: CreditCardReducer,\r\n  };\r\n};\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, { loadCreditCardSchema, doSaveCreditCard })(\r\n    CreditCard\r\n  )\r\n);\r\n","import CreditCard from \"./pages/credit-card/credit-card\";\r\n\r\nexport default {\r\n  pages: [\r\n    {\r\n      routeProps: {\r\n        path: \"/credit-card\",\r\n        component: CreditCard,\r\n      },\r\n      name: \"CreditCard\",\r\n    },\r\n  ],\r\n};\r\n","import {\r\n  doLoadCreditCardStarted,\r\n  doLoadCreditCardSuccess,\r\n  doLoadCreditCardError,\r\n  doSaveCreditCardStarted,\r\n  doSaveCreditCardSuccess,\r\n  doSaveCreditCardError,\r\n} from \"./credit-card\";\r\nimport Services from \"../../services\";\r\n\r\nexport const loadCreditCardSchema = (loadData) => {\r\n  return function doCreditCardAction(dispatch) {\r\n    dispatch(doLoadCreditCardStarted());\r\n    return Services.APICallConfig.callAPIService(\"LOAD_CREDIT_CARD\", loadData)\r\n      .then((response) => {\r\n        //console.log(response);\r\n        dispatch(doLoadCreditCardSuccess(response));\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"error response\", error);\r\n        dispatch(doLoadCreditCardError(error));\r\n      });\r\n  };\r\n};\r\n\r\nexport const doSaveCreditCard = (accountData) => {\r\n  return function doSaveCreditCardAction(dispatch) {\r\n    dispatch(doSaveCreditCardStarted());\r\n\r\n    return Services.APICallConfig.callAPIService(\r\n      \"SAVE_CREDIT_CARD\",\r\n      accountData\r\n    )\r\n      .then((response) => {\r\n        dispatch(doSaveCreditCardSuccess(response));\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"error response\", error);\r\n        dispatch(doSaveCreditCardError(error));\r\n      });\r\n  };\r\n};\r\n","import {\r\n  LOAD_CREDIT_CARD_STARTED,\r\n  LOAD_CREDIT_CARD_SUCCESS,\r\n  LOAD_CREDIT_CARD_ERROR,\r\n  SAVE_CREDIT_CARD_STARTED,\r\n  SAVE_CREDIT_CARD_SUCCESS,\r\n  SAVE_CREDIT_CARD_ERROR,\r\n} from \"./type\";\r\n\r\nexport const doLoadCreditCardStarted = () => {\r\n  return {\r\n    type: LOAD_CREDIT_CARD_STARTED,\r\n  };\r\n};\r\n\r\nexport const doLoadCreditCardSuccess = (accountSchema) => {\r\n  return {\r\n    type: LOAD_CREDIT_CARD_SUCCESS,\r\n    payload: accountSchema,\r\n  };\r\n};\r\n\r\nexport const doLoadCreditCardError = (error) => {\r\n  return {\r\n    type: LOAD_CREDIT_CARD_ERROR,\r\n    payload: error,\r\n  };\r\n};\r\n\r\nexport const doSaveCreditCardStarted = () => {\r\n  return {\r\n    type: SAVE_CREDIT_CARD_STARTED,\r\n  };\r\n};\r\n\r\nexport const doSaveCreditCardSuccess = (accountInfo) => {\r\n  return {\r\n    type: SAVE_CREDIT_CARD_SUCCESS,\r\n    payload: accountInfo,\r\n  };\r\n};\r\n\r\nexport const doSaveCreditCardError = (error) => {\r\n  return {\r\n    type: SAVE_CREDIT_CARD_ERROR,\r\n    payload: error,\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport \"./card-transaction-rules.css\"\r\nimport { right } from \"@popperjs/core\";\r\nimport { RULE_MANAGEMENT_ICON } from \"../../../app-constant/images\";\r\nimport Axios from \"axios\";\r\nimport Toast from 'react-bootstrap/Toast';\r\n\r\n//import CustomForm from \"../../../../reusable-components/CustomForm\";\r\n\r\nclass CardTransactionRules extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      count_rule_active : true,\r\n      count_rule_limit : 3,\r\n      amount_rule_active : true,\r\n      amount_rule_limit : 2000,\r\n      pincode_rule_active: true,\r\n      pincode_rule_code : \"700156\",\r\n      time_rule_status : true,\r\n      time_rule_start_time : \"10PM\",\r\n      time_rule_end_time : \"5AM\",\r\n      loading: false,\r\n      show: false\r\n    }\r\n  }\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    console.log(\"submit --- \");\r\n    \r\n    const {\r\n      count_rule_active,\r\n      count_rule_limit,\r\n      amount_rule_active,\r\n      amount_rule_limit,\r\n      pincode_rule_active,\r\n      pincode_rule_code,\r\n      time_rule_status,\r\n      time_rule_start_time ,\r\n      time_rule_end_time,\r\n      loading\r\n    } = this.state;\r\n\r\n    console.log(\"values\",{\r\n      count_rule_active,\r\n      count_rule_limit,\r\n      amount_rule_active,\r\n      amount_rule_limit,\r\n      pincode_rule_active,\r\n      pincode_rule_code,\r\n      time_rule_status,\r\n      time_rule_start_time ,\r\n      time_rule_end_time,\r\n      loading\r\n    });\r\n\r\n    this.setShow(true);\r\n\r\n  } \r\n\r\n  onChange = e  => {\r\n    this.setState({...this.state, [e.target.name] : e.target.value});\r\n  }\r\n\r\n  setShow = e => {\r\n    this.setState({...this.state,show:e});\r\n  }\r\n\r\n\r\n  getUser = async Username => {\r\n    this.setState({ loading: true });\r\n\r\n    const res = await Axios.get(\r\n      `https://api.github.com/users/$(username)?client_id=${\r\n      process.env.REACT_CLIENT_ID\r\n      }&client_secret=${process.env.REACT_CLIENT_SECRET}`\r\n    );\r\n\r\n    this.setState({ user: res.data, loading: false });\r\n  }\r\n\r\n  clearUsers = () => this.setState({ users: [], loading: false });\r\n\r\n  render() {\r\n    const {\r\n      count_rule_active,\r\n      count_rule_limit,\r\n      amount_rule_active,\r\n      amount_rule_limit,\r\n      pincode_rule_active,\r\n      pincode_rule_code,\r\n      time_rule_status,\r\n      time_rule_start_time ,\r\n      time_rule_end_time,\r\n      loading,\r\n      show\r\n    } = this.state;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div style={{ height: \"110px\", maxWidth: \"100%\", backgroundColor: \"lavender\" }}>\r\n          <h1> <img className=\"manage-rules-img\" src={RULE_MANAGEMENT_ICON} alt=\"manage-rules-icon\" /> Manage Transaction Rules</h1>\r\n\r\n        </div>\r\n        <div style={{ paddingTop: \"15px\" }}>\r\n          <div style={{ border: \"1px solid lavender\" }}></div>\r\n          <form onSubmit={this.onSubmit}>\r\n            <div className=\"loader\"></div>\r\n            <div className=\"card-outer\">\r\n              <div className=\"card-line\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-sm-1\" style={{ width: \"10px\" }}>\r\n                  <input className=\"form-control\" type=\"checkbox\"\r\n                     name=\"count_rule_active\"                      \r\n                     checked={count_rule_active} \r\n                     onChange={(e) => {\r\n                      this.onChange({\r\n                        target: {\r\n                          name: e.target.name,\r\n                          value: e.target.checked,\r\n                        },\r\n                      });\r\n                    }} />                   \r\n                  </div>\r\n                  <div className=\"col-sm-5 fieldCenter\">\r\n                    Transactions per Hour\r\n                </div>\r\n                  <div className=\"col-sm-2 fieldCenter\" style={{ alignContent: \"right\", paddingRight: \"0px\", textAlign: \"right\" }}>\r\n                    Max :\r\n                </div>\r\n                  <div className=\"col-sm-3\" style={{ width: \"10px\" }}>\r\n                    <input type=\"text\" className=\"form-control\" name=\"count_rule_limit\" value={count_rule_limit} onChange={this.onChange} placeholder=\"UpperLimit\" />\r\n                  </div>\r\n\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"card-outer\">\r\n              <div className=\"card-line\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-sm-1\" style={{ width: \"10px\" }}>\r\n                    <input type=\"checkbox\"\r\n                     name=\"amount_rule_active\"\r\n                     className=\"form-control\"                      \r\n                     checked={amount_rule_active} \r\n                     onChange={(e) => {\r\n                      this.onChange({\r\n                        target: {\r\n                          name: e.target.name,\r\n                          value: e.target.checked,\r\n                        },\r\n                      });\r\n                    }} />\r\n                  </div>\r\n                  <div className=\"col-sm-5 fieldCenter\">\r\n                    Transaction Amount\r\n                </div>\r\n                  <div className=\"col-sm-2 fieldCenter\" style={{ alignContent: \"right\", paddingRight: \"0px\", textAlign: \"right\" }}>\r\n                    Max Amount :\r\n                </div>\r\n                  <div className=\"col-sm-3\" style={{ width: \"10px\" }}>\r\n                    <input type=\"text\" className=\"form-control\" name=\"amount_rule_limit\" value={amount_rule_limit} placeholder=\"UpperLimit\" onChange={this.onChange}/>\r\n                  </div>\r\n\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"card-outer\">\r\n              <div className=\"card-line\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-sm-1\" style={{ width: \"10px\" }}>\r\n                  <input type=\"checkbox\"\r\n                     name=\"pincode_rule_active\"                      \r\n                     checked={pincode_rule_active} \r\n                     className=\"form-control\"\r\n                     onChange={(e) => {\r\n                      this.onChange({\r\n                        target: {\r\n                          name: e.target.name,\r\n                          value: e.target.checked,\r\n                        },\r\n                      });\r\n                    }} />                   \r\n                  </div>\r\n                  <div className=\"col-sm-5 fieldCenter\">\r\n                    Address Validation\r\n                </div>\r\n                  <div className=\"col-sm-2 fieldCenter\" style={{ alignContent: \"right\", paddingRight: \"0px\", textAlign: \"right\" }}>\r\n                    ZipCode :\r\n                </div>\r\n                  <div className=\"col-sm-3\" style={{ width: \"10px\" }}>\r\n                    <input type=\"text\" className=\"form-control\" name=\"pincode_rule_code\" value={pincode_rule_code} placeholder=\"UpperLimit\"  onChange={this.onChange}/>\r\n                  </div>\r\n\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"card-outer\">\r\n              <div className=\"card-line\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-sm-1 fieldCenter\" style={{ width: \"10px\" }}>\r\n                  <input type=\"checkbox\"                \r\n                     name=\"time_rule_status\"                      \r\n                     checked={time_rule_status}\r\n                     className=\"form-control\" \r\n                     onChange={(e) => {\r\n                      this.onChange({\r\n                        target: {\r\n                          name: e.target.name,\r\n                          value: e.target.checked,\r\n                        },\r\n                      });\r\n                    }} />                     \r\n                  </div>\r\n                  <div className=\"col-sm-5 fieldCenter\">\r\n                    Time of Transaction\r\n                </div>\r\n                  <div className=\"col-sm-3\" >\r\n                    Start Time : &nbsp;\r\n                    <select className=\"form-control\" name=\"time_rule_start_time\" value={time_rule_start_time} onChange={this.onChange}>\r\n                        <option value=\"9PM\">09:00 PM</option>\r\n                        <option value=\"10PM\">10:00 PM</option>\r\n                        <option value=\"11PM\">11:00 PM</option>\r\n                        <option value=\"1AM\">01:00 AM</option>\r\n                    </select>\r\n                    \r\n                  </div>\r\n                  <div className=\"col-sm-3\" style={{ width: \"10px\" }}>\r\n                    End Time :  &nbsp;\r\n                      <select className=\"form-control\" name=\"time_rule_end_time\" value={time_rule_end_time} onChange={this.onChange}>\r\n                        <option value=\"4AM\">04:00 AM</option>\r\n                        <option value=\"5AM\">05:00 AM</option>\r\n                        <option value=\"6AM\">06:00 AM</option>\r\n                        <option value=\"7AM\">07:00 AM</option>\r\n                      </select>\r\n                  </div>\r\n\r\n                </div>\r\n              </div>\r\n            </div>\r\n             <div style={{paddingTop:\"15px\"}}>\r\n             <input type=\"submit\" className=\"btn btn-primary\" value=\"Set Rules\"></input>\r\n             </div> <div style={{paddingTop:\"15px\"}}>\r\n             <Toast onClose={() => this.setShow(false)} show={show} delay={3000} autohide>\r\n              <Toast.Header>\r\n                <img\r\n                  src=\"holder.js/20x20?text=%20\"\r\n                  className=\"rounded me-2\"\r\n                  alt=\"\"\r\n                />\r\n                <strong className=\"me-auto\">Message</strong>\r\n                <small>11 mins ago</small>\r\n              </Toast.Header>\r\n              <Toast.Body>Rules are successfully updated and Activated ! </Toast.Body>\r\n            </Toast>\r\n\r\n             </div>\r\n              \r\n          </form>\r\n        </div>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(CardTransactionRules);","\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Container, Row, Col, Card, Button, Badge, pill, bg, Table, sm, Modal } from 'react-bootstrap';\r\nimport \"./transaction-report.css\";\r\nimport axios from \"axios\";\r\n//import { useState } from 'react';\r\n\r\nconst TransactionReport = (props) => {\r\n\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n  const [pageSize, setPageSize] = useState(10);\r\n  const [pageCount, setPageCount] = useState(1);\r\n  const [pageWorkList, setPageWorkList] = useState([]);\r\n  const [pageChunks, setPageChunks] = useState([]);\r\n\r\n\r\n  useEffect(() => {\r\n    const splitArrayIntoChunksOfLen = () => {\r\n      let chunks = [], i = 0, n = props.fraudlist.length;\r\n      while (i < n) {\r\n        chunks.push(props.fraudlist.slice(i, i += pageSize));\r\n      }\r\n      // console.log(\"chunks\" , chunks);     \r\n      setPageChunks(chunks);\r\n      //  console.log(\"pgeChunks\", pageChunks);\r\n      setPageWorkList(chunks[pageNumber - 1]);\r\n      // console.log(\"pageWorklist\", pageWorkList);    \r\n    }\r\n    splitArrayIntoChunksOfLen();\r\n    setPageCount(Math.ceil(props.fraudlist.length / pageSize));\r\n  }, [pageNumber, pageSize, props.fraudlist]);\r\n\r\n\r\n  const nextPage = (e) => {\r\n\r\n    if (props.fraudlist.length > 0) {\r\n      let currentPage = pageNumber;\r\n      let newPage = currentPage + 1;\r\n      if (newPage > pageCount) {\r\n        setPageNumber(1)\r\n      } else {\r\n        setPageNumber(newPage);\r\n      }\r\n    }\r\n  }\r\n\r\n  const prevPage = (e) => {\r\n    if (props.fraudlist.length > 0) {\r\n      let currentPage = pageNumber;\r\n      let newPage = currentPage - 1;\r\n      if (newPage <= 0) {\r\n        setPageNumber(pageCount)\r\n      } else {\r\n        setPageNumber(newPage);\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  return (\r\n    <Modal\r\n      {...props}\r\n      size=\"lg\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\" style={{color:\"white\"}}>\r\n             Fradulent Transaction List\r\n          </Modal.Title>        \r\n      </Modal.Header>\r\n      <Modal.Body>\r\n\r\n        <Table striped hover>\r\n          <thead>\r\n            <tr>\r\n              <th>Transaction ID</th>\r\n              <th>Card Holder</th>\r\n              <th>Amount</th>\r\n              <th>Card Type</th>\r\n              <th>Category</th>\r\n              <th>ZipCode</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {\r\n              pageWorkList && pageWorkList.map((item, index) => {\r\n                return (\r\n                  <tr key={index}>\r\n                    <td style={{ textTransform: \"capitalize\" }}>{item._id.$oid}</td>\r\n                    <td style={{ textTransform: \"capitalize\" }}> {item.name}</td>\r\n                    <td style={{ textTransform: \"capitalize\" }}>{item.amount}</td>\r\n                    <td style={{ textTransform: \"capitalize\" }}>{item.card_type} </td>\r\n                    <td style={{ textTransform: \"capitalize\" }}>{item.merchant_category} </td>\r\n                    <td style={{ textTransform: \"capitalize\" }}>{item.zip_code} </td>\r\n                    <td>\r\n                      <span style={{ padding: \"3px\" }}><i className=\"fas fa-check-circle action-icon\" style={{ color: \"green\" }}></i></span>\r\n                      <span style={{ padding: \"3px\" }}><i className=\"far fa-times-circle action-icon\" style={{ color: \"red\" }}></i></span>\r\n                    </td>\r\n                  </tr>\r\n                )\r\n              })\r\n            }\r\n\r\n          </tbody>\r\n        </Table>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n\r\n        \r\n        \r\n        <button className=\"btn\" style={{ backgroundColor: \"blue\" }} onClick={prevPage}><i className=\"fa fa-chevron-left\" style={{ color: \"white\" }} ></i></button>\r\n        <span style={{ width: \"200px\" , textAlign:\"center\" }} >  Page : {pageNumber} / {pageCount}  </span>\r\n        \r\n        <button className=\"btn\" style={{ backgroundColor: \"blue\" }} onClick={nextPage}><i className=\"fa fa-chevron-right\" style={{ color: \"white\" }}></i></button>\r\n        <span style={{ width: \"200px\" }}></span>\r\n        <div style={{ float: \"right\" }}>\r\n          <Button onClick={props.onHide}>Close</Button>\r\n        </div>\r\n\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\n\r\nexport default TransactionReport;","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport \"./risk-dashboard.css\";\r\n//import { BarChart, Bar, XAxis, YAxis } from 'recharts';\r\nimport { LineChart, Line, YAxis, XAxis, CartesianGrid, Tooltip, Legend, PieChart, Pie, Cell } from 'recharts';\r\nimport { Container, Row, Col, Card, Button, Badge, pill, bg, Table, sm , Modal } from 'react-bootstrap';\r\n\r\n//import CustomForm from \"../../../../reusable-components/CustomForm\";\r\nimport TransactionReport from \"./transaction-report\";\r\n\r\nimport { getFradulentTransactions } from \"../../../actions/transaction-analyser\";\r\n\r\n\r\nclass RiskDashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      transactionModalShow: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getFradulentTransactions();\r\n  }\r\n\r\n  COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#AF19FF'];\r\n\r\n  pieData = [\r\n    {\r\n      \"name\": \"USA\",\r\n      \"value\": 68.85\r\n    },\r\n    {\r\n      \"name\": \"Russia\",\r\n      \"value\": 7.91\r\n    },\r\n    {\r\n      \"name\": \"Sweden\",\r\n      \"value\": 6.85\r\n    },\r\n    {\r\n      \"name\": \"Netherlands\",\r\n      \"value\": 6.14\r\n    },\r\n    {\r\n      \"name\": \"Others\",\r\n      \"value\": 10.25\r\n    }\r\n  ];\r\n\r\n  CustomTooltip = ({ active, payload, label }) => {\r\n    if (active) {\r\n      return (\r\n        <div className=\"custom-tooltip\" style={{ backgroundColor: '#ffff', padding: '5px', border: '1px solid #cccc' }}>\r\n          <label>{`${payload[0].name} : ${payload[0].value}%`}</label>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  data = [\r\n    {\r\n      \"name\": \"Jan 2021\",\r\n      \"Non-Fraudulent\": 3432,\r\n      \"Fraudulent\": 2342\r\n    },\r\n    {\r\n      \"name\": \"Feb 2021\",\r\n      \"Non-Fraudulent\": 2342,\r\n      \"Fraudulent\": 3246\r\n    },\r\n    {\r\n      \"name\": \"Mar 2021\",\r\n      \"Non-Fraudulent\": 4565,\r\n      \"Fraudulent\": 4556\r\n    },\r\n    {\r\n      \"name\": \"Apr 2021\",\r\n      \"Non-Fraudulent\": 6654,\r\n      \"Fraudulent\": 4465\r\n    },\r\n    {\r\n      \"name\": \"May 2021\",\r\n      \"Non-Fraudulent\": 8765,\r\n      \"Fraudulent\": 4553\r\n    }\r\n  ]\r\n\r\n  toggleTransactionReportModal = e => {\r\n    this.setState(prevState => ({transactionModalShow : !prevState.transactionModalShow}));\r\n    console.log(\" Toggle Transaction Report Modal\" ,this.state.transactionModalShow );\r\n    console.log(\"FraudList\" , this.state.fraudTransactions);\r\n    console.log(\"transactoin\",this.props.fraudTransactions);\r\n  }\r\n\r\n  \r\n\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n        <h1 className=\"riskHeadeer\">Fraud Detection Dashboard</h1>\r\n\r\n        <Container>\r\n\r\n          <Row style={{ paddingBottom: \"15px\" }}>\r\n            <Col>\r\n              <Card style={{ minWidth: '18rem', backgroundImage: \"linear-gradient(to right, rgb(49, 231, 245),rgb(137, 142, 245)\" }}>\r\n                <Card.Body>\r\n                  <Card.Title>Total POS Devices</Card.Title>\r\n                  <Card.Text style={{ fontSize: \"18px\", color: \"white\" }}>\r\n                    1230 Devices\r\n                  </Card.Text>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n\r\n            <Col>\r\n              <Card style={{ minWidth: '18rem', backgroundImage: \"linear-gradient(to right, rgb(37, 245, 82), rgb(110, 204, 127)\" }}>\r\n                <Card.Body>\r\n                  <Card.Title>Total Cards</Card.Title>\r\n                  <Card.Text style={{ fontSize: \"18px\", color: \"white\" }}>\r\n                    100M+ Cards\r\n                  </Card.Text>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n\r\n            <Col>\r\n              <Card style={{ minWidth: '18rem', backgroundImage: \"linear-gradient(to right, rgb(217, 102, 213), rgb(242, 206, 241)\" }}>\r\n                <Card.Body>\r\n                  <Card.Title>Reported Fraud Transactions</Card.Title>\r\n                  <Card.Text style={{ fontSize: \"18px\", color: \"white\" }}>\r\n                    91231 Transactions\r\n                  </Card.Text>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n\r\n\r\n\r\n            <Col>\r\n              <Card style={{ minWidth: '18rem', backgroundImage: \"linear-gradient(to right, rgb(247, 37, 86), rgb(217, 156, 161)\" }}>\r\n                <Card.Body>\r\n                  <Card.Title>Fraudulent POS Devices</Card.Title>\r\n                  <Card.Text style={{ fontSize: \"18px\", color: \"white\" }}>\r\n                    20 Devices\r\n                  </Card.Text>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n\r\n\r\n          <Row style={{ paddingTop: \"50px\" }}>\r\n            <Col>\r\n              <Card style={{ backgroundImage: \"linear-gradient(to right, orangered, orange\", color: \"white\", height: \"180px\" }}>\r\n                <Card.Body>\r\n                  <Card.Title style={{ color: \"darkred\" }}> Key Stats -  Daily Transaction Summary</Card.Title>\r\n                  <Card.Text style={{ color: \"white\" }}>\r\n\r\n                    <Row>\r\n                      <Col>\r\n                        <div style={{ fontSize: \"45px\", padding: \"20px\", width: \"190px\", color: \"yellow\" }}> 15 %</div>\r\n                        <div style={{ fontSize: \"14px\", padding: \"1px\" }}> Reported Fraud Transactions</div>\r\n                      </Col>\r\n\r\n                      <Col>\r\n                        <div style={{ fontSize: \"14px\", padding: \"1px\" }}>\r\n                          Total Transactions\r\n                            <div style={{ fontSize: \"20px\", color: \"darkred\" }}> 100 </div>\r\n                        </div >\r\n                        <div style={{ fontSize: \"14px\", padding: \"1px\" }}>\r\n                          Fraudulent Transactions  <div style={{ fontSize: \"20px\", color: \"darkred\" }}> 20 </div>\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n\r\n                  </Card.Text>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col xs={7}>\r\n              <LineChart width={600} height={200} data={this.data}\r\n                margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis dataKey=\"name\" />\r\n                <YAxis />\r\n                <Tooltip />\r\n                <Legend />\r\n                <Line type=\"monotone\" dataKey=\"Non-Fraudulent\" stroke=\"#0095FF\" />\r\n                <Line type=\"monotone\" dataKey=\"Fraudulent\" stroke=\"#FF0000\" />\r\n              </LineChart>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row style={{ paddingTop: \"25px\" }}>\r\n\r\n\r\n            <Col xs={7}>\r\n              <Card style={{ minWidth: '18rem', backgroundImage: \"linear-gradient(180deg, rgb(198, 242, 247), rgb(137, 204, 245)\" }}>\r\n                <Card.Body >\r\n                  <Card.Title> <span style={{ float: \"left\" }}>Fraud Transactions Reported  </span>\r\n                    <span className=\"modButton\" onClick={this.toggleTransactionReportModal}> Work List</span>\r\n                    <TransactionReport\r\n                      show={this.state.transactionModalShow}\r\n                      onHide={this.toggleTransactionReportModal}\r\n                      fraudlist={this.props.fraudTransactions}\r\n                    />\r\n                  </Card.Title>\r\n                  <Card.Text style={{ fontSize: \"18px\", color: \"blue\", paddingTop: \"20px\" }}>\r\n                    <Table striped bordered hover size=\"sm\">\r\n                      <thead>\r\n                        <tr>\r\n                          <th>Transaction ID</th>\r\n                          <th>Card Holder</th>\r\n                          <th>Amount</th>\r\n                          <th>Location</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        <tr>\r\n                          <td>7191-1231-1231</td>\r\n                          <td>Mark Twain</td>\r\n                          <td>199.99</td>\r\n                          <td>Kolkata</td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td>7191-1231-1232</td>\r\n                          <td>John Smith</td>\r\n                          <td>5999.99</td>\r\n                          <td>Mumbai</td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td>7191-1231-1221</td>\r\n                          <td>Wills Daverson</td>\r\n                          <td>8199.99</td>\r\n                          <td>Chennai</td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td>7191-1231-1123</td>\r\n                          <td>Peter Parker</td>\r\n                          <td>7163.99</td>\r\n                          <td>Kolkata</td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td>7191-1231-5711</td>\r\n                          <td>Cynthia Hildner</td>\r\n                          <td>9121.99</td>\r\n                          <td>Bangalore</td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td>7191-1231-6711</td>\r\n                          <td>Robert White</td>\r\n                          <td>7799.99</td>\r\n                          <td>Chennai</td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td>7191-1231-8218</td>\r\n                          <td>Jeremy Wallace</td>\r\n                          <td>12399.99</td>\r\n                          <td>Kochi</td>\r\n                        </tr>\r\n\r\n                      </tbody>\r\n                    </Table>\r\n                  </Card.Text>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n\r\n\r\n\r\n            <Col>\r\n              <Card style={{ minWidth: '18rem', backgroundImage: \"linear-gradient(180deg, rgb(148, 245, 100), #00FA9A\" }}>\r\n                <Card.Body>\r\n\r\n                  <Card.Title> <span style={{ float: \"left\" }}>POS Devices Report - Current Month  </span>\r\n                    <span style={{ float: \"right\", backgroundColor: \"green\", color: \"turquoise\", padding: \"5px\", fontSize: \"12px\", borderRadius: \"5px\" }}> View All</span>\r\n                  </Card.Title>\r\n\r\n                  <Card.Text style={{ fontSize: \"18px\", color: \"darkgrey\", paddingTop: \"20px\" }}>\r\n                    <Table striped bordered hover size=\"sm\">\r\n                      <thead>\r\n                        <tr>\r\n                          <th>POS ID</th>\r\n                          <th>Location</th>\r\n                          <th>Total Transaction</th>\r\n                          <th>Fraud Transaction</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        <tr>\r\n                          <td>1011</td>\r\n                          <td>Kolkata</td>\r\n                          <td>6352</td>\r\n                          <td>10</td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td>8126</td>\r\n                          <td>Bangalore</td>\r\n                          <td>7282</td>\r\n                          <td>27</td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td>7151</td>\r\n                          <td>Bangalore</td>\r\n                          <td>88</td>\r\n                          <td>12</td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td>5511</td>\r\n                          <td>Mumbai</td>\r\n                          <td>128</td>\r\n                          <td>10</td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td>5598</td>\r\n                          <td>Chennai</td>\r\n                          <td>233</td>\r\n                          <td>15</td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td>1861</td>\r\n                          <td>Kolkata</td>\r\n                          <td>12139</td>\r\n                          <td>123</td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td>4411</td>\r\n                          <td>Mumbai</td>\r\n                          <td>3026</td>\r\n                          <td>10</td>\r\n                        </tr>\r\n                      </tbody>\r\n                    </Table>\r\n                  </Card.Text>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row style={{ padding: \"20px\" }}>\r\n\r\n            <Col>\r\n              <Row style={{ paddingTop: \"20px\", borderRadius: \"2rem\", backgroundImage: \"linear-gradient(30deg, #DA70D6 ,#D8BFD8,\t#DA70D6 , #D8BFD8\" }}>\r\n                <Col>\r\n                  <Card>                \r\n                    <Card.Body>\r\n                    <h4 style={{color:\"blue\"}}>Fraudulent Transactions</h4>\r\n                      <Table hover size=\"sm\" style={{height:\"170px\" , overflowY : \"scroll\" , display : \"block\"}}>\r\n                        <thead>\r\n                          <tr>\r\n                            <th>#</th>\r\n                            <th>Country</th>\r\n                            <th>Total Transactions</th>\r\n                            <th>Fradulent Transaction</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          <tr>\r\n                            <td>1</td>\r\n                            <td>USA</td>\r\n                            <td>60%</td>\r\n                            <td>20%</td>\r\n                          </tr>\r\n                          <tr>\r\n                            <td>2</td>\r\n                            <td>Russia</td>\r\n                            <td>34%</td>\r\n                            <td>12%</td>\r\n                          </tr>\r\n                          <tr>\r\n                            <td>3</td>\r\n                            <td>UAE</td>\r\n                            <td>63%</td>\r\n                            <td>23%</td>\r\n                          </tr>\r\n                          <tr>\r\n                            <td>4</td>\r\n                            <td>Sweden</td>\r\n                            <td>30%</td>\r\n                            <td>13%</td>\r\n                          </tr>\r\n                          <tr>\r\n                            <td>5</td>\r\n                            <td>Netherlands</td>\r\n                            <td>20%</td>\r\n                            <td>60%</td>\r\n                          </tr>\r\n                          <tr>\r\n                            <td>6</td>\r\n                            <td>Others</td>\r\n                            <td>20%</td>\r\n                            <td>60%</td>\r\n                          </tr>                                                                                                     \r\n                        </tbody>\r\n                      </Table>\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n                <Col xs={6}>\r\n                  <div>                    \r\n                    <PieChart width={530} height={270}>\r\n                      <Pie data={this.pieData} color=\"#000000\" dataKey=\"value\" nameKey=\"name\" cx=\"50%\" cy=\"50%\" outerRadius={120} fill=\"#8884d8\" >\r\n                        {\r\n                          this.pieData.map((entry, index) => <Cell key={`cell-${index}`} fill={this.COLORS[index % this.COLORS.length]} />)\r\n                        }\r\n                      </Pie>\r\n                      <Tooltip content={<this.CustomTooltip />} />\r\n                      <Legend/>\r\n                    </PieChart>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n\r\n        </Container>\r\n\r\n        <h1 className=\"riskHeadeer\">  </h1>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ TransactionAnalyserReducer }) => {\r\n\r\n  //console.log(\"transactionReducer --\" , TransactionAnalyserReducer.FraudTransactionList );\r\n   return {\r\n      fraudTransactions : TransactionAnalyserReducer.FraudTransactionList\r\n   };\r\n};\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, { \r\n       getFradulentTransactions \r\n     })( RiskDashboard)\r\n);\r\n\r\n//export default withRouter(RiskDashboard);","import Authentication from \"./authentication-module\";\r\nimport Dashboard from \"./dashboard-module\";\r\nimport OpenYourAccount from \"./open-your-account-module\";\r\nimport SuperAdminDashboard from \"./superadmin-dashboard-module\";\r\nimport ConfigureCreateYourAccount from \"./configure-create-your-account-module\";\r\nimport ConfigureSelectMaster from \"./configure-select-master-module\";\r\nimport ConfigureDormatAccountModule from \"./configure-dormat-account-module\";\r\nimport DormatAccountModule from \"./dormat-account-module\";\r\nimport ConfigureChequeBook from \"./configure-cheque-book-module\";\r\nimport Chequebook from \"./cheque-book-module\";\r\nimport ConfigureCreditCard from \"./configure-credit-card-module\";\r\nimport CreditCard from \"./credit-card-module\";\r\nimport TransactionAnalyzer from \"./transaction-analyzer-module\"\r\n\r\nexport default [\r\n  Authentication,\r\n  Dashboard,\r\n  OpenYourAccount,\r\n  SuperAdminDashboard,\r\n  ConfigureCreateYourAccount,\r\n  ConfigureSelectMaster,\r\n  ConfigureDormatAccountModule,\r\n  DormatAccountModule,\r\n  ConfigureChequeBook,\r\n  Chequebook,\r\n  ConfigureCreditCard,\r\n  CreditCard,\r\n  TransactionAnalyzer\r\n];\r\n","import CardTransactionRules from \"./pages/card-transaction-rules\";\r\nimport RiskDashboard from \"./pages/risk-dashboard\";\r\n\r\nexport default {\r\n    pages: [\r\n        {\r\n            routeProps: {\r\n                path: \"/transaction-rules\",\r\n                component : CardTransactionRules,\r\n            },\r\n            name: \"CardTransactionRules\"\r\n        },\r\n        {\r\n            routeProps: {\r\n                path: \"/risk-analysis\",\r\n                component : RiskDashboard,\r\n            },\r\n            name: \"RiskAnalysis\"\r\n        }\r\n    ]\r\n}","import {\r\n    loadFradulentTransactions,\r\n    loadFradulentTransactionsSuccess,\r\n    loadFradulentTransactionsError\r\n} from \"./transaction-analyser\";\r\nimport Services from \"../../services\"; \r\n\r\nexport const getFradulentTransactions = () => {\r\n    return function getAllFradulentTransactions(dispatch) {\r\n        dispatch(loadFradulentTransactions());\r\n        return Services.APICallConfig.callAPIService(\r\n            \"LOAD_FRADULENT_TRANS\"\r\n        )\r\n        .then((response) => {\r\n            dispatch(loadFradulentTransactionsSuccess(response));\r\n        })\r\n        .catch((error) => {\r\n            console.log(\"error response\", error);\r\n            dispatch(loadFradulentTransactionsError(error))\r\n        })\r\n    }\r\n}","import {\r\n    LOAD_FRADULENT_TRANS_STARTED,\r\n    LOAD_FRADULENT_TRANS_SUCCESS, \r\n    LOAD_FRADULENT_TRANS_ERROR\r\n} from \"./type.js\";\r\n\r\n\r\nexport const loadFradulentTransactions = () => {\r\n    return {\r\n      type: LOAD_FRADULENT_TRANS_STARTED,\r\n    };\r\n  };\r\n\r\n  export const loadFradulentTransactionsSuccess = (result) => {\r\n    return {\r\n      type: LOAD_FRADULENT_TRANS_SUCCESS,\r\n      payload: result\r\n    };\r\n  };\r\n\r\n  export const loadFradulentTransactionsError = (error) => {\r\n    return {\r\n      type: LOAD_FRADULENT_TRANS_ERROR,\r\n      payload: error\r\n    };\r\n  };","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport $ from \"jquery\";\r\nimport { USER_ICON, USER_IMAGE } from \"../../app-constant/images\";\r\nimport \"./header.css\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass Header extends Component {\r\n  componentDidMount() {\r\n    $(document).ready(function () {\r\n      $(\"#sidebarCollapse\").on(\"click\", function () {\r\n        $(\"#sidebar\").toggleClass(\"active\");\r\n      });\r\n    });\r\n  }\r\n\r\n  signOut = () => {\r\n    sessionStorage.removeItem(\"token\");\r\n    sessionStorage.removeItem(\"isAdmin\");\r\n    return <Redirect to=\"/\" />;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n        <div className=\"container-fluid\">\r\n          <button\r\n            type=\"button\"\r\n            id=\"sidebarCollapse\"\r\n            className=\"btn hamburger\"\r\n          ></button>\r\n          {sessionStorage.getItem(\"isAdmin\") === \"false\" ? (\r\n            <Link to=\"/dashboard\" className=\"navbar-brand\"></Link>\r\n          ) : (\r\n            <Link to=\"/superadmindashboard\" className=\"navbar-brand\"></Link>\r\n          )}\r\n          <button\r\n            className=\"btn btn-dark d-inline-block d-lg-none ml-auto\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <i className=\"fas fa-align-justify\"></i>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"nav navbar-nav ml-auto\">\r\n              <li className=\"nav-item \">\r\n                <div className=\"btn-group pull-right user-profile-dropdown\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn dropdown-toggle no-bg\"\r\n                    data-toggle=\"dropdown\"\r\n                    aria-haspopup=\"true\"\r\n                    aria-expanded=\"false\"\r\n                  >\r\n                    <img src={USER_ICON} alt=\"\" />\r\n                  </button>\r\n                  <div className=\"dropdown-menu dropdown-menu-right\">\r\n                    <div className=\"user-profile\">\r\n                      <div className=\"profile-pic\">\r\n                        <img src={USER_IMAGE} alt=\"\" />\r\n                      </div>\r\n                      <p className=\"profile-des\">\r\n                        John\r\n                        <span>sample@sample.email.com</span>\r\n                      </p>\r\n                    </div>\r\n                    <Link\r\n                      to=\"\"\r\n                      className=\"dropdown-item btn-logout\"\r\n                      onClick={this.signOut}\r\n                    >\r\n                      Log out\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { USER_IMAGE } from \"../../app-constant/images\";\r\n\r\nconst Sidebar = (props) => {\r\n  return (\r\n    <nav id=\"sidebar\">\r\n      <div className=\"user-profile\">\r\n        <div className=\"profile-pic\">\r\n          <img src={USER_IMAGE} alt=\"\" />\r\n        </div>\r\n        <p className=\"profile-des\">John</p>\r\n      </div>\r\n      <ul className=\"list-unstyled components\">\r\n        <li>\r\n          <Link to=\"/create-your-account\" className=\"open-your-account\">\r\n            Create Your Account\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/dormat-account\" className=\"process-dormant-account\">\r\n            Activate Dormant Account\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/credit-card\" className=\"validate-your-credit-card\">\r\n            Credit Card Processing\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/cheque-book-request\" className=\"process-cheque-book\">\r\n            Request Cheque Book\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { USER_IMAGE } from \"../../app-constant/images\";\r\n\r\nconst SuperAdminSidebar = (props) => {\r\n  return (\r\n    <nav id=\"sidebar\">\r\n      <div className=\"user-profile\">\r\n        <div className=\"profile-pic\">\r\n          <img src={USER_IMAGE} alt=\"\" />\r\n        </div>\r\n        <p className=\"profile-des\">John</p>\r\n      </div>\r\n      <ul className=\"list-unstyled components\">\r\n        <li>\r\n          <Link\r\n            to=\"/configure-create-your-account\"\r\n            className=\"open-your-account\"\r\n          >\r\n            Configure Account\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link\r\n            to=\"/configure-select-master\"\r\n            className=\"process-dormant-account\"\r\n          >\r\n            Configure Master Data\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link\r\n            to=\"/configure-dormat-account\"\r\n            className=\"process-dormant-account\"\r\n          >\r\n            Configure Dormant Data\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/configure-cheque-book\" className=\"process-dormant-account\">\r\n            Configure Chequebook\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/configure-credit-card\" className=\"process-dormant-account\">\r\n            Configure Credit Card\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default SuperAdminSidebar;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { withRouter } from \"react-router\";\r\nimport \"./App.css\";\r\nimport modules from \"./app-modules\";\r\nimport Login from \"./app-modules/authentication-module/pages/login/login\";\r\nimport Header from \"./core-components/header/header\";\r\nimport Sidebar from \"./core-components/sidebar/sidebar\";\r\n\r\nimport SuperAdminSidebar from \"./core-components/superadmin-sidebar/superadmin-sidebar\";\r\n\r\nconst SecretRoute = ({ component: Component, token, type, ...rest }) => {\r\n  if (token !== null) {\r\n    return <Route {...rest} render={(props) => <Component {...props} />} />;\r\n  } else {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n};\r\n\r\nconst getSideBar = (token, role) => {\r\n  if (token !== null && role === \"employee\") {\r\n    return <Sidebar />;\r\n  } else if (token !== null && role === \"super_admin\") {\r\n    return <SuperAdminSidebar />;\r\n  }\r\n};\r\n\r\nconst getDashboradMenu = (token, role, currentLoc) => {\r\n  //console.log(token, role);\r\n  if (\r\n    token !== null &&\r\n    role === \"employee\" &&\r\n    (currentLoc === \"/\" ||\r\n      currentLoc === \"/superadmindashboard\" ||\r\n      currentLoc === \"/configure-create-your-account\" ||\r\n      currentLoc === \"/configure-select-master\" ||\r\n      currentLoc === \"/configure-dormat-account\" ||\r\n      currentLoc === \"/configure-cheque-book\" ||\r\n      currentLoc === \"/configure-credit-card\")\r\n  ) {\r\n    return <Redirect to=\"/dashboard\" />;\r\n  } else if (\r\n    token !== null &&\r\n    role === \"super_admin\" &&\r\n    (currentLoc === \"/\" ||\r\n      currentLoc === \"/dashboard\" ||\r\n      currentLoc === \"/create-your-account\" ||\r\n      currentLoc === \"/dormat-account\" ||\r\n      currentLoc === \"/cheque-book-request\" ||\r\n      currentLoc === \"/credit-card\")\r\n  ) {\r\n    return <Redirect to=\"/superadmindashboard\" />;\r\n  } else {\r\n    return <Route path=\"/\" exact component={Login} />;\r\n  }\r\n};\r\n\r\nconst App = withRouter(({ location }) => {\r\n\r\n  let role =  sessionStorage.getItem(\"role\");\r\n  let token = sessionStorage.getItem(\"token\");\r\n\r\n  //let role =  \"super_admin\" ;// sessionStorage.getItem(\"role\");\r\n  //let token = \"super_admin\" ; //sessionStorage.getItem(\"token\");\r\n  let currentLoc = location.pathname;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {token !== null && <Header />}\r\n      <div className=\"wrapper\">\r\n        {getSideBar(token, role)}\r\n        <div id=\"content\">\r\n          {getDashboradMenu(token, role, currentLoc)}\r\n\r\n          {modules.map((module) =>\r\n            module.pages.map((page, index) => {\r\n              //console.log(page);\r\n              return (\r\n                <SecretRoute\r\n                  path={page.routeProps.path}\r\n                  type={page.type}\r\n                  exact\r\n                  component={page.routeProps.component}\r\n                  key={index}\r\n                  currentLocation={location.pathname}\r\n                  token={token}\r\n                />\r\n              );\r\n            })\r\n          )}\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n});\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { getStore } from \"./store\";\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './assets/css/custom.css';\r\nimport './assets/css/custom.responsive.css';\r\n\r\n\r\nimport 'popper.js/dist/popper.min.js';\r\nimport 'bootstrap/dist/js/bootstrap.min.js';\r\nimport '@fortawesome/fontawesome-free/js/all';\r\n\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst store = getStore();\r\n// console.log(store.getState());\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import { combineReducers } from \"redux\";\r\nimport authenticationReducer from \"./authentication-reducer\";\r\nimport openYourAccountReducer from \"./open-your-account-reducer\";\r\nimport createYourAccountConfigationReducer from \"./create-your-account-configuration-reducer\";\r\nimport selectMasterReducer from \"./select-master-configuration-reducer\";\r\nimport DashboardReducer from \"./dashboard-reducer\";\r\nimport DormatAccountConfigurationReducer from \"./dormat-account-configuration-reducer\";\r\nimport DormatAccountReducer from \"./dormat-account-reducer\";\r\nimport ChequebookConfigurationReducer from \"./chequebook-configuration-reducer\";\r\nimport ChequebookReducer from \"./chequebook-reducer\";\r\nimport CreditCardConfigurationReducer from \"./configure-credit-card-reducer\";\r\nimport CreditCardReducer from \"./credit-card-reducer\";\r\nimport TransactionAnalyserReducer from \"./transaction-analyser-reducer\";\r\n\r\nexport default function getRootReducer() {\r\n  return combineReducers({\r\n    authenticationReducer,\r\n    openYourAccountReducer,\r\n    createYourAccountConfigationReducer,\r\n    selectMasterReducer,\r\n    DashboardReducer,\r\n    DormatAccountConfigurationReducer,\r\n    DormatAccountReducer,\r\n    ChequebookConfigurationReducer,\r\n    ChequebookReducer,\r\n    CreditCardConfigurationReducer,\r\n    CreditCardReducer,\r\n    TransactionAnalyserReducer\r\n  });\r\n}\r\n","//const baseURL = \"http://158.176.168.112:5000\";\r\n//const baseURL = \"http://localhost:5000\";\r\n//const testURL = \"http://localhost:2010\";\r\n//const baseURL = \"https://cma-edge-banking.ml\";\r\n//const baseURL = \"http://edge-open-banking-api-ibm-cloud-edge-satellite.classic-cluster-satellite-6fb0b86391cd68c8282858623a1dddff-0000.upi.containers.appdomain.cloud\"\r\n//const baseURL = \"http://edge-open-banking-api-ibm-cloud-edge-banking-app.appdev-cloudnativ-915719-6fb0b86391cd68c8282858623a1dddff-0000.eu-gb.containers.appdomain.cloud\"\r\n//const baseURL = \"http://edge-open-api-fs-cloud-app-test-open-banking.mgmt-pot01-cluster-1fa025a294811d2b43b68d6ffd4c8b58-i000.us-east.containers.appdomain.cloud\"\r\n//const baseURL = \"http://158.176.180.100:5000\";\r\n  //const baseURL = \"http://edge-api-edge-open-banking-tcs.workshop-ocp46-four-bb0dafd08526894d1a8ae848e8bd8099-0000.eu-de.containers.appdomain.cloud\"\r\nconst baseURL = \"https://edge-api-edge-open-banking-tcs.workshop-ocp46-four-bb0dafd08526894d1a8ae848e8bd8099-0000.eu-de.containers.appdomain.cloud\"\r\n\r\n  const apiConstant = {\r\n  headerOptions: {\r\n    OptionContentTypeJSON: {\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    },\r\n    OptionAccept: {\r\n      headers: { Accept: \"application/json\" },\r\n    },\r\n    OptionContentTypeFormData: {\r\n      headers: { \"Content-Type\": \"multipart/form-data\" },\r\n    },\r\n  },\r\n  endPoint: {\r\n    SIGN_IN: {\r\n      url: `${baseURL}/login`,\r\n      //url: `http://localhost:2010/login`,\r\n      type: \"post\",\r\n      //headerType: \"OptionContentTypeJSON\",\r\n    },\r\n    LOAD_OPEN_YOUR_ACCOUNT: {\r\n      //url: `http://localhost:2010/loadAccountConfigurationFront`,\r\n      url: `${baseURL}/fetch_account_form_details`,\r\n      type: \"post\",\r\n      // headerType: \"OptionContentTypeJSONToken\",\r\n    },\r\n    OPEN_YOUR_ACCOUNT: {\r\n      url: `${baseURL}/create_bank_account`,\r\n      type: \"post\",\r\n      //headerType: \"OptionContentTypeJSONToken\",\r\n    },\r\n    LOAD_CREATE_YOUR_ACCOUNT_CONFIG: {\r\n      //url: `http://localhost:2010/loadAccountConfiguration`,\r\n      url: `${baseURL}/fetch_config_obj`,\r\n      type: \"post\",\r\n      //headerType: \"OptionContentTypeJSONToken\",\r\n    },\r\n    SAVE_CREATE_YOUR_ACCOUNT_CONFIG: {\r\n      url: `${baseURL}/update_data_to_config_obj`,\r\n      type: \"post\",\r\n      //headerType: \"OptionContentTypeJSONToken\",\r\n    },\r\n    LOAD_SELECT_MASTER_CONFIG: {\r\n      //url: `http://localhost:2010/loadSelectMaster`,\r\n      url: `${baseURL}/fetch_config_obj`,\r\n      type: \"post\",\r\n      //headerType: \"OptionContentTypeJSONToken\",\r\n    },\r\n    SAVE_SELECT_MASTER_CONFIG: {\r\n      //url: `http://localhost:2010/saveSelectMasterConfig`,\r\n      url: `${baseURL}/update_data_to_config_obj`,\r\n      type: \"post\",\r\n      //headerType: \"OptionContentTypeJSONToken\",\r\n    },\r\n    EMAIL_VERFICATION: {\r\n      //url: `http://localhost:2010/emailVerification`,\r\n      url: `${baseURL}/request_otp`,\r\n      type: \"post\",\r\n      //headerType: \"OptionContentTypeJSONToken\",\r\n    },\r\n    OTP_VERFICATION: {\r\n      //url: `http://localhost:2010/otpVerification`,\r\n      url: `${baseURL}/validate_otp`,\r\n      type: \"post\",\r\n      //headerType: \"OptionContentTypeJSONToken\",\r\n    },\r\n    LOAD_BAR_DATA: {\r\n      url: `${baseURL}/get_processed_indicator_count`,\r\n      //url: `${testURL}/syncData`,\r\n      type: \"post\",\r\n      //headerType: \"OptionContentTypeJSONToken\",\r\n    },\r\n    LOAD_DORMAT_ACCOUNT_CONFIG: {\r\n      //url: `http://localhost:2010/loadAccountConfiguration`,\r\n      url: `${baseURL}/fetch_dormant_config_obj`,\r\n      type: \"post\",\r\n      //headerType: \"OptionContentTypeJSONToken\",\r\n    },\r\n    SAVE_DORMAT_ACCOUNT_CONFIG: {\r\n      url: `${baseURL}/update_dormant_config_obj_data`,\r\n      type: \"post\",\r\n      //headerType: \"OptionContentTypeJSONToken\",\r\n    },\r\n    LOAD_DORMAT_ACCOUNT: {\r\n      //url: `http://localhost:2010/loadAccountConfigurationFront`,\r\n      url: `${baseURL}/fetch_dormant_account_form`,\r\n      type: \"post\",\r\n      // headerType: \"OptionContentTypeJSONToken\",\r\n    },\r\n    SAVE_DORMAT_ACCOUNT: {\r\n      url: `${baseURL}/create_dormant_account_request`,\r\n      type: \"post\",\r\n      //headerType: \"OptionContentTypeJSONToken\",\r\n    },\r\n    LOAD_DORMANT_BAR_DATA: {\r\n      url: `${baseURL}/get_dormant_processed_count`,\r\n      //url: `${testURL}/syncData`,\r\n      type: \"post\",\r\n      //headerType: \"OptionContentTypeJSONToken\",\r\n    },\r\n    LOAD_CHEQUEBOOK_CONFIG: {\r\n      //url: `http://localhost:2010/loadAccountConfiguration`,\r\n      url: `${baseURL}/fetch_cheque_book_config`,\r\n      type: \"post\",\r\n      //headerType: \"OptionContentTypeJSONToken\",\r\n    },\r\n    SAVE_CHEQUEBOOK_CONFIG: {\r\n      url: `${baseURL}/update_cheque_book_config`,\r\n      type: \"post\",\r\n      //headerType: \"OptionContentTypeJSONToken\",\r\n    },\r\n    LOAD_CHEQUE_BOOK: {\r\n      //url: `http://localhost:2010/loadAccountConfigurationFront`,\r\n      url: `${baseURL}/fetch_cheque_book_form`,\r\n      type: \"post\",\r\n      // headerType: \"OptionContentTypeJSONToken\",\r\n    },\r\n    SAVE_CHEQUE_BOOK: {\r\n      url: `${baseURL}/create_cheque_book_request`,\r\n      type: \"post\",\r\n      //headerType: \"OptionContentTypeJSONToken\",\r\n    },\r\n    LOAD_CHEQUEBOOK_BAR_DATA: {\r\n      url: `${baseURL}/get_cheque_processed_count`,\r\n      //url: `${testURL}/syncData`,\r\n      type: \"post\",\r\n      //headerType: \"OptionContentTypeJSONToken\",\r\n    },\r\n    LOAD_CREDIT_CARD_CONFIG: {\r\n      //url: `http://localhost:2010/loadAccountConfiguration`,\r\n      url: `${baseURL}/fetch_credit_card_config`,\r\n      type: \"post\",\r\n      //headerType: \"OptionContentTypeJSONToken\",\r\n    },\r\n    SAVE_CREDIT_CARD_CONFIG: {\r\n      url: `${baseURL}/update_credit_card_config`,\r\n      type: \"post\",\r\n      //headerType: \"OptionContentTypeJSONToken\",\r\n    },\r\n    LOAD_CREDIT_CARD: {\r\n      //url: `http://localhost:2010/loadAccountConfigurationFront`,\r\n      url: `${baseURL}/fetch_credit_card_form`,\r\n      type: \"post\",\r\n      // headerType: \"OptionContentTypeJSONToken\",\r\n    },\r\n    SAVE_CREDIT_CARD: {\r\n      url: `${baseURL}/create_credit_card_request`,\r\n      type: \"post\",\r\n      //headerType: \"OptionContentTypeJSONToken\",\r\n    },\r\n    LOAD_CREDIT_CARD_BAR_DATA: {\r\n      url: `${baseURL}/get_credit_processed_count`,\r\n      //url: `${testURL}/syncData`,\r\n      type: \"post\",\r\n      //headerType: \"OptionContentTypeJSONToken\",\r\n    },\r\n    LOAD_FRADULENT_TRANS: {\r\n      url: `${baseURL}/get_fraud_transactions`,\r\n      //url: `${testURL}/syncData`,\r\n      type: \"get\",\r\n      //headerType: \"OptionContentTypeJSONToken\",\r\n    },\r\n  },\r\n};\r\nmodule.exports = apiConstant;\r\n"],"sourceRoot":""}